2019/10/04 11:17:55,787 INFO   main                  net.cyweb.EurekaApp.logStartupProfileInfo(SpringApplication.java:597) - The following profiles are active: local
2019/10/04 11:17:55,796 INFO   main                  org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext.prepareRefresh(AbstractApplicationContext.java:583) - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@71b3bc45: startup date [Fri Oct 04 11:17:55 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@247d8ae
2019/10/04 11:17:56,281 INFO   main                  org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:263) - BeanFactory id=4e058b3b-2e8f-3bd4-a6bc-de54eac03491
2019/10/04 11:17:56,292 INFO   main                  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155) - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019/10/04 11:17:56,326 INFO   main                  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$e32e63fd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019/10/04 11:17:56,333 INFO   main                  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$cd1bc0b9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019/10/04 11:17:56,546 INFO   main                  org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.initialize(TomcatEmbeddedServletContainer.java:89) - Tomcat initialized with port(s): 8001 (http)
2019/10/04 11:17:56,552 INFO   main                  org.apache.catalina.core.StandardService.log(DirectJDKLog.java:180) - Starting service [Tomcat]
2019/10/04 11:17:56,553 INFO   main                  org.apache.catalina.core.StandardEngine.log(DirectJDKLog.java:180) - Starting Servlet Engine: Apache Tomcat/8.5.27
2019/10/04 11:17:56,634 INFO   localhost-startStop-1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(DirectJDKLog.java:180) - Initializing Spring embedded WebApplicationContext
2019/10/04 11:17:56,634 INFO   localhost-startStop-1 org.springframework.web.context.ContextLoader.prepareEmbeddedWebApplicationContext(EmbeddedWebApplicationContext.java:276) - Root WebApplicationContext: initialization completed in 838 ms
2019/10/04 11:17:57,031 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'metricsFilter' to: [/*]
2019/10/04 11:17:57,031 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'characterEncodingFilter' to: [/*]
2019/10/04 11:17:57,031 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019/10/04 11:17:57,031 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019/10/04 11:17:57,032 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'requestContextFilter' to: [/*]
2019/10/04 11:17:57,032 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'webRequestTraceFilter' to: [/*]
2019/10/04 11:17:57,032 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:271) - Mapping filter: 'servletContainer' to urls: [/eureka/*]
2019/10/04 11:17:57,032 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'applicationContextIdFilter' to: [/*]
2019/10/04 11:17:57,032 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.ServletRegistrationBean.onStartup(ServletRegistrationBean.java:190) - Mapping servlet: 'dispatcherServlet' to [/]
2019/10/04 11:17:57,074 INFO   localhost-startStop-1 com.sun.jersey.server.impl.application.WebApplicationImpl._initiate(WebApplicationImpl.java:815) - Initiating Jersey application, version 'Jersey: 1.19.1 03/11/2016 02:08 PM'
2019/10/04 11:17:58,062 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@71b3bc45: startup date [Fri Oct 04 11:17:55 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@247d8ae
2019/10/04 11:17:58,114 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019/10/04 11:17:58,115 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019/10/04 11:17:58,118 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/],methods=[GET]}" onto public java.lang.String org.springframework.cloud.netflix.eureka.server.EurekaController.status(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.Object>)
2019/10/04 11:17:58,119 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/lastn],methods=[GET]}" onto public java.lang.String org.springframework.cloud.netflix.eureka.server.EurekaController.lastn(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.Object>)
2019/10/04 11:17:58,143 INFO   main                  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019/10/04 11:17:58,143 INFO   main                  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019/10/04 11:17:58,170 INFO   main                  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019/10/04 11:17:58,549 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 11:17:58,550 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2019/10/04 11:17:58,550 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 11:17:58,550 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2019/10/04 11:17:58,551 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2019/10/04 11:17:58,551 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 11:17:58,551 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2019/10/04 11:17:58,552 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2019/10/04 11:17:58,552 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 11:17:58,552 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2019/10/04 11:17:58,553 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 11:17:58,554 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2019/10/04 11:17:58,554 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 11:17:58,555 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 11:17:58,556 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2019/10/04 11:17:58,556 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2019/10/04 11:17:58,556 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2019/10/04 11:17:58,557 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 11:17:58,557 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 11:17:58,557 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 11:17:58,558 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2019/10/04 11:17:58,559 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 11:17:58,559 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 11:17:58,560 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2019/10/04 11:17:58,560 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 11:17:58,561 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2019/10/04 11:17:58,561 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 11:17:58,619 INFO   main                  org.springframework.ui.freemarker.SpringTemplateLoader.<init>(SpringTemplateLoader.java:61) - SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@71b3bc45: startup date [Fri Oct 04 11:17:55 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@247d8ae] and template loader path [classpath:/templates/]
2019/10/04 11:17:58,620 INFO   main                  org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer.postProcessTemplateLoaders(FreeMarkerConfigurer.java:127) - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2019/10/04 11:17:58,683 WARN   main                  org.springframework.cloud.netflix.archaius.ArchaiusAutoConfiguration.configureArchaius(ArchaiusAutoConfiguration.java:138) - No spring.application.name found, defaulting to 'application'
2019/10/04 11:17:58,717 INFO   main                  org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(InstanceInfoFactory.java:70) - Setting initial instance status as: STARTING
2019/10/04 11:17:59,093 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.afterSingletonsInstantiated(MBeanExporter.java:431) - Registering beans for JMX exposure on startup
2019/10/04 11:17:59,099 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'environmentManager' has been autodetected for JMX exposure
2019/10/04 11:17:59,100 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2019/10/04 11:17:59,101 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2019/10/04 11:17:59,101 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'restartEndpoint' has been autodetected for JMX exposure
2019/10/04 11:17:59,102 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2019/10/04 11:17:59,102 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'refreshScope' has been autodetected for JMX exposure
2019/10/04 11:17:59,104 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2019/10/04 11:17:59,118 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
2019/10/04 11:17:59,124 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2019/10/04 11:17:59,130 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2019/10/04 11:17:59,138 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=71b3bc45,type=ConfigurationPropertiesRebinder]
2019/10/04 11:17:59,144 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2019/10/04 11:17:59,145 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.afterSingletonsInstantiated(MBeanExporter.java:431) - Registering beans for JMX exposure on startup
2019/10/04 11:17:59,329 INFO   main                  org.springframework.context.support.DefaultLifecycleProcessor.start(DefaultLifecycleProcessor.java:343) - Starting beans in phase 0
2019/10/04 11:17:59,331 INFO   main                  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:40) - Registering application unknown with eureka with status UP
2019/10/04 11:17:59,334 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2019/10/04 11:17:59,340 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
2019/10/04 11:17:59,344 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2019/10/04 11:17:59,345 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2019/10/04 11:17:59,347 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2019/10/04 11:17:59,348 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2019/10/04 11:17:59,349 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2019/10/04 11:17:59,351 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2019/10/04 11:17:59,359 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2019/10/04 11:17:59,362 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2019/10/04 11:17:59,365 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2019/10/04 11:17:59,371 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2019/10/04 11:17:59,373 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2019/10/04 11:17:59,375 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
2019/10/04 11:17:59,377 INFO   Thread-20             org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap.initEurekaEnvironment(EurekaServerBootstrap.java:107) - Setting the eureka configuration..
2019/10/04 11:17:59,377 INFO   Thread-20             org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap.initEurekaEnvironment(EurekaServerBootstrap.java:112) - Eureka data center value eureka.datacenter is not set, defaulting to default
2019/10/04 11:17:59,378 INFO   Thread-20             org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap.initEurekaEnvironment(EurekaServerBootstrap.java:126) - Eureka environment value eureka.environment is not set, defaulting to test
2019/10/04 11:17:59,384 INFO   Thread-20             org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap.isAws(EurekaServerBootstrap.java:182) - isAws returned false
2019/10/04 11:17:59,384 INFO   Thread-20             org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap.initEurekaServerContext(EurekaServerBootstrap.java:150) - Initialized server context
2019/10/04 11:17:59,393 INFO   Thread-20             org.springframework.cloud.netflix.eureka.server.EurekaServerInitializerConfiguration.run(EurekaServerInitializerConfiguration.java:71) - Started Eureka Server
2019/10/04 11:17:59,398 INFO   main                  org.apache.coyote.http11.Http11NioProtocol.log(DirectJDKLog.java:180) - Initializing ProtocolHandler ["http-nio-8001"]
2019/10/04 11:17:59,415 INFO   main                  org.apache.coyote.http11.Http11NioProtocol.log(DirectJDKLog.java:180) - Starting ProtocolHandler ["http-nio-8001"]
2019/10/04 11:17:59,418 ERROR  main                  org.apache.catalina.core.StandardService.log(DirectJDKLog.java:182) - Failed to start connector [Connector[HTTP/1.1-8001]]
org.apache.catalina.LifecycleException: Failed to start component [Connector[HTTP/1.1-8001]]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167) ~[tomcat-embed-core-8.5.27.jar:8.5.27]
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225) [tomcat-embed-core-8.5.27.jar:8.5.27]
	at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.addPreviouslyRemovedConnectors(TomcatEmbeddedServletContainer.java:250) [spring-boot-1.5.10.RELEASE.jar:1.5.10.RELEASE]
	at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.start(TomcatEmbeddedServletContainer.java:193) [spring-boot-1.5.10.RELEASE.jar:1.5.10.RELEASE]
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.startEmbeddedServletContainer(EmbeddedWebApplicationContext.java:297) [spring-boot-1.5.10.RELEASE.jar:1.5.10.RELEASE]
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.finishRefresh(EmbeddedWebApplicationContext.java:145) [spring-boot-1.5.10.RELEASE.jar:1.5.10.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:546) [spring-context-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122) [spring-boot-1.5.10.RELEASE.jar:1.5.10.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693) [spring-boot-1.5.10.RELEASE.jar:1.5.10.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360) [spring-boot-1.5.10.RELEASE.jar:1.5.10.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303) [spring-boot-1.5.10.RELEASE.jar:1.5.10.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118) [spring-boot-1.5.10.RELEASE.jar:1.5.10.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107) [spring-boot-1.5.10.RELEASE.jar:1.5.10.RELEASE]
	at net.cyweb.EurekaApp.main(EurekaApp.java:17) [classes/:?]
Caused by: org.apache.catalina.LifecycleException: Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1021) ~[tomcat-embed-core-8.5.27.jar:8.5.27]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150) ~[tomcat-embed-core-8.5.27.jar:8.5.27]
	... 13 more
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method) ~[?:1.8.0_25]
	at sun.nio.ch.Net.bind(Net.java:436) ~[?:1.8.0_25]
	at sun.nio.ch.Net.bind(Net.java:428) ~[?:1.8.0_25]
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:214) ~[?:1.8.0_25]
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74) ~[?:1.8.0_25]
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210) ~[tomcat-embed-core-8.5.27.jar:8.5.27]
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:1150) ~[tomcat-embed-core-8.5.27.jar:8.5.27]
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:591) ~[tomcat-embed-core-8.5.27.jar:8.5.27]
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1018) ~[tomcat-embed-core-8.5.27.jar:8.5.27]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150) ~[tomcat-embed-core-8.5.27.jar:8.5.27]
	... 13 more
2019/10/04 11:17:59,431 INFO   main                  org.apache.coyote.http11.Http11NioProtocol.log(DirectJDKLog.java:180) - Pausing ProtocolHandler ["http-nio-8001"]
2019/10/04 11:17:59,432 INFO   main                  org.apache.catalina.core.StandardService.log(DirectJDKLog.java:180) - Stopping service [Tomcat]
2019/10/04 11:17:59,439 INFO   main                  org.apache.catalina.util.LifecycleBase.log(DirectJDKLog.java:180) - The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored.
2019/10/04 11:17:59,439 INFO   main                  org.apache.coyote.http11.Http11NioProtocol.log(DirectJDKLog.java:180) - Stopping ProtocolHandler ["http-nio-8001"]
2019/10/04 11:17:59,439 INFO   main                  org.apache.coyote.http11.Http11NioProtocol.log(DirectJDKLog.java:180) - Destroying ProtocolHandler ["http-nio-8001"]
2019/10/04 11:17:59,441 INFO   main                  org.springframework.boot.autoconfigure.logging.AutoConfigurationReportLoggingInitializer.logAutoConfigurationReport(AutoConfigurationReportLoggingInitializer.java:101) - 

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
2019/10/04 11:17:59,445 ERROR  main                  org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter.report(LoggingFailureAnalysisReporter.java:42) - 

***************************
APPLICATION FAILED TO START
***************************

Description:

The Tomcat connector configured to listen on port 8001 failed to start. The port may already be in use or the connector may be misconfigured.

Action:

Verify the connector's configuration, identify and stop any process that's listening on port 8001, or configure this application to listen on another port.

2019/10/04 11:17:59,446 INFO   main                  org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext.doClose(AbstractApplicationContext.java:984) - Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@71b3bc45: startup date [Fri Oct 04 11:17:55 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@247d8ae
2019/10/04 11:17:59,446 INFO   main                  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister(EurekaServiceRegistry.java:64) - Unregistering application unknown with eureka with status DOWN
2019/10/04 11:17:59,447 INFO   main                  org.springframework.context.support.DefaultLifecycleProcessor.stop(DefaultLifecycleProcessor.java:358) - Stopping beans in phase 0
2019/10/04 11:17:59,452 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.destroy(MBeanExporter.java:449) - Unregistering JMX-exposed beans on shutdown
2019/10/04 11:17:59,452 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.unregisterBeans(MBeanRegistrationSupport.java:241) - Unregistering JMX-exposed beans
2019/10/04 11:17:59,452 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.destroy(MBeanExporter.java:449) - Unregistering JMX-exposed beans on shutdown
2019/10/04 11:17:59,452 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.unregisterBeans(MBeanRegistrationSupport.java:241) - Unregistering JMX-exposed beans
2019/10/04 11:18:55,616 INFO   main                  net.cyweb.EurekaApp.logStartupProfileInfo(SpringApplication.java:597) - The following profiles are active: local
2019/10/04 11:18:55,625 INFO   main                  org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext.prepareRefresh(AbstractApplicationContext.java:583) - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@71b3bc45: startup date [Fri Oct 04 11:18:55 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@247d8ae
2019/10/04 11:18:56,099 INFO   main                  org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:263) - BeanFactory id=4e058b3b-2e8f-3bd4-a6bc-de54eac03491
2019/10/04 11:18:56,111 INFO   main                  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155) - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019/10/04 11:18:56,145 INFO   main                  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$e32e63fd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019/10/04 11:18:56,151 INFO   main                  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$cd1bc0b9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019/10/04 11:18:56,320 INFO   main                  org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.initialize(TomcatEmbeddedServletContainer.java:89) - Tomcat initialized with port(s): 8001 (http)
2019/10/04 11:18:56,325 INFO   main                  org.apache.catalina.core.StandardService.log(DirectJDKLog.java:180) - Starting service [Tomcat]
2019/10/04 11:18:56,326 INFO   main                  org.apache.catalina.core.StandardEngine.log(DirectJDKLog.java:180) - Starting Servlet Engine: Apache Tomcat/8.5.27
2019/10/04 11:18:56,413 INFO   localhost-startStop-1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(DirectJDKLog.java:180) - Initializing Spring embedded WebApplicationContext
2019/10/04 11:18:56,413 INFO   localhost-startStop-1 org.springframework.web.context.ContextLoader.prepareEmbeddedWebApplicationContext(EmbeddedWebApplicationContext.java:276) - Root WebApplicationContext: initialization completed in 788 ms
2019/10/04 11:18:56,793 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'metricsFilter' to: [/*]
2019/10/04 11:18:56,794 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'characterEncodingFilter' to: [/*]
2019/10/04 11:18:56,794 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019/10/04 11:18:56,794 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019/10/04 11:18:56,794 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'requestContextFilter' to: [/*]
2019/10/04 11:18:56,794 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'webRequestTraceFilter' to: [/*]
2019/10/04 11:18:56,794 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:271) - Mapping filter: 'servletContainer' to urls: [/eureka/*]
2019/10/04 11:18:56,794 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'applicationContextIdFilter' to: [/*]
2019/10/04 11:18:56,794 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.ServletRegistrationBean.onStartup(ServletRegistrationBean.java:190) - Mapping servlet: 'dispatcherServlet' to [/]
2019/10/04 11:18:56,835 INFO   localhost-startStop-1 com.sun.jersey.server.impl.application.WebApplicationImpl._initiate(WebApplicationImpl.java:815) - Initiating Jersey application, version 'Jersey: 1.19.1 03/11/2016 02:08 PM'
2019/10/04 11:18:57,570 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@71b3bc45: startup date [Fri Oct 04 11:18:55 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@247d8ae
2019/10/04 11:18:57,622 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019/10/04 11:18:57,623 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019/10/04 11:18:57,626 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/],methods=[GET]}" onto public java.lang.String org.springframework.cloud.netflix.eureka.server.EurekaController.status(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.Object>)
2019/10/04 11:18:57,626 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/lastn],methods=[GET]}" onto public java.lang.String org.springframework.cloud.netflix.eureka.server.EurekaController.lastn(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.Object>)
2019/10/04 11:18:57,647 INFO   main                  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019/10/04 11:18:57,647 INFO   main                  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019/10/04 11:18:57,675 INFO   main                  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019/10/04 11:18:58,054 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2019/10/04 11:18:58,054 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 11:18:58,055 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 11:18:58,056 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2019/10/04 11:18:58,056 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 11:18:58,056 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 11:18:58,057 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 11:18:58,057 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2019/10/04 11:18:58,058 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 11:18:58,058 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2019/10/04 11:18:58,059 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 11:18:58,059 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2019/10/04 11:18:58,060 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2019/10/04 11:18:58,060 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2019/10/04 11:18:58,061 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2019/10/04 11:18:58,061 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 11:18:58,062 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2019/10/04 11:18:58,062 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 11:18:58,062 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2019/10/04 11:18:58,063 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2019/10/04 11:18:58,063 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 11:18:58,064 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2019/10/04 11:18:58,065 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 11:18:58,065 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 11:18:58,065 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 11:18:58,065 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 11:18:58,066 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2019/10/04 11:18:58,125 INFO   main                  org.springframework.ui.freemarker.SpringTemplateLoader.<init>(SpringTemplateLoader.java:61) - SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@71b3bc45: startup date [Fri Oct 04 11:18:55 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@247d8ae] and template loader path [classpath:/templates/]
2019/10/04 11:18:58,126 INFO   main                  org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer.postProcessTemplateLoaders(FreeMarkerConfigurer.java:127) - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2019/10/04 11:18:58,186 WARN   main                  org.springframework.cloud.netflix.archaius.ArchaiusAutoConfiguration.configureArchaius(ArchaiusAutoConfiguration.java:138) - No spring.application.name found, defaulting to 'application'
2019/10/04 11:18:58,217 INFO   main                  org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(InstanceInfoFactory.java:70) - Setting initial instance status as: STARTING
2019/10/04 11:18:58,572 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.afterSingletonsInstantiated(MBeanExporter.java:431) - Registering beans for JMX exposure on startup
2019/10/04 11:18:58,577 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'environmentManager' has been autodetected for JMX exposure
2019/10/04 11:18:58,578 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2019/10/04 11:18:58,579 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2019/10/04 11:18:58,579 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'restartEndpoint' has been autodetected for JMX exposure
2019/10/04 11:18:58,580 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2019/10/04 11:18:58,580 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'refreshScope' has been autodetected for JMX exposure
2019/10/04 11:18:58,582 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2019/10/04 11:18:58,590 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
2019/10/04 11:18:58,596 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2019/10/04 11:18:58,599 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2019/10/04 11:18:58,605 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=71b3bc45,type=ConfigurationPropertiesRebinder]
2019/10/04 11:18:58,607 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2019/10/04 11:18:58,608 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.afterSingletonsInstantiated(MBeanExporter.java:431) - Registering beans for JMX exposure on startup
2019/10/04 11:18:58,769 INFO   main                  org.springframework.context.support.DefaultLifecycleProcessor.start(DefaultLifecycleProcessor.java:343) - Starting beans in phase 0
2019/10/04 11:18:58,770 INFO   main                  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:40) - Registering application unknown with eureka with status UP
2019/10/04 11:18:58,771 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2019/10/04 11:18:58,775 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
2019/10/04 11:18:58,779 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2019/10/04 11:18:58,781 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2019/10/04 11:18:58,783 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2019/10/04 11:18:58,785 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2019/10/04 11:18:58,787 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2019/10/04 11:18:58,789 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2019/10/04 11:18:58,793 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2019/10/04 11:18:58,794 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2019/10/04 11:18:58,798 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2019/10/04 11:18:58,801 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2019/10/04 11:18:58,804 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2019/10/04 11:18:58,806 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
2019/10/04 11:18:58,811 INFO   Thread-20             org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap.initEurekaEnvironment(EurekaServerBootstrap.java:107) - Setting the eureka configuration..
2019/10/04 11:18:58,813 INFO   Thread-20             org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap.initEurekaEnvironment(EurekaServerBootstrap.java:112) - Eureka data center value eureka.datacenter is not set, defaulting to default
2019/10/04 11:18:58,813 INFO   Thread-20             org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap.initEurekaEnvironment(EurekaServerBootstrap.java:126) - Eureka environment value eureka.environment is not set, defaulting to test
2019/10/04 11:18:58,823 INFO   Thread-20             org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap.isAws(EurekaServerBootstrap.java:182) - isAws returned false
2019/10/04 11:18:58,824 INFO   Thread-20             org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap.initEurekaServerContext(EurekaServerBootstrap.java:150) - Initialized server context
2019/10/04 11:18:58,827 INFO   main                  org.apache.coyote.http11.Http11NioProtocol.log(DirectJDKLog.java:180) - Initializing ProtocolHandler ["http-nio-8001"]
2019/10/04 11:18:58,828 INFO   Thread-20             org.springframework.cloud.netflix.eureka.server.EurekaServerInitializerConfiguration.run(EurekaServerInitializerConfiguration.java:71) - Started Eureka Server
2019/10/04 11:18:58,841 INFO   main                  org.apache.coyote.http11.Http11NioProtocol.log(DirectJDKLog.java:180) - Starting ProtocolHandler ["http-nio-8001"]
2019/10/04 11:18:58,846 ERROR  main                  org.apache.catalina.core.StandardService.log(DirectJDKLog.java:182) - Failed to start connector [Connector[HTTP/1.1-8001]]
org.apache.catalina.LifecycleException: Failed to start component [Connector[HTTP/1.1-8001]]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:167) ~[tomcat-embed-core-8.5.27.jar:8.5.27]
	at org.apache.catalina.core.StandardService.addConnector(StandardService.java:225) [tomcat-embed-core-8.5.27.jar:8.5.27]
	at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.addPreviouslyRemovedConnectors(TomcatEmbeddedServletContainer.java:250) [spring-boot-1.5.10.RELEASE.jar:1.5.10.RELEASE]
	at org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.start(TomcatEmbeddedServletContainer.java:193) [spring-boot-1.5.10.RELEASE.jar:1.5.10.RELEASE]
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.startEmbeddedServletContainer(EmbeddedWebApplicationContext.java:297) [spring-boot-1.5.10.RELEASE.jar:1.5.10.RELEASE]
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.finishRefresh(EmbeddedWebApplicationContext.java:145) [spring-boot-1.5.10.RELEASE.jar:1.5.10.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:546) [spring-context-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122) [spring-boot-1.5.10.RELEASE.jar:1.5.10.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693) [spring-boot-1.5.10.RELEASE.jar:1.5.10.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360) [spring-boot-1.5.10.RELEASE.jar:1.5.10.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303) [spring-boot-1.5.10.RELEASE.jar:1.5.10.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118) [spring-boot-1.5.10.RELEASE.jar:1.5.10.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107) [spring-boot-1.5.10.RELEASE.jar:1.5.10.RELEASE]
	at net.cyweb.EurekaApp.main(EurekaApp.java:17) [classes/:?]
Caused by: org.apache.catalina.LifecycleException: Protocol handler start failed
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1021) ~[tomcat-embed-core-8.5.27.jar:8.5.27]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150) ~[tomcat-embed-core-8.5.27.jar:8.5.27]
	... 13 more
Caused by: java.net.BindException: Address already in use: bind
	at sun.nio.ch.Net.bind0(Native Method) ~[?:1.8.0_25]
	at sun.nio.ch.Net.bind(Net.java:436) ~[?:1.8.0_25]
	at sun.nio.ch.Net.bind(Net.java:428) ~[?:1.8.0_25]
	at sun.nio.ch.ServerSocketChannelImpl.bind(ServerSocketChannelImpl.java:214) ~[?:1.8.0_25]
	at sun.nio.ch.ServerSocketAdaptor.bind(ServerSocketAdaptor.java:74) ~[?:1.8.0_25]
	at org.apache.tomcat.util.net.NioEndpoint.bind(NioEndpoint.java:210) ~[tomcat-embed-core-8.5.27.jar:8.5.27]
	at org.apache.tomcat.util.net.AbstractEndpoint.start(AbstractEndpoint.java:1150) ~[tomcat-embed-core-8.5.27.jar:8.5.27]
	at org.apache.coyote.AbstractProtocol.start(AbstractProtocol.java:591) ~[tomcat-embed-core-8.5.27.jar:8.5.27]
	at org.apache.catalina.connector.Connector.startInternal(Connector.java:1018) ~[tomcat-embed-core-8.5.27.jar:8.5.27]
	at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150) ~[tomcat-embed-core-8.5.27.jar:8.5.27]
	... 13 more
2019/10/04 11:18:58,874 INFO   main                  org.apache.coyote.http11.Http11NioProtocol.log(DirectJDKLog.java:180) - Pausing ProtocolHandler ["http-nio-8001"]
2019/10/04 11:18:58,874 INFO   main                  org.apache.catalina.core.StandardService.log(DirectJDKLog.java:180) - Stopping service [Tomcat]
2019/10/04 11:18:58,889 INFO   main                  org.apache.catalina.util.LifecycleBase.log(DirectJDKLog.java:180) - The stop() method was called on component [StandardServer[-1]] after stop() had already been called. The second call will be ignored.
2019/10/04 11:18:58,890 INFO   main                  org.apache.coyote.http11.Http11NioProtocol.log(DirectJDKLog.java:180) - Stopping ProtocolHandler ["http-nio-8001"]
2019/10/04 11:18:58,891 INFO   main                  org.apache.coyote.http11.Http11NioProtocol.log(DirectJDKLog.java:180) - Destroying ProtocolHandler ["http-nio-8001"]
2019/10/04 11:18:58,894 INFO   main                  org.springframework.boot.autoconfigure.logging.AutoConfigurationReportLoggingInitializer.logAutoConfigurationReport(AutoConfigurationReportLoggingInitializer.java:101) - 

Error starting ApplicationContext. To display the auto-configuration report re-run your application with 'debug' enabled.
2019/10/04 11:18:58,902 ERROR  main                  org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter.report(LoggingFailureAnalysisReporter.java:42) - 

***************************
APPLICATION FAILED TO START
***************************

Description:

The Tomcat connector configured to listen on port 8001 failed to start. The port may already be in use or the connector may be misconfigured.

Action:

Verify the connector's configuration, identify and stop any process that's listening on port 8001, or configure this application to listen on another port.

2019/10/04 11:18:58,903 INFO   main                  org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext.doClose(AbstractApplicationContext.java:984) - Closing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@71b3bc45: startup date [Fri Oct 04 11:18:55 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@247d8ae
2019/10/04 11:18:58,903 INFO   main                  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.deregister(EurekaServiceRegistry.java:64) - Unregistering application unknown with eureka with status DOWN
2019/10/04 11:18:58,904 INFO   main                  org.springframework.context.support.DefaultLifecycleProcessor.stop(DefaultLifecycleProcessor.java:358) - Stopping beans in phase 0
2019/10/04 11:18:58,908 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.destroy(MBeanExporter.java:449) - Unregistering JMX-exposed beans on shutdown
2019/10/04 11:18:58,908 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.unregisterBeans(MBeanRegistrationSupport.java:241) - Unregistering JMX-exposed beans
2019/10/04 11:18:58,908 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.destroy(MBeanExporter.java:449) - Unregistering JMX-exposed beans on shutdown
2019/10/04 11:18:58,908 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.unregisterBeans(MBeanRegistrationSupport.java:241) - Unregistering JMX-exposed beans
2019/10/04 11:20:04,380 INFO   main                  net.cyweb.EurekaApp.logStartupProfileInfo(SpringApplication.java:597) - The following profiles are active: local
2019/10/04 11:20:04,388 INFO   main                  org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext.prepareRefresh(AbstractApplicationContext.java:583) - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@71b3bc45: startup date [Fri Oct 04 11:20:04 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@247d8ae
2019/10/04 11:20:04,830 INFO   main                  org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:263) - BeanFactory id=4e058b3b-2e8f-3bd4-a6bc-de54eac03491
2019/10/04 11:20:04,840 INFO   main                  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155) - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019/10/04 11:20:04,873 INFO   main                  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$e32e63fd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019/10/04 11:20:04,880 INFO   main                  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$cd1bc0b9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019/10/04 11:20:05,041 INFO   main                  org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.initialize(TomcatEmbeddedServletContainer.java:89) - Tomcat initialized with port(s): 8001 (http)
2019/10/04 11:20:05,050 INFO   main                  org.apache.catalina.core.StandardService.log(DirectJDKLog.java:180) - Starting service [Tomcat]
2019/10/04 11:20:05,051 INFO   main                  org.apache.catalina.core.StandardEngine.log(DirectJDKLog.java:180) - Starting Servlet Engine: Apache Tomcat/8.5.27
2019/10/04 11:20:05,137 INFO   localhost-startStop-1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(DirectJDKLog.java:180) - Initializing Spring embedded WebApplicationContext
2019/10/04 11:20:05,137 INFO   localhost-startStop-1 org.springframework.web.context.ContextLoader.prepareEmbeddedWebApplicationContext(EmbeddedWebApplicationContext.java:276) - Root WebApplicationContext: initialization completed in 749 ms
2019/10/04 11:20:05,497 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'metricsFilter' to: [/*]
2019/10/04 11:20:05,497 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'characterEncodingFilter' to: [/*]
2019/10/04 11:20:05,497 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019/10/04 11:20:05,498 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019/10/04 11:20:05,498 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'requestContextFilter' to: [/*]
2019/10/04 11:20:05,498 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'webRequestTraceFilter' to: [/*]
2019/10/04 11:20:05,498 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:271) - Mapping filter: 'servletContainer' to urls: [/eureka/*]
2019/10/04 11:20:05,498 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'applicationContextIdFilter' to: [/*]
2019/10/04 11:20:05,498 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.ServletRegistrationBean.onStartup(ServletRegistrationBean.java:190) - Mapping servlet: 'dispatcherServlet' to [/]
2019/10/04 11:20:05,539 INFO   localhost-startStop-1 com.sun.jersey.server.impl.application.WebApplicationImpl._initiate(WebApplicationImpl.java:815) - Initiating Jersey application, version 'Jersey: 1.19.1 03/11/2016 02:08 PM'
2019/10/04 11:20:06,255 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@71b3bc45: startup date [Fri Oct 04 11:20:04 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@247d8ae
2019/10/04 11:20:06,305 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019/10/04 11:20:06,306 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019/10/04 11:20:06,309 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/],methods=[GET]}" onto public java.lang.String org.springframework.cloud.netflix.eureka.server.EurekaController.status(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.Object>)
2019/10/04 11:20:06,309 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/lastn],methods=[GET]}" onto public java.lang.String org.springframework.cloud.netflix.eureka.server.EurekaController.lastn(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.Object>)
2019/10/04 11:20:06,329 INFO   main                  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019/10/04 11:20:06,329 INFO   main                  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019/10/04 11:20:06,354 INFO   main                  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019/10/04 11:20:06,713 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2019/10/04 11:20:06,713 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 11:20:06,714 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 11:20:06,714 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 11:20:06,715 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 11:20:06,715 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2019/10/04 11:20:06,715 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 11:20:06,717 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2019/10/04 11:20:06,717 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 11:20:06,718 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 11:20:06,718 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2019/10/04 11:20:06,718 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2019/10/04 11:20:06,719 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 11:20:06,719 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2019/10/04 11:20:06,720 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 11:20:06,720 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2019/10/04 11:20:06,720 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2019/10/04 11:20:06,724 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2019/10/04 11:20:06,724 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2019/10/04 11:20:06,725 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2019/10/04 11:20:06,725 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 11:20:06,725 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 11:20:06,725 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2019/10/04 11:20:06,726 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2019/10/04 11:20:06,726 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 11:20:06,727 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 11:20:06,727 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 11:20:06,784 INFO   main                  org.springframework.ui.freemarker.SpringTemplateLoader.<init>(SpringTemplateLoader.java:61) - SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@71b3bc45: startup date [Fri Oct 04 11:20:04 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@247d8ae] and template loader path [classpath:/templates/]
2019/10/04 11:20:06,785 INFO   main                  org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer.postProcessTemplateLoaders(FreeMarkerConfigurer.java:127) - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2019/10/04 11:20:06,844 WARN   main                  org.springframework.cloud.netflix.archaius.ArchaiusAutoConfiguration.configureArchaius(ArchaiusAutoConfiguration.java:138) - No spring.application.name found, defaulting to 'application'
2019/10/04 11:20:06,874 INFO   main                  org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(InstanceInfoFactory.java:70) - Setting initial instance status as: STARTING
2019/10/04 11:20:07,200 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.afterSingletonsInstantiated(MBeanExporter.java:431) - Registering beans for JMX exposure on startup
2019/10/04 11:20:07,205 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'environmentManager' has been autodetected for JMX exposure
2019/10/04 11:20:07,207 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2019/10/04 11:20:07,207 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2019/10/04 11:20:07,207 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'restartEndpoint' has been autodetected for JMX exposure
2019/10/04 11:20:07,208 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2019/10/04 11:20:07,209 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'refreshScope' has been autodetected for JMX exposure
2019/10/04 11:20:07,210 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2019/10/04 11:20:07,217 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
2019/10/04 11:20:07,222 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2019/10/04 11:20:07,226 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2019/10/04 11:20:07,231 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=71b3bc45,type=ConfigurationPropertiesRebinder]
2019/10/04 11:20:07,235 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2019/10/04 11:20:07,236 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.afterSingletonsInstantiated(MBeanExporter.java:431) - Registering beans for JMX exposure on startup
2019/10/04 11:20:07,387 INFO   main                  org.springframework.context.support.DefaultLifecycleProcessor.start(DefaultLifecycleProcessor.java:343) - Starting beans in phase 0
2019/10/04 11:20:07,388 INFO   main                  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:40) - Registering application unknown with eureka with status UP
2019/10/04 11:20:07,389 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2019/10/04 11:20:07,392 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
2019/10/04 11:20:07,395 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2019/10/04 11:20:07,397 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2019/10/04 11:20:07,398 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2019/10/04 11:20:07,399 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2019/10/04 11:20:07,400 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2019/10/04 11:20:07,402 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2019/10/04 11:20:07,404 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2019/10/04 11:20:07,405 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2019/10/04 11:20:07,406 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2019/10/04 11:20:07,408 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2019/10/04 11:20:07,409 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2019/10/04 11:20:07,410 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
2019/10/04 11:20:07,411 INFO   Thread-19             org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap.initEurekaEnvironment(EurekaServerBootstrap.java:107) - Setting the eureka configuration..
2019/10/04 11:20:07,412 INFO   Thread-19             org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap.initEurekaEnvironment(EurekaServerBootstrap.java:112) - Eureka data center value eureka.datacenter is not set, defaulting to default
2019/10/04 11:20:07,412 INFO   Thread-19             org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap.initEurekaEnvironment(EurekaServerBootstrap.java:126) - Eureka environment value eureka.environment is not set, defaulting to test
2019/10/04 11:20:07,419 INFO   Thread-19             org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap.isAws(EurekaServerBootstrap.java:182) - isAws returned false
2019/10/04 11:20:07,419 INFO   Thread-19             org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap.initEurekaServerContext(EurekaServerBootstrap.java:150) - Initialized server context
2019/10/04 11:20:07,423 INFO   Thread-19             org.springframework.cloud.netflix.eureka.server.EurekaServerInitializerConfiguration.run(EurekaServerInitializerConfiguration.java:71) - Started Eureka Server
2019/10/04 11:20:07,423 INFO   main                  org.apache.coyote.http11.Http11NioProtocol.log(DirectJDKLog.java:180) - Initializing ProtocolHandler ["http-nio-8001"]
2019/10/04 11:20:07,430 INFO   main                  org.apache.coyote.http11.Http11NioProtocol.log(DirectJDKLog.java:180) - Starting ProtocolHandler ["http-nio-8001"]
2019/10/04 11:20:07,444 INFO   main                  org.apache.tomcat.util.net.NioSelectorPool.log(DirectJDKLog.java:180) - Using a shared selector for servlet write/read
2019/10/04 11:20:07,493 INFO   main                  org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.start(TomcatEmbeddedServletContainer.java:201) - Tomcat started on port(s): 8001 (http)
2019/10/04 11:20:07,494 INFO   main                  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:117) - Updating port to 8001
2019/10/04 11:20:07,502 INFO   main                  net.cyweb.EurekaApp.logStarted(StartupInfoLogger.java:57) - Started EurekaApp in 4.055 seconds (JVM running for 4.665)
2019/10/04 11:20:24,211 INFO   main                  net.cyweb.javaapi.logStartupProfileInfo(SpringApplication.java:597) - The following profiles are active: dev
2019/10/04 11:20:24,225 INFO   main                  org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext.prepareRefresh(AbstractApplicationContext.java:583) - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@df5f5c0: startup date [Fri Oct 04 11:20:24 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3932c79a
2019/10/04 11:20:24,803 INFO   main                  org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:828) - Overriding bean definition for bean 'mongoSettingsProperties' with a different definition: replacing [Generic bean: class [net.cyweb.config.custom.MongoSettingsProperties]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [D:\center_new\front-services\javaapi\target\classes\net\cyweb\config\custom\MongoSettingsProperties.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=mongoConfig; factoryMethodName=mongoSettingsProperties; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [net/cyweb/config/custom/MongoConfig.class]]
2019/10/04 11:20:24,981 INFO   main                  org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:165) - Multiple Spring Data modules found, entering strict repository configuration mode!
2019/10/04 11:20:25,056 INFO   main                  org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:165) - Multiple Spring Data modules found, entering strict repository configuration mode!
2019/10/04 11:20:25,318 INFO   main                  org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:263) - BeanFactory id=46ed19e5-f08b-3b95-a37b-0c1390c0f0cf
2019/10/04 11:20:25,377 INFO   main                  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155) - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019/10/04 11:20:25,483 INFO   main                  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'redisConfig' of type [net.cyweb.config.custom.RedisConfig$$EnhancerBySpringCGLIB$$457f9654] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019/10/04 11:20:25,490 INFO   main                  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$24abb404] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019/10/04 11:20:25,511 INFO   main                  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$6dbdea22] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019/10/04 11:20:25,537 INFO   main                  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$56d85a45] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019/10/04 11:20:25,559 INFO   main                  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$40c5b701] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019/10/04 11:20:25,805 INFO   main                  org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.initialize(TomcatEmbeddedServletContainer.java:89) - Tomcat initialized with port(s): 8009 (http)
2019/10/04 11:20:25,924 INFO   localhost-startStop-1 org.springframework.web.context.ContextLoader.prepareEmbeddedWebApplicationContext(EmbeddedWebApplicationContext.java:276) - Root WebApplicationContext: initialization completed in 1699 ms
2019/10/04 11:20:26,201 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'metricsFilter' to: [/*]
2019/10/04 11:20:26,201 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'characterEncodingFilter' to: [/*]
2019/10/04 11:20:26,201 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019/10/04 11:20:26,201 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019/10/04 11:20:26,202 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'requestContextFilter' to: [/*]
2019/10/04 11:20:26,203 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'springSecurityFilterChain' to: [/*]
2019/10/04 11:20:26,203 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'webRequestLoggingFilter' to: [/*]
2019/10/04 11:20:26,203 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'CORSFilter' to: [/*]
2019/10/04 11:20:26,203 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'applicationContextIdFilter' to: [/*]
2019/10/04 11:20:26,203 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.ServletRegistrationBean.onStartup(ServletRegistrationBean.java:190) - Mapping servlet: 'dispatcherServlet' to [/]
2019/10/04 11:20:26,784 INFO   main                  com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:721) - {dataSource-1} inited
2019/10/04 11:20:27,917 INFO   main                  org.mongodb.driver.cluster.info(SLF4JLogger.java:71) - Cluster created with settings {hosts=[localhost:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=100}
2019/10/04 11:20:27,918 INFO   main                  org.mongodb.driver.cluster.info(SLF4JLogger.java:71) - Adding discovered server localhost:27017 to client view of cluster
2019/10/04 11:20:27,976 INFO   cluster-ClusterId{value='5d96ba7be4456a2b20d80a5c', description='null'}-localhost:27017 org.mongodb.driver.connection.info(SLF4JLogger.java:71) - Opened connection [connectionId{localValue:2, serverValue:986}] to localhost:27017
2019/10/04 11:20:27,980 INFO   cluster-ClusterId{value='5d96ba7be4456a2b20d80a5c', description='null'}-localhost:27017 org.mongodb.driver.cluster.info(SLF4JLogger.java:71) - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 0]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2255134}
2019/10/04 11:20:27,981 INFO   cluster-ClusterId{value='5d96ba7be4456a2b20d80a5c', description='null'}-localhost:27017 org.mongodb.driver.cluster.info(SLF4JLogger.java:71) - Discovered cluster type of STANDALONE
2019/10/04 11:20:28,056 INFO   MaintenanceTimer-1-thread-1 org.mongodb.driver.connection.info(SLF4JLogger.java:71) - Opened connection [connectionId{localValue:1, serverValue:985}] to localhost:27017
2019/10/04 11:20:28,061 INFO   MaintenanceTimer-1-thread-1 org.mongodb.driver.connection.info(SLF4JLogger.java:71) - Opened connection [connectionId{localValue:3, serverValue:987}] to localhost:27017
2019/10/04 11:20:28,066 INFO   MaintenanceTimer-1-thread-1 org.mongodb.driver.connection.info(SLF4JLogger.java:71) - Opened connection [connectionId{localValue:4, serverValue:988}] to localhost:27017
2019/10/04 11:20:28,078 INFO   MaintenanceTimer-1-thread-1 org.mongodb.driver.connection.info(SLF4JLogger.java:71) - Opened connection [connectionId{localValue:5, serverValue:989}] to localhost:27017
2019/10/04 11:20:28,090 INFO   MaintenanceTimer-1-thread-1 org.mongodb.driver.connection.info(SLF4JLogger.java:71) - Opened connection [connectionId{localValue:6, serverValue:990}] to localhost:27017
2019/10/04 11:20:28,111 INFO   MaintenanceTimer-1-thread-1 org.mongodb.driver.connection.info(SLF4JLogger.java:71) - Opened connection [connectionId{localValue:7, serverValue:991}] to localhost:27017
2019/10/04 11:20:28,128 INFO   MaintenanceTimer-1-thread-1 org.mongodb.driver.connection.info(SLF4JLogger.java:71) - Opened connection [connectionId{localValue:8, serverValue:992}] to localhost:27017
2019/10/04 11:20:28,135 INFO   MaintenanceTimer-1-thread-1 org.mongodb.driver.connection.info(SLF4JLogger.java:71) - Opened connection [connectionId{localValue:9, serverValue:993}] to localhost:27017
2019/10/04 11:20:28,140 INFO   MaintenanceTimer-1-thread-1 org.mongodb.driver.connection.info(SLF4JLogger.java:71) - Opened connection [connectionId{localValue:10, serverValue:994}] to localhost:27017
2019/10/04 11:20:28,144 INFO   MaintenanceTimer-1-thread-1 org.mongodb.driver.connection.info(SLF4JLogger.java:71) - Opened connection [connectionId{localValue:11, serverValue:995}] to localhost:27017
2019/10/04 11:20:28,147 INFO   MaintenanceTimer-1-thread-1 org.mongodb.driver.connection.info(SLF4JLogger.java:71) - Opened connection [connectionId{localValue:12, serverValue:996}] to localhost:27017
2019/10/04 11:20:28,151 INFO   MaintenanceTimer-1-thread-1 org.mongodb.driver.connection.info(SLF4JLogger.java:71) - Opened connection [connectionId{localValue:13, serverValue:997}] to localhost:27017
2019/10/04 11:20:28,159 INFO   MaintenanceTimer-1-thread-1 org.mongodb.driver.connection.info(SLF4JLogger.java:71) - Opened connection [connectionId{localValue:14, serverValue:998}] to localhost:27017
2019/10/04 11:20:28,164 INFO   MaintenanceTimer-1-thread-1 org.mongodb.driver.connection.info(SLF4JLogger.java:71) - Opened connection [connectionId{localValue:15, serverValue:999}] to localhost:27017
2019/10/04 11:20:28,168 INFO   MaintenanceTimer-1-thread-1 org.mongodb.driver.connection.info(SLF4JLogger.java:71) - Opened connection [connectionId{localValue:16, serverValue:1000}] to localhost:27017
2019/10/04 11:20:28,172 INFO   MaintenanceTimer-1-thread-1 org.mongodb.driver.connection.info(SLF4JLogger.java:71) - Opened connection [connectionId{localValue:17, serverValue:1001}] to localhost:27017
2019/10/04 11:20:28,176 INFO   MaintenanceTimer-1-thread-1 org.mongodb.driver.connection.info(SLF4JLogger.java:71) - Opened connection [connectionId{localValue:18, serverValue:1002}] to localhost:27017
2019/10/04 11:20:28,180 INFO   MaintenanceTimer-1-thread-1 org.mongodb.driver.connection.info(SLF4JLogger.java:71) - Opened connection [connectionId{localValue:19, serverValue:1003}] to localhost:27017
2019/10/04 11:20:28,185 INFO   MaintenanceTimer-1-thread-1 org.mongodb.driver.connection.info(SLF4JLogger.java:71) - Opened connection [connectionId{localValue:20, serverValue:1004}] to localhost:27017
2019/10/04 11:20:28,188 INFO   MaintenanceTimer-1-thread-1 org.mongodb.driver.connection.info(SLF4JLogger.java:71) - Opened connection [connectionId{localValue:21, serverValue:1005}] to localhost:27017
2019/10/04 11:20:29,176 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/assets/fabiAsset],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.AssetsApiController.fabiAsset(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 11:20:29,177 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/assets/bibiAsset],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.AssetsApiController.bibiAsset(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 11:20:29,177 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/assets/specAssets],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.AssetsApiController.specAssets(net.cyweb.model.YangMemberToken,net.cyweb.model.YangCurrencyUser,org.springframework.validation.BindingResult)
2019/10/04 11:20:29,177 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/assets/allAsset],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.AssetsApiController.allAsset(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 11:20:29,178 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/assets/updateAssets],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.AssetsApiController.updateAssets(net.cyweb.model.YangMemberToken,net.cyweb.model.YangCurrencyUser,org.springframework.validation.BindingResult,net.cyweb.model.YangMember,org.springframework.validation.BindingResult)
2019/10/04 11:20:29,178 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/coin/list],methods=[GET]}" onto public net.cyweb.model.Result net.cyweb.controller.CoinController.list()
2019/10/04 11:20:29,179 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/coin/updateUserCurrency]}" onto public net.cyweb.model.Result net.cyweb.controller.CoinController.updateUserCurrency(net.cyweb.model.YangTibi)
2019/10/04 11:20:29,179 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font1/testCNY],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.Font1Controller.testCNY(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 11:20:29,186 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getAddress],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getAddress(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 11:20:29,186 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getUserInfo],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getUserInfo(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 11:20:29,187 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/checkVerifyCode],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.checkVerifyCode(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 11:20:29,187 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getTradeCurrencyInfos],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getTradeCurrencyInfos()
2019/10/04 11:20:29,187 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/saveBankInfoByUser],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.saveBankInfoByUser(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 11:20:29,188 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/checkAccountIsOnly],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.checkAccountIsOnly(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 11:20:29,188 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getNewCurrenciesList],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getNewCurrenciesList()
2019/10/04 11:20:29,188 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/creatAcceptancesOrder],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.creatAcceptancesOrder(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 11:20:29,189 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/acceptancesOrderRelease],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.acceptancesOrderRelease(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 11:20:29,189 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getCurrencyListChange],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getCurrencyListChange(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 11:20:29,189 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/findBanksInfoByUser],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.findBanksInfoByUser(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 11:20:29,190 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/updateAcceptancesPicInfo],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.updateAcceptancesPicInfo(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 11:20:29,190 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getUpCurrencyInfos],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getUpCurrencyInfos()
2019/10/04 11:20:29,190 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/findOldWorkOrders],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.findOldWorkOrders(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 11:20:29,190 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/findWorkOrderById],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.findWorkOrderById(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 11:20:29,191 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/sendVerificationCode],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.sendVerificationCode(java.util.Map<java.lang.String, java.lang.String>,javax.servlet.http.HttpServletRequest)
2019/10/04 11:20:29,191 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/updateAcceptancesIsReady],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.updateAcceptancesIsReady(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 11:20:29,191 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/findC2COrdersByAcceptances],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.findC2COrdersByAcceptances(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 11:20:29,192 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/addGoogleSecretAndQR],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.addGoogleSecretAndQR(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 11:20:29,192 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/findMembersOrdersByAcceptances],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.findMembersOrdersByAcceptances(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 11:20:29,192 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getCurrencyProfile],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getCurrencyProfile(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 11:20:29,192 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getHistoryOrdersByMemberId],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getHistoryOrdersByMemberId(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 11:20:29,193 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/withdrawNotifyReq],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.withdrawNotifyReq(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 11:20:29,193 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/primaryCertification],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.primaryCertification(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 11:20:29,193 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/deletAcceptancesById],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.deletAcceptancesById(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 11:20:29,193 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/addDepositAddress],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.addDepositAddress(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 11:20:29,194 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getC2CGuaByCurrencyId],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getC2CGuaByCurrencyId(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 11:20:29,194 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/cancleAcceptancesBuyOrder],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.cancleAcceptancesBuyOrder(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 11:20:29,194 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getTradeCurrencys],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getTradeCurrencys()
2019/10/04 11:20:29,195 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getCurrencyInfoById],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getCurrencyInfoById(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 11:20:29,195 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/updateFiatMoneyPwd],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.updateFiatMoneyPwd(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 11:20:29,195 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getArticleByArticleId],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getArticleByArticleId(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 11:20:29,195 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getUserOrderFiveRecordSell],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getUserOrderFiveRecordSell(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 11:20:29,196 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getUserOrderFiveRecordBuy],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getUserOrderFiveRecordBuy(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 11:20:29,196 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getWithdrawRecordByCurrencyId],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getWithdrawRecordByCurrencyId(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 11:20:29,196 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getOrdersByMemberId],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getOrdersByMemberId(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 11:20:29,196 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/cancleAcceptancesSellOrder],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.cancleAcceptancesSellOrder(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 11:20:29,197 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/findMembersOrdersByMemberId],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.findMembersOrdersByMemberId(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 11:20:29,197 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/saveAcceptancesBaseInfo],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.saveAcceptancesBaseInfo(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 11:20:29,197 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/resetPwd],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.resetPwd(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 11:20:29,198 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/sendPhoneCodes],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.mseSend(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 11:20:29,198 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/login],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.login(java.util.Map<java.lang.String, java.lang.String>,javax.servlet.http.HttpServletRequest)
2019/10/04 11:20:29,198 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/checkAccount],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.checkAccount(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 11:20:29,198 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getLegalCurrencys],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getCoins()
2019/10/04 11:20:29,199 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/registerByPhone],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.registerByPhone(java.util.Map<java.lang.String, java.lang.String>,javax.servlet.http.HttpServletRequest)
2019/10/04 11:20:29,199 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/buyCoins],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.buyCoins(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 11:20:29,199 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/registerByEmail],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.registerByEmail(java.util.Map<java.lang.String, java.lang.String>,javax.servlet.http.HttpServletRequest)
2019/10/04 11:20:29,200 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/sendEmailCodes],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.sendEmailCodes(java.util.Map<java.lang.String, java.lang.String>,javax.servlet.http.HttpServletRequest)
2019/10/04 11:20:29,200 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getNationality],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getNationality()
2019/10/04 11:20:29,200 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/setFiatMoneyPwd],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.setFiatMoneyPwd(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 11:20:29,200 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getSelfCurrencys],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getSelfCurrencys(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 11:20:29,201 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/changePwd],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.changePwd(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 11:20:29,201 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/createOrder],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.createOrder(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 11:20:29,201 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getAllCoins],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getAllCoins()
2019/10/04 11:20:29,202 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getArticleList],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getArticleList(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 11:20:29,202 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/depositNotifyReq],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.depositNotifyReq(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 11:20:29,202 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/addWorkOrder],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.addWorkOrder(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 11:20:29,202 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/withdrawRequest],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.withdrawRequest(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 11:20:29,203 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/withdrawListReq],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.withdrawListReq(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 11:20:29,203 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/klineData],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.klineData(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 11:20:29,203 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/cancelOrder],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.cancelOrder(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 11:20:29,204 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/loginNeedGoogle],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.loginNeedGoogle(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 11:20:29,204 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/addSelfCurrencys],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.addSelfCurrencys(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 11:20:29,204 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/klineConfig],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.klineConfig(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 11:20:29,204 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/deleteBankInfo],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.deleteBankInfo(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 11:20:29,205 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/checkCardOnly],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.checkCardOnly(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 11:20:29,205 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getIncreaseList],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getIncreaseList()
2019/10/04 11:20:29,205 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/delMongodb],methods=[GET]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.delMongodb(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 11:20:29,206 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/orderTraderMod],methods=[POST]}" onto public void net.cyweb.controller.FontController.orderTraderMod()
2019/10/04 11:20:29,206 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/isHasEnoughBM],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.isHasEnoughBM(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 11:20:29,206 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getFlash],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getFlash(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 11:20:29,207 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/googleCancle],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.googleCancle(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 11:20:29,207 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getGoogle],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getGoogle(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 11:20:29,207 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/verifyGoogleCode],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.verifyGoogleCode(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 11:20:29,207 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getDepositRecord],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getDepositRecord(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 11:20:29,208 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/findMemberPwd],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.findMemberPwd(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 11:20:29,208 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/updateGoogle],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.googleUpdate(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 11:20:29,208 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/findFiatMoneyPwd],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.findFiatMoneyPwd(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 11:20:29,212 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/getCurrency],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.getCurrency(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019/10/04 11:20:29,213 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/getCategory],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.getCategory(java.lang.String)
2019/10/04 11:20:29,213 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/getConfig],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.getConfig(java.lang.String)
2019/10/04 11:20:29,213 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/getCurrencyListChange],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.getCurrencyListChange(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019/10/04 11:20:29,213 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/addQianbaoAddress],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.addQianbaoAddress(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019/10/04 11:20:29,214 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/delQianbaoAddress],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.delQianbaoAddress(java.lang.String,java.lang.String)
2019/10/04 11:20:29,214 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/getQianbaoAddress],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.getQianbaoAddress(java.lang.String,java.lang.String,java.lang.String)
2019/10/04 11:20:29,214 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/getCurrencyDetailChange],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.getCurrencyDetailChange(java.lang.String,java.lang.String,java.lang.String)
2019/10/04 11:20:29,214 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/getCurrencyPairOrder],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.getCurrencyPairOrder(java.lang.String,java.lang.String)
2019/10/04 11:20:29,214 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/getCurrencyPairTrade],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.getCurrencyPairTrade(java.lang.String)
2019/10/04 11:20:29,215 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/uploadByUser],methods=[POST],consumes=[multipart/form-data]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.uploadByUser(org.springframework.web.multipart.MultipartFile)
2019/10/04 11:20:29,215 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/getUserTradeData]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.getUserTradeData(java.lang.String,java.lang.String,int,int)
2019/10/04 11:20:29,215 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/getTradeData]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.getTradeData(java.lang.String,java.lang.String)
2019/10/04 11:20:29,215 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/initWeb]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.initWeb(java.lang.String,java.lang.String,java.lang.String)
2019/10/04 11:20:29,215 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/upload],methods=[POST],consumes=[multipart/form-data]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.upload(org.springframework.web.multipart.MultipartFile)
2019/10/04 11:20:29,216 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/getArticleList],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.getArticleList(java.lang.String,java.lang.String,java.lang.String,int,int)
2019/10/04 11:20:29,216 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/getFlash]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.getFlash(java.lang.String,java.lang.String)
2019/10/04 11:20:29,216 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/currencyFindList],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.currencyFindList(java.lang.String,java.lang.String,java.lang.String)
2019/10/04 11:20:29,216 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/getArticleDetail],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.getArticleDetail(java.lang.String,java.lang.String,java.lang.String)
2019/10/04 11:20:29,216 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/getCurrencyPair],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.getCurrencyPair(java.lang.String,java.lang.String)
2019/10/04 11:20:29,217 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/addTimeLine],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.addTimeLine(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019/10/04 11:20:29,217 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/getTimeLine],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.getTimeLine(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019/10/04 11:20:29,217 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/currencyFindAdd],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.currencyFindAdd(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019/10/04 11:20:29,217 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/getArea],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.getArea(java.lang.String)
2019/10/04 11:20:29,217 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/readImage]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.readImage(java.lang.String)
2019/10/04 11:20:29,218 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/searchTrade],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.searchTrade(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019/10/04 11:20:29,218 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/getTradeFee],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.getTradeFee(java.lang.String,java.lang.String)
2019/10/04 11:20:29,219 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontTrade/findBanksInfoByUser],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontTradeController.findBanksInfoByUser(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 11:20:29,219 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontTrade/c2cAssetChange],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontTradeController.c2cAssetChange(java.util.Map<java.lang.String, java.lang.String>,org.apache.catalina.servlet4preview.http.HttpServletRequest)
2019/10/04 11:20:29,220 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontTrade/c2cOrdersBuy],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontTradeController.c2cOrdersBuy(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 11:20:29,220 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontTrade/getGua],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontTradeController.getGua(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 11:20:29,220 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontTrade/cancelBuy],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontTradeController.cancelBuy(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 11:20:29,220 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontTrade/confirmBuy],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontTradeController.confirmBuy(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 11:20:29,220 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontTrade/getC2COrder],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontTradeController.getC2COrder(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 11:20:29,221 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontTrade/getC2COrderList],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontTradeController.getC2COrderList(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 11:20:29,221 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontTrade/cancleBuy],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontTradeController.cancleBuy(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 11:20:29,221 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontTrade/getGuaList],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontTradeController.getGuaList(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 11:20:29,221 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontTrade/c2cOrdersSell],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontTradeController.c2cOrdersSell(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 11:20:29,223 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontUser/getLog],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontUserController.getLog(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019/10/04 11:20:29,223 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontUser/getFtLockRecordSum],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontUserController.getFtLockRecordSum(java.lang.String)
2019/10/04 11:20:29,223 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontUser/googleBind],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontUserController.googleBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019/10/04 11:20:29,223 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontUser/addLog],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontUserController.addLog(java.lang.String,java.lang.String,java.lang.String)
2019/10/04 11:20:29,224 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontUser/applyCoin],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontUserController.applyCoin(net.cyweb.model.YangCoinList,java.lang.String)
2019/10/04 11:20:29,224 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontUser/getCardLock],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontUserController.getCardLock(java.lang.String,java.lang.String,java.lang.String)
2019/10/04 11:20:29,224 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontUser/addTibiOut],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontUserController.addTibiOut(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019/10/04 11:20:29,224 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontUser/loginRecord]}" onto public net.cyweb.model.Result net.cyweb.controller.FontUserController.loginRecord(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019/10/04 11:20:29,224 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontUser/getFuntNum],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontUserController.getFuntNum(java.lang.String)
2019/10/04 11:20:29,225 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontUser/searchOrder],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontUserController.searchOrder(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019/10/04 11:20:29,225 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontUser/getFtLockRecord],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontUserController.getFtLockRecord(java.lang.String,java.lang.String,java.lang.String)
2019/10/04 11:20:29,228 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontUser/getCardOrder],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontUserController.getCardOrder(java.lang.String,java.lang.String,java.lang.String)
2019/10/04 11:20:29,228 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontUser/getTibiOutList],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontUserController.getTibiOutList(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019/10/04 11:20:29,228 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontUser/googleCancle],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontUserController.googleCancle(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019/10/04 11:20:29,229 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontUser/getGoogle],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontUserController.getGoogle(java.lang.String)
2019/10/04 11:20:29,229 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontUser/googleUpdate],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontUserController.googleUpdate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019/10/04 11:20:29,230 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/member/list],methods=[GET]}" onto public net.cyweb.model.Result net.cyweb.controller.FunMemberController.list()
2019/10/04 11:20:29,230 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/member/getmember],methods=[GET]}" onto public net.cyweb.model.Result net.cyweb.controller.FunMemberController.getMember(java.lang.Integer)
2019/10/04 11:20:29,230 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/member/createMemberCurrency],methods=[GET]}" onto public net.cyweb.model.Result net.cyweb.controller.FunMemberController.createMemberCurrency(java.lang.Integer,java.lang.Integer,java.lang.String)
2019/10/04 11:20:29,230 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/member/getMemberCurrencyList],methods=[GET]}" onto public net.cyweb.model.Result net.cyweb.controller.FunMemberController.getMemberCurrencyList(java.lang.Integer)
2019/10/04 11:20:29,231 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/member/getMemberCurrency],methods=[GET]}" onto public net.cyweb.model.Result net.cyweb.controller.FunMemberController.getMemberCurrency(java.lang.Integer,java.lang.Integer)
2019/10/04 11:20:29,231 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/member/flushCurrencyFlash],methods=[GET]}" onto public net.cyweb.model.Result net.cyweb.controller.FunMemberController.flushCurrencyFlash(java.lang.String,java.lang.String)
2019/10/04 11:20:29,231 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/member/xssTest],methods=[GET]}" onto public java.lang.String net.cyweb.controller.FunMemberController.xssTest(java.lang.String)
2019/10/04 11:20:29,231 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/member/confirm],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FunMemberController.confirm(java.math.BigInteger,java.lang.String,int)
2019/10/04 11:20:29,232 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/member/finishConfirm],methods=[POST],consumes=[application/json]}" onto public net.cyweb.model.Result net.cyweb.controller.FunMemberController.finishConfirm(java.math.BigInteger,java.lang.String,java.lang.String,int)
2019/10/04 11:20:29,232 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/member/chongzhi],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FunMemberController.chongzhi(net.cyweb.model.YangTibi)
2019/10/04 11:20:29,232 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/test/testSocket]}" onto public void net.cyweb.controller.testCoinController.test1() throws java.lang.Exception
2019/10/04 11:20:29,233 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/trade/getToken],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.TradeApiController.getToken(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 11:20:29,233 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/trade/flushCurrencyPair],methods=[POST]}" onto public boolean net.cyweb.controller.TradeApiController.flushCurrencyPair(int)
2019/10/04 11:20:29,234 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/trade/getUserOrderRecord],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.TradeApiController.getUserOrderFiveRecord(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 11:20:29,234 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/trade/getUserTradeRecord],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.TradeApiController.getUserTradeFiveRecord(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 11:20:29,234 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/trade/mountOrder],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.TradeApiController.mountOrder(net.cyweb.model.YangOrders,org.springframework.validation.BindingResult)
2019/10/04 11:20:29,234 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/trade/klineDataApi],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.TradeApiController.klineDataApi(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019/10/04 11:20:29,235 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/trade/createorder],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.TradeApiController.createorder(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 11:20:29,235 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/trade/getCurrencyInfo],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.TradeApiController.getCurrencyInfo(java.lang.String)
2019/10/04 11:20:29,235 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/trade/klineDataTest],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.TradeApiController.klineDataTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019/10/04 11:20:29,235 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/trade/klineData],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.TradeApiController.klineData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019/10/04 11:20:29,236 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/trade/cancelOrder],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.TradeApiController.cancelOrder(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 11:20:29,236 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/trade/delMongodb],methods=[GET]}" onto public net.cyweb.model.Result net.cyweb.controller.TradeApiController.delMongodb(java.lang.String)
2019/10/04 11:20:29,236 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/trade/getFontTradeLastTime],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.TradeApiController.getFontTradeLstTime(java.lang.String,java.lang.String)
2019/10/04 11:20:29,237 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019/10/04 11:20:29,239 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019/10/04 11:20:29,239 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019/10/04 11:20:29,240 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019/10/04 11:20:29,242 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019/10/04 11:20:29,243 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019/10/04 11:20:30,018 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2019/10/04 11:20:30,019 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2019/10/04 11:20:30,019 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2019/10/04 11:20:30,019 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2019/10/04 11:20:30,020 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2019/10/04 11:20:30,020 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 11:20:30,020 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2019/10/04 11:20:30,021 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2019/10/04 11:20:30,021 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 11:20:30,022 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 11:20:30,023 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 11:20:30,024 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2019/10/04 11:20:30,024 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 11:20:30,024 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 11:20:30,025 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2019/10/04 11:20:30,025 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 11:20:30,025 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2019/10/04 11:20:30,026 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 11:20:30,027 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 11:20:30,027 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 11:20:30,028 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 11:20:30,028 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2019/10/04 11:20:30,029 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2019/10/04 11:20:30,029 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 11:20:30,029 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 11:20:30,029 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2019/10/04 11:20:30,030 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 11:20:30,336 INFO   main                  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize(ExecutorConfigurationSupport.java:165) - Initializing ExecutorService  'clientInboundChannelExecutor'
2019/10/04 11:20:30,347 INFO   main                  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize(ExecutorConfigurationSupport.java:165) - Initializing ExecutorService  'clientOutboundChannelExecutor'
2019/10/04 11:20:30,366 INFO   main                  org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler.initialize(ExecutorConfigurationSupport.java:165) - Initializing ExecutorService  'messageBrokerTaskScheduler'
2019/10/04 11:20:30,401 INFO   main                  org.springframework.web.socket.server.support.WebSocketHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/endpointWisely/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019/10/04 11:20:30,411 INFO   main                  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize(ExecutorConfigurationSupport.java:165) - Initializing ExecutorService  'brokerChannelExecutor'
2019/10/04 11:20:30,594 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@df5f5c0: startup date [Fri Oct 04 11:20:24 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3932c79a
2019/10/04 11:20:30,663 INFO   main                  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019/10/04 11:20:30,663 INFO   main                  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019/10/04 11:20:30,702 INFO   main                  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019/10/04 11:20:31,752 INFO   main                  org.springframework.boot.autoconfigure.security.AuthenticationManagerConfiguration.configure(AuthenticationManagerConfiguration.java:173) - 

Using default security password: c994ad43-1f9d-43f1-8b11-f3e401f4e610

2019/10/04 11:20:31,800 INFO   main                  org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43) - Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
2019/10/04 11:20:31,882 INFO   main                  org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43) - Creating filter chain: org.springframework.boot.actuate.autoconfigure.ManagementWebSecurityAutoConfiguration$LazyEndpointPathRequestMatcher@73c1dda3, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@c3c63c1, org.springframework.security.web.context.SecurityContextPersistenceFilter@7ca8f5d7, org.springframework.security.web.header.HeaderWriterFilter@1e12fdcf, org.springframework.web.filter.CorsFilter@5e75cf7a, org.springframework.security.web.authentication.logout.LogoutFilter@3006aef5, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@3cfab56d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1690929, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@30a1b2ad, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6f12fca0, org.springframework.security.web.session.SessionManagementFilter@7674f9d4, org.springframework.security.web.access.ExceptionTranslationFilter@50d6af87, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@18d09283]
2019/10/04 11:20:31,891 INFO   main                  org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43) - Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@71db6703, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@470ad01c, org.springframework.security.web.context.SecurityContextPersistenceFilter@3af6c672, org.springframework.security.web.header.HeaderWriterFilter@7e24a2e2, org.springframework.security.web.csrf.CsrfFilter@1acfc058, org.springframework.security.web.authentication.logout.LogoutFilter@7d12fb85, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@12948e7a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@497c1d78, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6e349258, org.springframework.security.web.session.SessionManagementFilter@38318d67, org.springframework.security.web.access.ExceptionTranslationFilter@28200d43]
2019/10/04 11:20:32,470 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.afterSingletonsInstantiated(MBeanExporter.java:431) - Registering beans for JMX exposure on startup
2019/10/04 11:20:32,471 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'dataSource' has been autodetected for JMX exposure
2019/10/04 11:20:32,477 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'environmentManager' has been autodetected for JMX exposure
2019/10/04 11:20:32,479 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2019/10/04 11:20:32,479 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2019/10/04 11:20:32,479 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'restartEndpoint' has been autodetected for JMX exposure
2019/10/04 11:20:32,480 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2019/10/04 11:20:32,480 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'refreshScope' has been autodetected for JMX exposure
2019/10/04 11:20:32,483 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2019/10/04 11:20:32,491 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
2019/10/04 11:20:32,498 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2019/10/04 11:20:32,502 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2019/10/04 11:20:32,509 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=df5f5c0,type=ConfigurationPropertiesRebinder]
2019/10/04 11:20:32,512 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:671) - Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019/10/04 11:20:32,513 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2019/10/04 11:20:32,513 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.afterSingletonsInstantiated(MBeanExporter.java:431) - Registering beans for JMX exposure on startup
2019/10/04 11:20:32,781 INFO   main                  org.springframework.context.support.DefaultLifecycleProcessor.start(DefaultLifecycleProcessor.java:343) - Starting beans in phase 0
2019/10/04 11:20:32,799 INFO   main                  org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(InstanceInfoFactory.java:70) - Setting initial instance status as: STARTING
2019/10/04 11:20:32,854 INFO   main                  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:40) - Registering application javaApi with eureka with status UP
2019/10/04 11:20:32,858 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2019/10/04 11:20:32,863 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
2019/10/04 11:20:32,869 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2019/10/04 11:20:32,871 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2019/10/04 11:20:32,872 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2019/10/04 11:20:32,874 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2019/10/04 11:20:32,876 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2019/10/04 11:20:32,878 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2019/10/04 11:20:32,884 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2019/10/04 11:20:32,886 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2019/10/04 11:20:32,888 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2019/10/04 11:20:32,890 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2019/10/04 11:20:32,891 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2019/10/04 11:20:32,893 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
2019/10/04 11:20:32,894 INFO   main                  org.springframework.context.support.DefaultLifecycleProcessor.start(DefaultLifecycleProcessor.java:343) - Starting beans in phase 2147483647
2019/10/04 11:20:32,894 INFO   main                  org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler.start(AbstractBrokerMessageHandler.java:157) - Starting...
2019/10/04 11:20:32,894 INFO   main                  org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler.publishBrokerAvailableEvent(AbstractBrokerMessageHandler.java:260) - BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019/10/04 11:20:32,894 INFO   main                  org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler.start(AbstractBrokerMessageHandler.java:166) - Started.
2019/10/04 11:20:32,908 INFO   main                  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.onApplicationEvent(DocumentationPluginsBootstrapper.java:84) - Context refreshed
2019/10/04 11:20:32,920 INFO   main                  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.onApplicationEvent(DocumentationPluginsBootstrapper.java:87) - Found 1 custom documentation plugin(s)
2019/10/04 11:20:32,930 INFO   main                  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:44) - Scanning for api listing references
2019/10/04 11:20:33,056 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,060 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,069 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,069 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,069 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,069 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,069 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,070 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,606 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,607 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,607 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,607 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,608 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,609 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,609 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,609 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,610 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,610 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,610 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,611 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,612 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,612 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,613 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,614 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,614 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,615 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,616 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,616 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,616 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,618 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,618 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,618 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,618 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,618 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,619 INFO   main                  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40) - Generating unique operation named: getArticleListUsingPOST_1
2019/10/04 11:20:33,621 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,622 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,622 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,622 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,622 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,623 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,624 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,624 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,625 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,625 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,625 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,625 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,625 INFO   main                  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40) - Generating unique operation named: getCurrencyListChangeUsingPOST_1
2019/10/04 11:20:33,626 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,626 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,628 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,628 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,629 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,630 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,631 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,631 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,632 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,632 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,633 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,633 INFO   main                  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40) - Generating unique operation named: getFlashUsingPOST_1
2019/10/04 11:20:33,634 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,634 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,634 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,635 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,635 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,636 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,637 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,637 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,638 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,638 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,640 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,640 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,640 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,641 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,642 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,642 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,642 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,643 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,643 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,644 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,644 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,645 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,645 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,646 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,646 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,647 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,647 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,648 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,648 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,649 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,649 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,650 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,650 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,651 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,652 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,653 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,654 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,655 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,655 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,656 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,656 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,657 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,657 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,657 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,658 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,659 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,659 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,660 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,660 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,661 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,661 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,662 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,662 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,662 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,663 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,663 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,663 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,664 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,664 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,665 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,665 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,665 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,666 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,666 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,666 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,666 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,667 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,667 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,667 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,668 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,668 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,668 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,669 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,669 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,669 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,670 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,671 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,672 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,672 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,673 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,674 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,675 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,676 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,678 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,679 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,679 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,679 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,679 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,680 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,680 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,680 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,694 INFO   main                  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40) - Generating unique operation named: findBanksInfoByUserUsingPOST_1
2019/10/04 11:20:33,701 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,701 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,701 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,702 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,702 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,702 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,702 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,703 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,703 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,703 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,703 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,704 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,705 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,705 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,705 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,706 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,706 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,706 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,706 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,706 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,706 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,706 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,706 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,706 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,706 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,706 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,707 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,707 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,707 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,707 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,707 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,707 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,707 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,707 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,707 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,707 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,707 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,708 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,708 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,709 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,710 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,710 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,711 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,711 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,711 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,712 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,713 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,713 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,714 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,714 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,715 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,716 INFO   main                  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40) - Generating unique operation named: getGoogleUsingPOST_1
2019/10/04 11:20:33,716 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,716 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,716 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,717 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,717 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,718 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,718 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,719 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,719 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,719 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,719 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,719 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,719 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,720 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,720 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,720 INFO   main                  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40) - Generating unique operation named: googleCancleUsingPOST_1
2019/10/04 11:20:33,721 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,721 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,721 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,721 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,721 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,722 INFO   main                  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40) - Generating unique operation named: googleUpdateUsingPOST_1
2019/10/04 11:20:33,722 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,722 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,722 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,723 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,723 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,723 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,723 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,723 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,724 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,724 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,724 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,724 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,724 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,725 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,725 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,725 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,725 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,725 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,725 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,726 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,726 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,726 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,726 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,726 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,726 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,727 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,727 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,727 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,727 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,727 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,728 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,728 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,728 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,728 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,728 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,729 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,729 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,729 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,729 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,729 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,731 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,731 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,731 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,731 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,731 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,731 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,731 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,731 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,735 INFO   main                  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40) - Generating unique operation named: cancelOrderUsingPOST_1
2019/10/04 11:20:33,737 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,738 INFO   main                  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40) - Generating unique operation named: delMongodbUsingGET_1
2019/10/04 11:20:33,741 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,741 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,746 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,746 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,746 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,746 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,746 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,747 INFO   main                  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40) - Generating unique operation named: klineDataUsingPOST_1
2019/10/04 11:20:33,747 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,748 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,748 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,748 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,748 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,749 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,749 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,749 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,749 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,749 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,750 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 11:20:33,792 INFO   main                  org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.start(TomcatEmbeddedServletContainer.java:201) - Tomcat started on port(s): 8009 (http)
2019/10/04 11:20:33,793 INFO   main                  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:117) - Updating port to 8009
2019/10/04 11:20:33,797 INFO   main                  net.cyweb.javaapi.logStarted(StartupInfoLogger.java:57) - Started javaapi in 10.718 seconds (JVM running for 11.809)
2019/10/04 11:20:45,749 INFO   http-nio-8009-exec-1  org.springframework.web.servlet.DispatcherServlet.initServletBean(FrameworkServlet.java:489) - FrameworkServlet 'dispatcherServlet': initialization started
2019/10/04 11:20:45,768 INFO   http-nio-8009-exec-1  org.springframework.web.servlet.DispatcherServlet.initServletBean(FrameworkServlet.java:508) - FrameworkServlet 'dispatcherServlet': initialization completed in 19 ms
2019/10/04 11:21:30,410 INFO   MessageBroker-4       org.springframework.web.socket.config.WebSocketMessageBrokerStats.run(WebSocketMessageBrokerStats.java:113) - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 6, active threads = 2, queued tasks = 2, completed tasks = 5]
2019/10/04 14:25:03,549 INFO   main                  net.cyweb.EurekaApp.logStartupProfileInfo(SpringApplication.java:597) - The following profiles are active: local
2019/10/04 14:25:03,561 INFO   main                  org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext.prepareRefresh(AbstractApplicationContext.java:583) - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@71b3bc45: startup date [Fri Oct 04 14:25:03 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@247d8ae
2019/10/04 14:25:04,045 INFO   main                  org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:263) - BeanFactory id=4e058b3b-2e8f-3bd4-a6bc-de54eac03491
2019/10/04 14:25:04,055 INFO   main                  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155) - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019/10/04 14:25:04,087 INFO   main                  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$e32e63fd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019/10/04 14:25:04,093 INFO   main                  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$cd1bc0b9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019/10/04 14:25:04,251 INFO   main                  org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.initialize(TomcatEmbeddedServletContainer.java:89) - Tomcat initialized with port(s): 8001 (http)
2019/10/04 14:25:04,259 INFO   main                  org.apache.catalina.core.StandardService.log(DirectJDKLog.java:180) - Starting service [Tomcat]
2019/10/04 14:25:04,261 INFO   main                  org.apache.catalina.core.StandardEngine.log(DirectJDKLog.java:180) - Starting Servlet Engine: Apache Tomcat/8.5.27
2019/10/04 14:25:04,361 INFO   localhost-startStop-1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log(DirectJDKLog.java:180) - Initializing Spring embedded WebApplicationContext
2019/10/04 14:25:04,361 INFO   localhost-startStop-1 org.springframework.web.context.ContextLoader.prepareEmbeddedWebApplicationContext(EmbeddedWebApplicationContext.java:276) - Root WebApplicationContext: initialization completed in 800 ms
2019/10/04 14:25:04,962 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'metricsFilter' to: [/*]
2019/10/04 14:25:04,963 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'characterEncodingFilter' to: [/*]
2019/10/04 14:25:04,963 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019/10/04 14:25:04,963 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019/10/04 14:25:04,964 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'requestContextFilter' to: [/*]
2019/10/04 14:25:04,964 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'webRequestTraceFilter' to: [/*]
2019/10/04 14:25:04,964 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:271) - Mapping filter: 'servletContainer' to urls: [/eureka/*]
2019/10/04 14:25:04,964 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'applicationContextIdFilter' to: [/*]
2019/10/04 14:25:04,964 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.ServletRegistrationBean.onStartup(ServletRegistrationBean.java:190) - Mapping servlet: 'dispatcherServlet' to [/]
2019/10/04 14:25:05,023 INFO   localhost-startStop-1 com.sun.jersey.server.impl.application.WebApplicationImpl._initiate(WebApplicationImpl.java:815) - Initiating Jersey application, version 'Jersey: 1.19.1 03/11/2016 02:08 PM'
2019/10/04 14:25:06,051 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@71b3bc45: startup date [Fri Oct 04 14:25:03 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@247d8ae
2019/10/04 14:25:06,128 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019/10/04 14:25:06,129 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019/10/04 14:25:06,132 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/],methods=[GET]}" onto public java.lang.String org.springframework.cloud.netflix.eureka.server.EurekaController.status(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.Object>)
2019/10/04 14:25:06,133 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/lastn],methods=[GET]}" onto public java.lang.String org.springframework.cloud.netflix.eureka.server.EurekaController.lastn(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.Object>)
2019/10/04 14:25:06,163 INFO   main                  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019/10/04 14:25:06,163 INFO   main                  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019/10/04 14:25:06,213 INFO   main                  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019/10/04 14:25:06,916 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2019/10/04 14:25:06,917 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 14:25:06,918 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 14:25:06,919 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 14:25:06,920 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 14:25:06,921 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2019/10/04 14:25:06,921 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 14:25:06,924 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2019/10/04 14:25:06,925 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:25:06,926 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 14:25:06,926 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2019/10/04 14:25:06,927 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2019/10/04 14:25:06,929 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 14:25:06,930 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2019/10/04 14:25:06,931 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 14:25:06,932 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2019/10/04 14:25:06,932 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2019/10/04 14:25:06,934 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2019/10/04 14:25:06,935 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2019/10/04 14:25:06,936 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2019/10/04 14:25:06,937 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 14:25:06,940 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:25:06,941 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2019/10/04 14:25:06,943 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2019/10/04 14:25:06,944 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 14:25:06,945 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 14:25:06,945 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 14:25:07,101 INFO   main                  org.springframework.ui.freemarker.SpringTemplateLoader.<init>(SpringTemplateLoader.java:61) - SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@71b3bc45: startup date [Fri Oct 04 14:25:03 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@247d8ae] and template loader path [classpath:/templates/]
2019/10/04 14:25:07,102 INFO   main                  org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer.postProcessTemplateLoaders(FreeMarkerConfigurer.java:127) - ClassTemplateLoader for Spring macros added to FreeMarker configuration
2019/10/04 14:25:07,278 WARN   main                  org.springframework.cloud.netflix.archaius.ArchaiusAutoConfiguration.configureArchaius(ArchaiusAutoConfiguration.java:138) - No spring.application.name found, defaulting to 'application'
2019/10/04 14:25:07,378 INFO   main                  org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(InstanceInfoFactory.java:70) - Setting initial instance status as: STARTING
2019/10/04 14:25:07,848 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.afterSingletonsInstantiated(MBeanExporter.java:431) - Registering beans for JMX exposure on startup
2019/10/04 14:25:07,854 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'environmentManager' has been autodetected for JMX exposure
2019/10/04 14:25:07,856 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2019/10/04 14:25:07,856 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2019/10/04 14:25:07,857 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'restartEndpoint' has been autodetected for JMX exposure
2019/10/04 14:25:07,857 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2019/10/04 14:25:07,858 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'refreshScope' has been autodetected for JMX exposure
2019/10/04 14:25:07,859 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2019/10/04 14:25:07,868 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
2019/10/04 14:25:07,877 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2019/10/04 14:25:07,885 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2019/10/04 14:25:07,894 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=71b3bc45,type=ConfigurationPropertiesRebinder]
2019/10/04 14:25:07,897 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2019/10/04 14:25:07,898 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.afterSingletonsInstantiated(MBeanExporter.java:431) - Registering beans for JMX exposure on startup
2019/10/04 14:25:08,139 INFO   main                  org.springframework.context.support.DefaultLifecycleProcessor.start(DefaultLifecycleProcessor.java:343) - Starting beans in phase 0
2019/10/04 14:25:08,139 INFO   main                  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:40) - Registering application unknown with eureka with status UP
2019/10/04 14:25:08,141 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2019/10/04 14:25:08,145 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
2019/10/04 14:25:08,149 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2019/10/04 14:25:08,150 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2019/10/04 14:25:08,152 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2019/10/04 14:25:08,153 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2019/10/04 14:25:08,155 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2019/10/04 14:25:08,156 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2019/10/04 14:25:08,159 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2019/10/04 14:25:08,161 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2019/10/04 14:25:08,162 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2019/10/04 14:25:08,163 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2019/10/04 14:25:08,165 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2019/10/04 14:25:08,167 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
2019/10/04 14:25:08,168 INFO   Thread-22             org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap.initEurekaEnvironment(EurekaServerBootstrap.java:107) - Setting the eureka configuration..
2019/10/04 14:25:08,168 INFO   Thread-22             org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap.initEurekaEnvironment(EurekaServerBootstrap.java:112) - Eureka data center value eureka.datacenter is not set, defaulting to default
2019/10/04 14:25:08,168 INFO   Thread-22             org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap.initEurekaEnvironment(EurekaServerBootstrap.java:126) - Eureka environment value eureka.environment is not set, defaulting to test
2019/10/04 14:25:08,176 INFO   Thread-22             org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap.isAws(EurekaServerBootstrap.java:182) - isAws returned false
2019/10/04 14:25:08,176 INFO   Thread-22             org.springframework.cloud.netflix.eureka.server.EurekaServerBootstrap.initEurekaServerContext(EurekaServerBootstrap.java:150) - Initialized server context
2019/10/04 14:25:08,180 INFO   Thread-22             org.springframework.cloud.netflix.eureka.server.EurekaServerInitializerConfiguration.run(EurekaServerInitializerConfiguration.java:71) - Started Eureka Server
2019/10/04 14:25:08,180 INFO   main                  org.apache.coyote.http11.Http11NioProtocol.log(DirectJDKLog.java:180) - Initializing ProtocolHandler ["http-nio-8001"]
2019/10/04 14:25:08,186 INFO   main                  org.apache.coyote.http11.Http11NioProtocol.log(DirectJDKLog.java:180) - Starting ProtocolHandler ["http-nio-8001"]
2019/10/04 14:25:08,198 INFO   main                  org.apache.tomcat.util.net.NioSelectorPool.log(DirectJDKLog.java:180) - Using a shared selector for servlet write/read
2019/10/04 14:25:08,216 INFO   main                  org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.start(TomcatEmbeddedServletContainer.java:201) - Tomcat started on port(s): 8001 (http)
2019/10/04 14:25:08,217 INFO   main                  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:117) - Updating port to 8001
2019/10/04 14:25:08,220 INFO   main                  net.cyweb.EurekaApp.logStarted(StartupInfoLogger.java:57) - Started EurekaApp in 5.638 seconds (JVM running for 6.494)
2019/10/04 14:25:10,695 INFO   main                  net.cyweb.javaapi.logStartupProfileInfo(SpringApplication.java:597) - The following profiles are active: dev
2019/10/04 14:25:10,723 INFO   main                  org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext.prepareRefresh(AbstractApplicationContext.java:583) - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@df5f5c0: startup date [Fri Oct 04 14:25:10 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3932c79a
2019/10/04 14:25:11,664 INFO   main                  org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:828) - Overriding bean definition for bean 'mongoSettingsProperties' with a different definition: replacing [Generic bean: class [net.cyweb.config.custom.MongoSettingsProperties]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [D:\center_new\front-services\javaapi\target\classes\net\cyweb\config\custom\MongoSettingsProperties.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=mongoConfig; factoryMethodName=mongoSettingsProperties; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [net/cyweb/config/custom/MongoConfig.class]]
2019/10/04 14:25:11,956 INFO   main                  org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:165) - Multiple Spring Data modules found, entering strict repository configuration mode!
2019/10/04 14:25:12,185 INFO   main                  org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:165) - Multiple Spring Data modules found, entering strict repository configuration mode!
2019/10/04 14:25:12,831 INFO   main                  org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:263) - BeanFactory id=46ed19e5-f08b-3b95-a37b-0c1390c0f0cf
2019/10/04 14:25:12,984 INFO   main                  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155) - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019/10/04 14:25:13,541 INFO   main                  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'redisConfig' of type [net.cyweb.config.custom.RedisConfig$$EnhancerBySpringCGLIB$$457f9654] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019/10/04 14:25:13,557 INFO   main                  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$24abb404] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019/10/04 14:25:13,616 INFO   main                  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$6dbdea22] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019/10/04 14:25:13,658 INFO   main                  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$56d85a45] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019/10/04 14:25:13,688 INFO   main                  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$40c5b701] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019/10/04 14:25:14,928 INFO   main                  org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.initialize(TomcatEmbeddedServletContainer.java:89) - Tomcat initialized with port(s): 8009 (http)
2019/10/04 14:25:15,429 INFO   localhost-startStop-1 org.springframework.web.context.ContextLoader.prepareEmbeddedWebApplicationContext(EmbeddedWebApplicationContext.java:276) - Root WebApplicationContext: initialization completed in 4706 ms
2019/10/04 14:25:15,757 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'metricsFilter' to: [/*]
2019/10/04 14:25:15,757 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'characterEncodingFilter' to: [/*]
2019/10/04 14:25:15,757 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019/10/04 14:25:15,757 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019/10/04 14:25:15,757 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'requestContextFilter' to: [/*]
2019/10/04 14:25:15,759 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'springSecurityFilterChain' to: [/*]
2019/10/04 14:25:15,759 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'webRequestLoggingFilter' to: [/*]
2019/10/04 14:25:15,759 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'CORSFilter' to: [/*]
2019/10/04 14:25:15,759 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'applicationContextIdFilter' to: [/*]
2019/10/04 14:25:15,759 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.ServletRegistrationBean.onStartup(ServletRegistrationBean.java:190) - Mapping servlet: 'dispatcherServlet' to [/]
2019/10/04 14:25:16,295 INFO   main                  com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:721) - {dataSource-1} inited
2019/10/04 14:25:17,645 INFO   main                  org.mongodb.driver.cluster.info(SLF4JLogger.java:71) - Cluster created with settings {hosts=[localhost:27017], mode2019/10/04 14:25:19,496 ERROR  main                  com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:694) - init datasource error, url: jdbc:mysql://localhost:3306/funcoin?useUnicode=true&amp;characterEncoding=utf-8
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3973) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:873) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1710) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1226) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2188) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2219) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2014) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:776) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:1.8.0_25]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:1.8.0_25]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:1.8.0_25]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:408) ~[?:1.8.0_25]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1408) ~[druid-1.0.18.jar:1.0.18]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1464) ~[druid-1.0.18.jar:1.0.18]
	at com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:683) [druid-1.0.18.jar:1.0.18]
	at net.cyweb.config.druid.DruidAutoConfiguration.dataSource(DruidAutoConfiguration.java:46) [classes/:?]
	at net.cyweb.config.druid.DruidAutoConfiguration$$EnhancerBySpringCGLIB$$47a36a64.CGLIB$dataSource$0(<generated>) [classes/:?]
	at net.cyweb.config.druid.DruidAutoConfiguration$$EnhancerBySpringCGLIB$$47a36a64$$FastClassBySpringCGLIB$$574c075b.invoke(<generated>) [classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228) [spring-core-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:358) [spring-context-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at net.cyweb.config.druid.DruidAutoConfiguration$$EnhancerBySpringCGLIB$$47a36a64.dataSource(<generated>) [classes/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_25]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_25]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_25]
	at java.lang.reflect.Method.invoke(Method.java:483) ~[?:1.8.0_25]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:162) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:467) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1342) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1249) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:761) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867) [spring-context-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543) [spring-context-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122) [spring-boot-1.5.10.RELEASE.jar:1.5.10.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693) [spring-boot-1.5.10.RELEASE.jar:1.5.10.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360) [spring-boot-1.5.10.RELEASE.jar:1.5.10.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303) [spring-boot-1.5.10.RELEASE.jar:1.5.10.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118) [spring-boot-1.5.10.RELEASE.jar:1.5.10.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107) [spring-boot-1.5.10.RELEASE.jar:1.5.10.RELEASE]
	at net.cyweb.klinemongodb.main(klinemongodb.java:41) [classes/:?]
2019/10/04 14:25:19,510 ERROR  main                  com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:712) - {dataSource-1} init error
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3973) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:873) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1710) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1226) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2188) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2219) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2014) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:776) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:1.8.0_25]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:1.8.0_25]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:1.8.0_25]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:408) ~[?:1.8.0_25]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1408) ~[druid-1.0.18.jar:1.0.18]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1464) ~[druid-1.0.18.jar:1.0.18]
	at com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:683) [druid-1.0.18.jar:1.0.18]
	at net.cyweb.config.druid.DruidAutoConfiguration.dataSource(DruidAutoConfiguration.java:46) [classes/:?]
	at net.cyweb.config.druid.DruidAutoConfiguration$$EnhancerBySpringCGLIB$$47a36a64.CGLIB$dataSource$0(<generated>) [classes/:?]
	at net.cyweb.config.druid.DruidAutoConfiguration$$EnhancerBySpringCGLIB$$47a36a64$$FastClassBySpringCGLIB$$574c075b.invoke(<generated>) [classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228) [spring-core-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:358) [spring-context-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at net.cyweb.config.druid.DruidAutoConfiguration$$EnhancerBySpringCGLIB$$47a36a64.dataSource(<generated>) [classes/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_25]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_25]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_25]
	at java.lang.reflect.Method.invoke(Method.java:483) ~[?:1.8.0_25]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:162) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:467) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1342) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1249) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:761) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867) [spring-context-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543) [spring-context-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122) [spring-boot-1.5.10.RELEASE.jar:1.5.10.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693) [spring-boot-1.5.10.RELEASE.jar:1.5.10.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360) [spring-boot-1.5.10.RELEASE.jar:1.5.10.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303) [spring-boot-1.5.10.RELEASE.jar:1.5.10.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118) [spring-boot-1.5.10.RELEASE.jar:1.5.10.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107) [spring-boot-1.5.10.RELEASE.jar:1.5.10.RELEASE]
	at net.cyweb.klinemongodb.main(klinemongodb.java:41) [classes/:?]
2019/10/04 14:25:19,519 ERROR  Druid-ConnectionPool-Create-1421101177 com.alibaba.druid.pool.DruidDataSource.run(DruidDataSource.java:1971) - create connection error, url: jdbc:mysql://localhost:3306/funcoin?useUnicode=true&amp;characterEncoding=utf-8, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3973) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:873) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1710) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1226) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2188) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2219) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2014) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:776) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:1.8.0_25]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:1.8.0_25]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:1.8.0_25]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:408) ~[?:1.8.0_25]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1408) ~[druid-1.0.18.jar:1.0.18]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1464) ~[druid-1.0.18.jar:1.0.18]
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:1969) [druid-1.0.18.jar:1.0.18]
2019/10/04 14:25:19,524 ERROR  Druid-ConnectionPool-Create-1421101177 com.alibaba.druid.pool.DruidDataSource.run(DruidDataSource.java:1971) - create connection error, url: jdbc:mysql://localhost:3306/funcoin?useUnicode=true&amp;characterEncoding=utf-8, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3973) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:873) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1710) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1226) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2188) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2219) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2014) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:776) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:1.8.0_25]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:1.8.0_25]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:1.8.0_25]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:408) ~[?:1.8.0_25]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1408) ~[druid-1.0.18.jar:1.0.18]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1464) ~[druid-1.0.18.jar:1.0.18]
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:1969) [druid-1.0.18.jar:1.0.18]
2019/10/04 14:25:19,527 ERROR  Druid-ConnectionPool-Create-1421101177 com.alibaba.druid.pool.DruidDataSource.run(DruidDataSource.java:1971) - create connection error, url: jdbc:mysql://localhost:3306/funcoin?useUnicode=true&amp;characterEncoding=utf-8, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3973) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:873) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1710) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1226) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2188) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2219) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2014) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:776) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:1.8.0_25]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:1.8.0_25]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:1.8.0_25]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:408) ~[?:1.8.0_25]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1408) ~[druid-1.0.18.jar:1.0.18]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1464) ~[druid-1.0.18.jar:1.0.18]
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:1969) [druid-1.0.18.jar:1.0.18]
2019/10/04 14:25:19,531 ERROR  Druid-ConnectionPool-Create-1421101177 com.alibaba.druid.pool.DruidDataSource.run(DruidDataSource.java:1971) - create connection error, url: jdbc:mysql://localhost:3306/funcoin?useUnicode=true&amp;characterEncoding=utf-8, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3973) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:873) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1710) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1226) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2188) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2219) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2014) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:776) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:1.8.0_25]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:1.8.0_25]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:1.8.0_25]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:408) ~[?:1.8.0_25]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1408) ~[druid-1.0.18.jar:1.0.18]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1464) ~[druid-1.0.18.jar:1.0.18]
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:1969) [druid-1.0.18.jar:1.0.18]
2019/10/04 14:25:19,536 ERROR  Druid-ConnectionPool-Create-1421101177 com.alibaba.druid.pool.DruidDataSource.run(DruidDataSource.java:1971) - create connection error, url: jdbc:mysql://localhost:3306/funcoin?useUnicode=true&amp;characterEncoding=utf-8, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3973) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:873) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1710) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1226) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2188) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2219) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2014) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:776) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:1.8.0_25]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:1.8.0_25]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:1.8.0_25]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:408) ~[?:1.8.0_25]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1408) ~[druid-1.0.18.jar:1.0.18]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1464) ~[druid-1.0.18.jar:1.0.18]
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:1969) [druid-1.0.18.jar:1.0.18]
2019/10/04 14:25:19,540 ERROR  Druid-ConnectionPool-Create-1421101177 com.alibaba.druid.pool.DruidDataSource.run(DruidDataSource.java:1971) - create connection error, url: jdbc:mysql://localhost:3306/funcoin?useUnicode=true&amp;characterEncoding=utf-8, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3973) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:873) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1710) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1226) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2188) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2219) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2014) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:776) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:1.8.0_25]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:1.8.0_25]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:1.8.0_25]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:408) ~[?:1.8.0_25]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1408) ~[druid-1.0.18.jar:1.0.18]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1464) ~[druid-1.0.18.jar:1.0.18]
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:1969) [druid-1.0.18.jar:1.0.18]
2019/10/04 14:25:19,540 ERROR  main                  org.springframework.boot.SpringApplication.reportFailure(SpringApplication.java:771) - Application startup failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'klineMongodbRunner': Unsatisfied dependency expressed through field 'yangTradeService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'yangTradeService': Unsatisfied dependency expressed through field 'mapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'yangTradeMapper' defined in file [D:\center_new\order-services\klinemongodb\target\classes\net\cyweb\mapper\YangTradeMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [net/cyweb/config/druid/DruidAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception; nested exception is java.lang.RuntimeException: java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:588) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:761) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867) ~[spring-context-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543) ~[spring-context-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122) ~[spring-boot-1.5.10.RELEASE.jar:1.5.10.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693) [spring-boot-1.5.10.RELEASE.jar:1.5.10.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360) [spring-boot-1.5.10.RELEASE.jar:1.5.10.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303) [spring-boot-1.5.10.RELEASE.jar:1.5.10.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118) [spring-boot-1.5.10.RELEASE.jar:1.5.10.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107) [spring-boot-1.5.10.RELEASE.jar:1.5.10.RELEASE]
	at net.cyweb.klinemongodb.main(klinemongodb.java:41) [classes/:?]
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'yangTradeService': Unsatisfied dependency expressed through field 'mapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'yangTradeMapper' defined in file [D:\center_new\order-services\klinemongodb\target\classes\net\cyweb\mapper\YangTradeMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [net/cyweb/config/druid/DruidAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception; nested exception is java.lang.RuntimeException: java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:588) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	... 19 more
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'yangTradeMapper' defined in file [D:\center_new\order-services\klinemongodb\target\classes\net\cyweb\mapper\YangTradeMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [net/cyweb/config/druid/DruidAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception; nested exception is java.lang.RuntimeException: java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1357) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1249) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	... 19 more
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [net/cyweb/config/druid/DruidAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception; nested exception is java.lang.RuntimeException: java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:749) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:467) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1342) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1249) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:12019/10/04 14:25:19,626 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 14:25:19,626 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2019/10/04 14:25:19,627 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 14:25:19,627 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2019/10/04 14:25:19,627 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 14:25:19,628 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2019/10/04 14:25:19,628 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:25:19,628 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2019/10/04 14:25:19,629 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2019/10/04 14:25:19,629 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 14:25:19,629 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 14:25:19,629 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2019/10/04 14:25:19,630 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 14:25:19,630 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2019/10/04 14:25:19,631 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 14:25:19,631 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 14:25:19,631 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2019/10/04 14:25:19,631 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2019/10/04 14:25:19,632 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2019/10/04 14:25:19,632 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 14:25:19,632 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 14:25:19,633 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2019/10/04 14:25:19,633 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:25:19,633 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 14:25:19,634 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2019/10/04 14:25:19,634 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2019/10/04 14:25:19,634 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 14:25:20,042 INFO   main                  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize(ExecutorConfigurationSupport.java:165) - Initializing ExecutorService  'clientInboundChannelExecutor'
2019/10/04 14:25:20,048 INFO   main                  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize(ExecutorConfigurationSupport.java:165) - Initializing ExecutorService  'clientOutboundChannelExecutor'
2019/10/04 14:25:20,059 INFO   main                  org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler.initialize(ExecutorConfigurationSupport.java:165) - Initializing ExecutorService  'messageBrokerTaskScheduler'
2019/10/04 14:25:20,087 INFO   main                  org.springframework.web.socket.server.support.WebSocketHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/endpointWisely/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019/10/04 14:25:20,096 INFO   main                  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize(ExecutorConfigurationSupport.java:165) - Initializing ExecutorService  'brokerChannelExecutor'
2019/10/04 14:25:20,277 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@df5f5c0: startup date [Fri Oct 04 14:25:10 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3932c79a
2019/10/04 14:25:20,325 INFO   main                  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019/10/04 14:25:20,326 INFO   main                  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019/10/04 14:25:20,379 INFO   main                  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019/10/04 14:25:21,707 INFO   main                  org.springframework.boot.autoconfigure.security.AuthenticationManagerConfiguration.configure(AuthenticationManagerConfiguration.java:173) - 

Using default security password: 1de08f1a-e048-4683-92f5-1fd95817e3ed

2019/10/04 14:25:21,750 INFO   main                  org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43) - Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
2019/10/04 14:25:21,837 INFO   main                  org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43) - Creating filter chain: org.springframework.boot.actuate.autoconfigure.ManagementWebSecurityAutoConfiguration$LazyEndpointPathRequestMatcher@6f12fca0, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@12c30824, org.springframework.security.web.context.SecurityContextPersistenceFilter@34d26a68, org.springframework.security.web.header.HeaderWriterFilter@1735e1c4, org.springframework.web.filter.CorsFilter@7d0e43d6, org.springframework.security.web.authentication.logout.LogoutFilter@7c31e01f, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@441762b8, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3a574a3b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@20276412, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@df04d12, org.springframework.security.web.session.SessionManagementFilter@7ca8f5d7, org.springframework.security.web.access.ExceptionTranslationFilter@7bdddfa4, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1ccce165]
2019/10/04 14:25:21,846 INFO   main                  org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43) - Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@41092c8, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2e590e36, org.springframework.security.web.context.SecurityContextPersistenceFilter@7d12fb85, org.springframework.security.web.header.HeaderWriterFilter@12948e7a, org.springframework.security.web.csrf.CsrfFilter@4c89c98a, org.springframework.security.web.authentication.logout.LogoutFilter@6e349258, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@71db6703, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@470ad01c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3fc2a1d1, org.springframework.security.web.session.SessionManagementFilter@497c1d78, org.springframework.security.web.access.ExceptionTranslationFilter@3af6c672]
2019/10/04 14:25:22,375 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.afterSingletonsInstantiated(MBeanExporter.java:431) - Registering beans for JMX exposure on startup
2019/10/04 14:25:22,377 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'dataSource' has been autodetected for JMX exposure
2019/10/04 14:25:22,383 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'environmentManager' has been autodetected for JMX exposure
2019/10/04 14:25:22,385 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2019/10/04 14:25:22,386 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2019/10/04 14:25:22,386 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'restartEndpoint' has been autodetected for JMX exposure
2019/10/04 14:25:22,386 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2019/10/04 14:25:22,387 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'refreshScope' has been autodetected for JMX exposure
2019/10/04 14:25:22,389 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2019/10/04 14:25:22,398 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
2019/10/04 14:25:22,405 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2019/10/04 14:25:22,409 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2019/10/04 14:25:22,417 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=df5f5c0,type=ConfigurationPropertiesRebinder]
2019/10/04 14:25:22,420 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:671) - Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019/10/04 14:25:22,421 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2019/10/04 14:25:22,422 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.afterSingletonsInstantiated(MBeanExporter.java:431) - Registering beans for JMX exposure on startup
2019/10/04 14:25:22,655 INFO   main                  org.springframework.context.support.DefaultLifecycleProcessor.start(DefaultLifecycleProcessor.java:343) - Starting beans in phase 0
2019/10/04 14:25:22,664 INFO   main                  org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(InstanceInfoFactory.java:70) - Setting initial instance status as: STARTING
2019/10/04 14:25:22,714 INFO   main                  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:40) - Registering application javaApi with eureka with status UP
2019/10/04 14:25:22,717 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2019/10/04 14:25:22,723 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
2019/10/04 14:25:22,728 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2019/10/04 14:25:22,730 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2019/10/04 14:25:22,732 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2019/10/04 14:25:22,734 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2019/10/04 14:25:22,736 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2019/10/04 14:25:22,737 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2019/10/04 14:25:22,742 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2019/10/04 14:25:22,744 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2019/10/04 14:25:22,746 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2019/10/04 14:25:22,748 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2019/10/04 14:25:22,750 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2019/10/04 14:25:22,752 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
2019/10/04 14:25:22,752 INFO   main                  org.springframework.context.support.DefaultLifecycleProcessor.start(DefaultLifecycleProcessor.java:343) - Starting beans in phase 2147483647
2019/10/04 14:25:22,752 INFO   main                  org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler.start(AbstractBrokerMessageHandler.java:157) - Starting...
2019/10/04 14:25:22,752 INFO   main                  org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler.publishBrokerAvailableEvent(AbstractBrokerMessageHandler.java:260) - BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019/10/04 14:25:22,753 INFO   main                  org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler.start(AbstractBrokerMessageHandler.java:166) - Started.
2019/10/04 14:25:22,767 INFO   main                  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.onApplicationEvent(DocumentationPluginsBootstrapper.java:84) - Context refreshed
2019/10/04 14:25:22,786 INFO   main                  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.onApplicationEvent(DocumentationPluginsBootstrapper.java:87) - Found 1 custom documentation plugin(s)
2019/10/04 14:25:22,796 INFO   main                  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:44) - Scanning for api listing references
2019/10/04 14:25:22,914 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:22,915 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:22,918 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:22,918 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:22,918 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:22,919 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:22,919 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:22,919 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,361 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,361 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,361 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,361 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,363 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,363 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,363 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,363 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,364 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,365 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,365 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,365 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,366 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,366 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,366 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,368 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,368 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,369 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,370 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,370 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,370 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,371 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,371 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,371 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,371 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,372 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,372 INFO   main                  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40) - Generating unique operation named: getArticleListUsingPOST_1
2019/10/04 14:25:23,374 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,375 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,375 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,375 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,375 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,377 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,377 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,377 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,378 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,378 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,378 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,378 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,379 INFO   main                  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40) - Generating unique operation named: getCurrencyListChangeUsingPOST_1
2019/10/04 14:25:23,380 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,380 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,381 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,381 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,382 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,383 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,383 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,384 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,384 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,385 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,385 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,385 INFO   main                  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40) - Generating unique operation named: getFlashUsingPOST_1
2019/10/04 14:25:23,386 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,386 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,387 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,387 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,388 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,388 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,388 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,388 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,389 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,389 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,390 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,391 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,391 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,392 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,392 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,392 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,392 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,393 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,393 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,394 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,394 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,395 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,395 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,396 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,396 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,397 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,397 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,397 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,398 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,398 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,398 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,399 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,399 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,400 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,400 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,401 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,402 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,402 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,402 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,403 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,403 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,404 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,404 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,405 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,405 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,406 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,406 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,407 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,407 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,408 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,408 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,409 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,409 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,410 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,410 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,410 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,410 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,411 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,411 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,411 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,412 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,412 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,412 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,413 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,413 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,413 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,414 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,414 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,414 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,415 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,415 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,415 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,416 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,416 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,416 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,417 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,418 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,418 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,419 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,420 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,420 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,421 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,422 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,423 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,423 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,423 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,423 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,423 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,423 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,424 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,424 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,435 INFO   main                  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40) - Generating unique operation named: findBanksInfoByUserUsingPOST_1
2019/10/04 14:25:23,442 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,442 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,442 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,443 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,443 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,443 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,443 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,443 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,444 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,444 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,444 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,445 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,445 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,445 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,445 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,447 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,447 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,447 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,447 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,447 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,447 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,448 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,448 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,448 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,448 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,448 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,448 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,448 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,448 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,448 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,448 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,448 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,448 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,448 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,449 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,449 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,449 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,449 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,449 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,450 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,450 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,450 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,451 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,451 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,451 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,452 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,452 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,452 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,453 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,454 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,454 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,455 INFO   main                  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40) - Generating unique operation named: getGoogleUsingPOST_1
2019/10/04 14:25:23,455 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,455 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,455 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,455 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,456 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,456 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,457 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,457 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,458 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,458 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,458 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,458 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,458 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,459 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,459 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,459 INFO   main                  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40) - Generating unique operation named: googleCancleUsingPOST_1
2019/10/04 14:25:23,460 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,460 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,460 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,460 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,460 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,460 INFO   main                  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40) - Generating unique operation named: googleUpdateUsingPOST_1
2019/10/04 14:25:23,461 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,461 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,461 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,461 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,462 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,462 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,462 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,462 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,462 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,462 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,463 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,463 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,463 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,463 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,463 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,464 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,464 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,464 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,464 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,464 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,465 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,465 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,465 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,465 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,465 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,466 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,466 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,466 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,466 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,467 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,467 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,467 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,467 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,468 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,468 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,468 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,468 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,468 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,468 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,469 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,470 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,470 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,470 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,470 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,470 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,470 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,470 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,470 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,474 INFO   main                  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40) - Generating unique operation named: cancelOrderUsingPOST_1
2019/10/04 14:25:23,476 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,479 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,479 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,484 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,484 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,484 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,484 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,484 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,485 INFO   main                  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40) - Generating unique operation named: klineDataUsingPOST_1
2019/10/04 14:25:23,486 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,486 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,486 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,486 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,486 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,487 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,487 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,487 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,487 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,488 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,489 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:25:23,532 INFO   main                  org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.start(TomcatEmbeddedServletContainer.java:201) - Tomcat started on port(s): 8009 (http)
2019/10/04 14:25:23,533 INFO   main                  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:117) - Updating port to 8009
2019/10/04 14:25:23,537 INFO   main                  net.cyweb.javaapi.logStarted(StartupInfoLogger.java:57) - Started javaapi in 15.004 seconds (JVM running for 16.005)
2019/10/04 14:26:20,095 INFO   MessageBroker-2       org.springframework.web.socket.config.WebSocketMessageBrokerStats.run(WebSocketMessageBrokerStats.java:113) - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 6, active threads = 2, queued tasks = 2, completed tasks = 5]
2019/10/04 14:26:27,261 INFO   http-nio-8009-exec-1  org.springframework.web.servlet.DispatcherServlet.initServletBean(FrameworkServlet.java:489) - FrameworkServlet 'dispatcherServlet': initialization started
2019/10/04 14:26:27,284 INFO   http-nio-8009-exec-1  org.springframework.web.servlet.DispatcherServlet.initServletBean(FrameworkServlet.java:508) - FrameworkServlet 'dispatcherServlet': initialization completed in 23 ms
 ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2188) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2219) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2014) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:776) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:1.8.0_25]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:1.8.0_25]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:1.8.0_25]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:408) ~[?:1.8.0_25]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1408) ~[druid-1.0.18.jar:1.0.18]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1464) ~[druid-1.0.18.jar:1.0.18]
	at com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:683) [druid-1.0.18.jar:1.0.18]
	at net.cyweb.config.druid.DruidAutoConfiguration.dataSource(DruidAutoConfiguration.java:46) [classes/:?]
	at net.cyweb.config.druid.DruidAutoConfiguration$$EnhancerBySpringCGLIB$$47a36a64.CGLIB$dataSource$0(<generated>) [classes/:?]
	at net.cyweb.config.druid.DruidAutoConfiguration$$EnhancerBySpringCGLIB$$47a36a64$$FastClassBySpringCGLIB$$574c075b.invoke(<generated>) [classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228) [spring-core-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:358) [spring-context-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at net.cyweb.config.druid.DruidAutoConfiguration$$EnhancerBySpringCGLIB$$47a36a64.dataSource(<generated>) [classes/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_25]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_25]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_25]
	at java.lang.reflect.Method.invoke(Method.java:483) ~[?:1.8.0_25]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:162) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:467) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1342) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1249) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:761) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867) [spring-context-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543) [spring-context-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122) [spring-boot-1.5.10.RELEASE.jar:1.5.10.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693) [spring-boot-1.5.10.RELEASE.jar:1.5.10.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360) [spring-boot-1.5.10.RELEASE.jar:1.5.10.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303) [spring-boot-1.5.10.RELEASE.jar:1.5.10.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118) [spring-boot-1.5.10.RELEASE.jar:1.5.10.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107) [spring-boot-1.5.10.RELEASE.jar:1.5.10.RELEASE]
	at net.cyweb.klinemongodb.main(klinemongodb.java:41) [classes/:?]
2019/10/04 14:25:48,356 ERROR  main                  com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:712) - {dataSource-1} init error
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3973) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:873) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1710) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1226) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2188) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2219) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2014) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:776) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:1.8.0_25]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:1.8.0_25]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:1.8.0_25]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:408) ~[?:1.8.0_25]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1408) ~[druid-1.0.18.jar:1.0.18]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1464) ~[druid-1.0.18.jar:1.0.18]
	at com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:683) [druid-1.0.18.jar:1.0.18]
	at net.cyweb.config.druid.DruidAutoConfiguration.dataSource(DruidAutoConfiguration.java:46) [classes/:?]
	at net.cyweb.config.druid.DruidAutoConfiguration$$EnhancerBySpringCGLIB$$47a36a64.CGLIB$dataSource$0(<generated>) [classes/:?]
	at net.cyweb.config.druid.DruidAutoConfiguration$$EnhancerBySpringCGLIB$$47a36a64$$FastClassBySpringCGLIB$$574c075b.invoke(<generated>) [classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228) [spring-core-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:358) [spring-context-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at net.cyweb.config.druid.DruidAutoConfiguration$$EnhancerBySpringCGLIB$$47a36a64.dataSource(<generated>) [classes/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_25]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_25]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_25]
	at java.lang.reflect.Method.invoke(Method.java:483) ~[?:1.8.0_25]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:162) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:467) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1342) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1249) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:761) [spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867) [spring-context-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543) [spring-context-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122) [spring-boot-1.5.10.RELEASE.jar:1.5.10.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693) [spring-boot-1.5.10.RELEASE.jar:1.5.10.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360) [spring-boot-1.5.10.RELEASE.jar:1.5.10.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303) [spring-boot-1.5.10.RELEASE.jar:1.5.10.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118) [spring-boot-1.5.10.RELEASE.jar:1.5.10.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107) [spring-boot-1.5.10.RELEASE.jar:1.5.10.RELEASE]
	at net.cyweb.klinemongodb.main(klinemongodb.java:41) [classes/:?]
2019/10/04 14:25:48,362 ERROR  Druid-ConnectionPool-Create-366513168 com.alibaba.druid.pool.DruidDataSource.run(DruidDataSource.java:1971) - create connection error, url: jdbc:mysql://localhost:3306/funcoin?useUnicode=true&amp;characterEncoding=utf-8, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3973) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:873) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1710) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1226) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2188) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2219) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2014) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:776) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:1.8.0_25]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:1.8.0_25]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:1.8.0_25]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:408) ~[?:1.8.0_25]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1408) ~[druid-1.0.18.jar:1.0.18]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1464) ~[druid-1.0.18.jar:1.0.18]
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:1969) [druid-1.0.18.jar:1.0.18]
2019/10/04 14:25:48,366 ERROR  Druid-ConnectionPool-Create-366513168 com.alibaba.druid.pool.DruidDataSource.run(DruidDataSource.java:1971) - create connection error, url: jdbc:mysql://localhost:3306/funcoin?useUnicode=true&amp;characterEncoding=utf-8, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3973) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:873) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1710) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1226) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2188) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2219) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2014) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:776) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:1.8.0_25]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:1.8.0_25]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:1.8.0_25]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:408) ~[?:1.8.0_25]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1408) ~[druid-1.0.18.jar:1.0.18]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1464) ~[druid-1.0.18.jar:1.0.18]
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:1969) [druid-1.0.18.jar:1.0.18]
2019/10/04 14:25:48,370 ERROR  Druid-ConnectionPool-Create-366513168 com.alibaba.druid.pool.DruidDataSource.run(DruidDataSource.java:1971) - create connection error, url: jdbc:mysql://localhost:3306/funcoin?useUnicode=true&amp;characterEncoding=utf-8, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3973) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:873) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1710) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1226) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2188) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2219) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2014) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:776) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:1.8.0_25]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:1.8.0_25]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:1.8.0_25]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:408) ~[?:1.8.0_25]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1408) ~[druid-1.0.18.jar:1.0.18]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1464) ~[druid-1.0.18.jar:1.0.18]
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:1969) [druid-1.0.18.jar:1.0.18]
2019/10/04 14:25:48,374 ERROR  Druid-ConnectionPool-Create-366513168 com.alibaba.druid.pool.DruidDataSource.run(DruidDataSource.java:1971) - create connection error, url: jdbc:mysql://localhost:3306/funcoin?useUnicode=true&amp;characterEncoding=utf-8, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3973) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:873) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1710) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1226) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2188) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2219) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2014) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:776) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:1.8.0_25]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:1.8.0_25]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:1.8.0_25]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:408) ~[?:1.8.0_25]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1408) ~[druid-1.0.18.jar:1.0.18]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1464) ~[druid-1.0.18.jar:1.0.18]
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:1969) [druid-1.0.18.jar:1.0.18]
2019/10/04 14:25:48,377 ERROR  Druid-ConnectionPool-Create-366513168 com.alibaba.druid.pool.DruidDataSource.run(DruidDataSource.java:1971) - create connection error, url: jdbc:mysql://localhost:3306/funcoin?useUnicode=true&amp;characterEncoding=utf-8, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3973) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:873) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1710) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1226) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2188) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2219) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2014) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:776) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:1.8.0_25]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:1.8.0_25]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:1.8.0_25]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:408) ~[?:1.8.0_25]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1408) ~[druid-1.0.18.jar:1.0.18]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1464) ~[druid-1.0.18.jar:1.0.18]
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:1969) [druid-1.0.18.jar:1.0.18]
2019/10/04 14:25:48,380 ERROR  Druid-ConnectionPool-Create-366513168 com.alibaba.druid.pool.DruidDataSource.run(DruidDataSource.java:1971) - create connection error, url: jdbc:mysql://localhost:3306/funcoin?useUnicode=true&amp;characterEncoding=utf-8, errorCode 1045, state 28000
java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3973) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:873) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1710) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1226) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2188) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2219) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2014) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:776) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:1.8.0_25]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:1.8.0_25]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:1.8.0_25]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:408) ~[?:1.8.0_25]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1408) ~[druid-1.0.18.jar:1.0.18]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1464) ~[druid-1.0.18.jar:1.0.18]
	at com.alibaba.druid.pool.DruidDataSource$CreateConnectionThread.run(DruidDataSource.java:1969) [druid-1.0.18.jar:1.0.18]
2019/10/04 14:25:48,377 ERROR  main                  org.springframework.boot.SpringApplication.reportFailure(SpringApplication.java:771) - Application startup failed
org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'klineMongodbRunner': Unsatisfied dependency expressed through field 'yangTradeService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'yangTradeService': Unsatisfied dependency expressed through field 'mapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'yangTradeMapper' defined in file [D:\center_new\order-services\klinemongodb\target\classes\net\cyweb\mapper\YangTradeMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [net/cyweb/config/druid/DruidAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception; nested exception is java.lang.RuntimeException: java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:588) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:761) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:867) ~[spring-context-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:543) ~[spring-context-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.boot.context.embedded.EmbeddedWebApplicationContext.refresh(EmbeddedWebApplicationContext.java:122) ~[spring-boot-1.5.10.RELEASE.jar:1.5.10.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:693) [spring-boot-1.5.10.RELEASE.jar:1.5.10.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:360) [spring-boot-1.5.10.RELEASE.jar:1.5.10.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303) [spring-boot-1.5.10.RELEASE.jar:1.5.10.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1118) [spring-boot-1.5.10.RELEASE.jar:1.5.10.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1107) [spring-boot-1.5.10.RELEASE.jar:1.5.10.RELEASE]
	at net.cyweb.klinemongodb.main(klinemongodb.java:41) [classes/:?]
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'yangTradeService': Unsatisfied dependency expressed through field 'mapper'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'yangTradeMapper' defined in file [D:\center_new\order-services\klinemongodb\target\classes\net\cyweb\mapper\YangTradeMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [net/cyweb/config/druid/DruidAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception; nested exception is java.lang.RuntimeException: java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:588) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	... 19 more
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'yangTradeMapper' defined in file [D:\center_new\order-services\klinemongodb\target\classes\net\cyweb\mapper\YangTradeMapper.class]: Unsatisfied dependency expressed through bean property 'sqlSessionFactory'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [net/cyweb/config/druid/DruidAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception; nested exception is java.lang.RuntimeException: java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1357) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1249) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	... 19 more
Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Unsatisfied dependency expressed through method 'sqlSessionFactory' parameter 0; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [net/cyweb/config/druid/DruidAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception; nested exception is java.lang.RuntimeException: java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:749) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:467) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1342) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1249) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	... 19 more
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dataSource' defined in class path resource [net/cyweb/config/druid/DruidAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception; nested exception is java.lang.RuntimeException: java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:599) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:467) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1342) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1249) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	... 19 more
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [javax.sql.DataSource]: Factory method 'dataSource' threw exception; nested exception is java.lang.RuntimeException: java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:189) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:467) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1342) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1249) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	... 19 more
Caused by: java.lang.RuntimeException: java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at net.cyweb.config.druid.DruidAutoConfiguration.dataSource(DruidAutoConfiguration.java:48) ~[classes/:?]
	at net.cyweb.config.druid.DruidAutoConfiguration$$EnhancerBySpringCGLIB$$47a36a64.CGLIB$dataSource$0(<generated>) ~[classes/:?]
	at net.cyweb.config.druid.DruidAutoConfiguration$$EnhancerBySpringCGLIB$$47a36a64$$FastClassBySpringCGLIB$$574c075b.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228) ~[spring-core-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:358) ~[spring-context-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at net.cyweb.config.druid.DruidAutoConfiguration$$EnhancerBySpringCGLIB$$47a36a64.dataSource(<generated>) ~[classes/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_25]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_25]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_25]
	at java.lang.reflect.Method.invoke(Method.java:483) ~[?:1.8.0_25]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:162) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:467) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1342) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1249) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	... 19 more
Caused by: java.sql.SQLException: Access denied for user 'root'@'localhost' (using password: YES)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3973) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:873) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.MysqlIO.proceedHandshakeWithPluggableAuthentication(MysqlIO.java:1710) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.MysqlIO.doHandshake(MysqlIO.java:1226) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.ConnectionImpl.coreConnect(ConnectionImpl.java:2188) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.ConnectionImpl.connectOneTryOnly(ConnectionImpl.java:2219) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.ConnectionImpl.createNewIO(ConnectionImpl.java:2014) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.ConnectionImpl.<init>(ConnectionImpl.java:776) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.JDBC4Connection.<init>(JDBC4Connection.java:47) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:1.8.0_25]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:1.8.0_25]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:1.8.0_25]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:408) ~[?:1.8.0_25]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.ConnectionImpl.getInstance(ConnectionImpl.java:386) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.NonRegisteringDriver.connect(NonRegisteringDriver.java:330) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1408) ~[druid-1.0.18.jar:1.0.18]
	at com.alibaba.druid.pool.DruidAbstractDataSource.createPhysicalConnection(DruidAbstractDataSource.java:1464) ~[druid-1.0.18.jar:1.0.18]
	at com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:683) ~[druid-1.0.18.jar:1.0.18]
	at net.cyweb.config.druid.DruidAutoConfiguration.dataSource(DruidAutoConfiguration.java:46) ~[classes/:?]
	at net.cyweb.config.druid.DruidAutoConfiguration$$EnhancerBySpringCGLIB$$47a36a64.CGLIB$dataSource$0(<generated>) ~[classes/:?]
	at net.cyweb.config.druid.DruidAutoConfiguration$$EnhancerBySpringCGLIB$$47a36a64$$FastClassBySpringCGLIB$$574c075b.invoke(<generated>) ~[classes/:?]
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228) ~[spring-core-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:358) ~[spring-context-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at net.cyweb.config.druid.DruidAutoConfiguration$$EnhancerBySpringCGLIB$$47a36a64.dataSource(<generated>) ~[classes/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_25]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_25]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_25]
	at java.lang.reflect.Method.invoke(Method.java:483) ~[?:1.8.0_25]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:162) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:588) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:467) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1173) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1067) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:513) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireByType(AbstractAutowireCapableBeanFactory.java:1342) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1249) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:366) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1264) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:483) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:208) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1138) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1066) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:585) ~[spring-beans-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	... 19 more
2019/10/04 14:26:08,189 INFO   main                  net.cyweb.klinemongodb.logStartupProfileInfo(SpringApplication.java:597) - The following profiles are active: dev
2019/10/04 14:26:13,673 INFO   main                  net.cyweb.klinemongodb.logStarted(StartupInfoLogger.java:57) - Started klinemongodb in 6.416 seconds (JVM running for 7.146)
2019/10/04 14:26:25,791 DEBUG  Thread-20             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 14:26:25,802 DEBUG  Thread-20             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 14:26:28,798 DEBUG  Thread-20             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 14:27:04,913 DEBUG  Thread-20             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 14:27:04,913 DEBUG  Thread-20             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 14:27:07,122 DEBUG  Thread-20             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 14:27:44,210 DEBUG  Thread-20             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 14:27:44,210 DEBUG  Thread-20             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 14:27:46,486 DEBUG  Thread-20             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 14:28:21,062 DEBUG  Thread-20             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 14:28:21,062 DEBUG  Thread-20             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 14:28:23,201 DEBUG  Thread-20             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 14:28:57,200 DEBUG  Thread-20             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 14:28:57,201 DEBUG  Thread-20             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 14:28:59,339 DEBUG  Thread-20             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 14:29:33,672 DEBUG  Thread-20             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 14:29:33,673 DEBUG  Thread-20             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 14:29:35,904 DEBUG  Thread-20             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 14:30:10,878 DEBUG  Thread-20             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 14:30:10,879 DEBUG  Thread-20             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 14:30:13,006 DEBUG  Thread-20             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 14:30:22,616 INFO   main                  net.cyweb.klinemongodb.logStartupProfileInfo(SpringApplication.java:597) - The following profiles are active: dev
2019/10/04 14:30:29,968 INFO   main                  net.cyweb.klinemongodb.logStarted(StartupInfoLogger.java:57) - Started klinemongodb in 8.481 seconds (JVM running for 10.073)
2019/10/04 14:30:42,281 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 14:30:42,292 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 14:30:44,676 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 14:31:49,536 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 14:31:49,537 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 14:31:51,802 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 14:32:55,205 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 14:32:55,206 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 14:32:58,094 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 14:34:04,512 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 14:34:04,512 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 14:34:06,615 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 14:35:00,330 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 14:35:00,330 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 14:35:02,573 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 14:35:58,505 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 14:35:58,505 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 14:36:01,798 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 14:37:03,123 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 14:37:03,124 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 14:37:05,393 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 14:37:55,860 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 14:37:55,861 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 14:37:58,356 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 14:38:50,612 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 14:38:50,612 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 14:38:52,784 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 14:39:45,623 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 14:39:45,624 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 14:39:47,816 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 14:40:37,715 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 14:40:37,716 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 14:40:40,022 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 14:41:30,991 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 14:41:30,991 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 14:41:33,230 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 14:42:25,355 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 14:42:25,356 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 14:42:27,535 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 14:43:19,782 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 14:43:19,782 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 14:43:21,967 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 14:44:12,991 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 14:44:12,992 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 14:44:15,144 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 14:45:05,826 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 14:45:05,827 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 14:45:10,756 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 14:46:03,518 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 14:46:03,519 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 14:46:05,864 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 14:46:56,170 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 14:46:56,171 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 14:46:58,350 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 14:47:50,493 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 14:47:50,493 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 14:47:52,814 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 14:48:42,889 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 14:48:42,890 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 14:48:45,141 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 14:49:34,851 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 14:49:34,852 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 14:49:37,103 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 14:50:28,110 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 14:50:28,111 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 14:50:30,286 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 14:51:21,703 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 14:51:21,704 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 14:51:23,803 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 14:52:15,824 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 14:52:15,825 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 14:52:18,001 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 14:53:09,927 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 14:53:09,927 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 14:53:12,264 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 14:54:03,248 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 14:54:03,248 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 14:54:05,393 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 14:54:56,573 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 14:54:56,574 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 14:54:58,715 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 14:55:49,537 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 14:55:49,538 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 14:55:51,627 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 14:56:41,359 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 14:56:41,359 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 14:56:43,465 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 14:57:34,008 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 14:57:34,008 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 14:57:36,267 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 14:58:26,324 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 14:58:26,324 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 14:58:28,431 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 14:59:18,935 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 14:59:18,936 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 14:59:21,164 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 15:00:12,417 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 15:00:12,417 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 15:00:14,557 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 15:01:05,380 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 15:01:05,380 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 15:01:07,471 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 15:01:57,710 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 15:01:57,710 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 15:01:59,847 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 15:02:50,607 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 15:02:50,608 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 15:02:52,810 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 15:03:45,461 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 15:03:45,461 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 15:03:48,199 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 15:04:41,761 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 15:04:41,762 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 15:04:44,020 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 15:05:36,712 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 15:05:36,713 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 15:05:38,998 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 15:06:28,464 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 15:06:28,465 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 15:06:30,552 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 15:07:20,641 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 15:07:20,642 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 15:07:22,723 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 15:08:13,205 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 15:08:13,214 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 15:08:15,395 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 15:09:05,431 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 15:09:05,432 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 15:09:07,516 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 15:09:57,481 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 15:09:57,481 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 15:09:59,686 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 15:10:49,936 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 15:10:49,936 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 15:10:52,034 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 15:11:42,864 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 15:11:42,864 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 15:11:45,133 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 15:12:35,395 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 15:12:35,396 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 15:12:37,594 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 15:13:28,712 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 15:13:28,712 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 15:13:30,883 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 15:14:22,906 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 15:14:22,906 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 15:14:24,986 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 15:15:16,586 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 15:15:16,591 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 15:15:18,687 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 15:16:09,746 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 15:16:09,747 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 15:16:11,912 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 15:17:01,797 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 15:17:01,797 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 15:17:04,117 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 15:17:54,954 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 15:17:54,954 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 15:17:57,085 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 15:18:50,944 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 15:18:50,945 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 15:18:53,066 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 15:19:45,057 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 15:19:45,057 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 15:19:47,208 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 15:20:39,114 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 15:20:39,114 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 15:20:41,258 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 15:21:36,954 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 15:21:36,954 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 15:21:39,160 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 15:22:31,645 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 15:22:31,646 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 15:22:33,757 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 15:23:25,819 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 15:23:25,819 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 15:23:28,092 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 15:24:19,496 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 15:24:19,497 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 15:24:21,595 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 15:25:13,100 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 15:25:13,100 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 15:25:15,191 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 15:26:04,788 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 15:26:04,788 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 15:26:06,951 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 15:27:04,800 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 15:27:04,800 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 15:27:07,310 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 15:28:09,085 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 15:28:09,087 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 15:28:11,494 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 15:29:13,219 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 15:29:13,220 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 15:29:15,654 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 15:30:12,316 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 15:30:12,317 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 15:30:14,551 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 15:31:05,309 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 15:31:05,309 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 15:31:07,552 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 15:31:57,205 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 15:31:57,206 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 15:31:59,428 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 15:32:53,174 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 15:32:53,174 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 15:32:55,855 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 15:33:50,351 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 15:33:50,351 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 15:33:52,492 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 15:34:44,411 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 15:34:44,411 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 15:34:46,848 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 15:35:41,419 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 15:35:41,419 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 15:35:43,566 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 15:36:33,603 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 15:36:33,604 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 15:36:35,753 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 15:37:27,150 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 15:37:27,150 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 15:37:30,531 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 15:38:19,662 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 15:38:19,663 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 15:38:21,802 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 15:39:11,905 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 15:39:11,905 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 15:39:14,031 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 15:40:04,023 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 15:40:04,024 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 15:40:06,163 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 15:40:56,129 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 15:40:56,129 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 15:40:58,292 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 15:41:48,424 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 15:41:48,424 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 15:41:50,496 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 15:42:40,919 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 15:42:40,919 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 15:42:43,034 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 15:43:33,305 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 15:43:33,306 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 15:43:35,459 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 15:44:26,111 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 15:44:26,111 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 15:44:28,234 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 15:45:18,233 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 15:45:18,234 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 15:45:20,580 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 15:46:10,242 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 15:46:10,243 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 15:46:12,480 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 15:47:01,956 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 15:47:01,957 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 15:47:04,127 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 15:47:54,291 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 15:47:54,291 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 15:47:56,625 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 15:48:48,427 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 15:48:48,427 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 15:48:50,845 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 15:49:40,789 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 15:49:40,789 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 15:49:43,124 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 15:50:33,035 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 15:50:33,035 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 15:50:35,154 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 15:51:26,268 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 15:51:26,268 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 15:51:28,526 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 15:52:20,267 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 15:52:20,268 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 15:52:22,381 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 15:53:17,108 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 15:53:17,108 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 15:53:19,238 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 15:54:12,733 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 15:54:12,734 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 15:54:14,993 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 15:55:09,385 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 15:55:09,385 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 15:55:11,555 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 15:56:06,003 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 15:56:06,003 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 15:56:08,767 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 15:57:06,207 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 15:57:06,207 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 15:57:08,381 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 15:58:05,388 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 15:58:05,388 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 15:58:07,861 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 15:59:02,869 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 15:59:02,869 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 15:59:05,030 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 15:59:59,082 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 15:59:59,083 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 16:00:01,163 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 16:00:53,825 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 16:00:53,826 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 16:00:55,937 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 16:01:48,278 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 16:01:48,278 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 16:01:50,479 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 16:02:41,349 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 16:02:41,349 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 16:02:43,418 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 16:03:33,542 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 16:03:33,543 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 16:03:35,586 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 16:04:26,413 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 16:04:26,434 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 16:04:28,739 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 16:05:20,346 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 16:05:20,347 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 16:05:22,467 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 16:06:11,888 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 16:06:11,888 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 16:06:15,127 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 16:07:05,929 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 16:07:05,930 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 16:07:08,076 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 16:07:58,517 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 16:07:58,517 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 16:08:00,586 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 16:08:50,314 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 16:08:50,315 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 16:08:52,375 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 16:09:43,452 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 16:09:43,452 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 16:09:45,555 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 16:10:35,706 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 16:10:35,706 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 16:10:37,998 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 16:11:28,590 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 16:11:28,591 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 16:11:30,743 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 16:12:21,441 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 16:12:21,441 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 16:12:23,757 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 16:13:14,339 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 16:13:14,339 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 16:13:16,417 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 16:14:07,306 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 16:14:07,306 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 16:14:09,426 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 16:14:59,836 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 16:14:59,837 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 16:15:01,924 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 16:15:51,385 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 16:15:51,385 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 16:15:53,926 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 16:16:44,608 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 16:16:44,609 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 16:16:46,733 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 16:17:37,732 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 16:17:37,732 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 16:17:39,865 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 16:18:30,011 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 16:18:30,011 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 16:18:32,102 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 16:19:23,005 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 16:19:23,005 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 16:19:26,094 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 16:20:18,772 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 16:20:18,773 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 16:20:20,918 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 16:21:13,826 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 16:21:13,827 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 16:21:20,477 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 16:22:13,533 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 16:22:13,533 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 16:22:15,634 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 16:23:09,138 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 16:23:09,139 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 16:23:11,218 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 16:24:02,684 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 16:24:02,684 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 16:24:04,871 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 16:24:55,558 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 16:24:55,558 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 16:24:57,822 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 16:25:48,450 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 16:25:48,451 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 16:25:50,751 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 16:26:41,027 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 16:26:41,027 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 16:26:43,117 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 16:27:33,489 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 16:27:33,489 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 16:27:35,840 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 16:28:25,927 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 16:28:25,927 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 16:28:28,134 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 16:29:21,205 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 16:29:21,205 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 16:29:23,349 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 16:30:15,351 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 16:30:15,351 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 16:30:17,467 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 16:31:08,130 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 16:31:08,130 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 16:31:10,273 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 16:32:01,416 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 16:32:01,437 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 16:32:03,766 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 16:32:54,703 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 16:32:54,703 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 16:32:56,764 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 16:33:48,897 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 16:33:48,898 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 16:33:51,038 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 16:34:42,336 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 16:34:42,336 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 16:34:44,441 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 16:35:34,495 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 16:35:34,495 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 16:35:36,691 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 16:36:26,764 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 16:36:26,764 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 16:36:28,900 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 16:37:19,285 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 16:37:19,285 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 16:37:21,410 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 16:38:12,185 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 16:38:12,185 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 16:38:14,389 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 16:39:05,073 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 16:39:05,080 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 16:39:07,376 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 16:39:58,186 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 16:39:58,186 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 16:40:00,487 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 16:40:51,007 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 16:40:51,007 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 16:40:53,330 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 16:41:44,033 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 16:41:44,033 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 16:41:46,097 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 16:42:37,004 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 16:42:37,004 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 16:42:39,293 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 16:43:30,039 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 16:43:30,039 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 16:43:32,101 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 16:44:22,541 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 16:44:22,541 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 16:44:24,806 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 16:45:14,900 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 16:45:14,900 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 16:45:17,078 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 16:46:08,030 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 16:46:08,030 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 16:46:10,198 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 16:47:00,453 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 16:47:00,453 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 16:47:02,666 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 16:47:52,801 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 16:47:52,801 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 16:47:55,032 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 16:48:45,528 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 16:48:45,528 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 16:48:47,834 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 16:49:38,028 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 16:49:38,028 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 16:49:40,217 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 16:50:30,497 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 16:50:30,497 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 16:50:32,659 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 16:51:25,185 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 16:51:25,185 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 16:51:27,316 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 16:52:20,669 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 16:52:20,669 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 16:52:22,963 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 16:53:15,038 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 16:53:15,038 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 16:53:17,129 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 16:54:12,428 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 16:54:12,428 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 16:54:14,737 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 16:55:11,511 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 16:55:11,511 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 16:55:13,694 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 16:56:09,320 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 16:56:09,320 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 16:56:11,434 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 16:57:02,563 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 16:57:02,563 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 16:57:04,693 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 16:57:58,526 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 16:57:58,527 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 16:58:00,636 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 16:58:54,066 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 16:58:54,066 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 16:58:56,232 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 16:59:48,632 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 16:59:48,655 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 16:59:50,770 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 17:00:43,627 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 17:00:43,628 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 17:00:45,761 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 17:01:38,739 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 17:01:38,739 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 17:01:40,805 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 17:02:33,213 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 17:02:33,213 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 17:02:35,300 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 17:03:28,161 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 17:03:28,161 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 17:03:30,236 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 17:04:23,358 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 17:04:23,358 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 17:04:25,508 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 17:05:15,572 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 17:05:15,572 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 17:05:17,718 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 17:06:09,904 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 17:06:09,904 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 17:06:12,011 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 17:07:04,344 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 17:07:04,365 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 17:07:06,520 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 17:07:58,307 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 17:07:58,309 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 17:08:00,645 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 17:08:51,026 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 17:08:51,027 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 17:08:53,341 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 17:09:43,276 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 17:09:43,277 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 17:09:45,574 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 17:10:36,328 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 17:10:36,329 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 17:10:38,529 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 17:11:27,193 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 17:11:27,194 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 17:11:29,488 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 17:12:18,677 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 17:12:18,677 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 17:12:20,833 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 17:13:09,708 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 17:13:09,710 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 17:13:12,281 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 17:14:01,225 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 17:14:01,226 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 17:14:03,530 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 17:14:52,412 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 17:14:52,413 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 17:14:54,780 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 17:15:43,461 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 17:15:43,462 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 17:15:46,284 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 17:16:34,663 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 17:16:34,663 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 17:16:36,983 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 17:17:26,896 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 17:17:26,897 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 17:17:29,190 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 17:18:18,465 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 17:18:18,466 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 17:18:20,608 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 17:19:09,588 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 17:19:09,589 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 17:19:11,878 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 17:20:00,888 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 17:20:00,889 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 17:20:03,192 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 17:20:52,320 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 17:20:52,321 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 17:20:54,662 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 17:21:44,556 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 17:21:44,556 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 17:21:46,709 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 17:22:36,334 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 17:22:36,335 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 17:22:38,590 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 17:23:28,317 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 17:23:28,317 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 17:23:30,620 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 17:24:19,754 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 17:24:19,755 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 17:24:22,090 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 17:25:11,721 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 17:25:11,722 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 17:25:14,008 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 17:26:03,156 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 17:26:03,156 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 17:26:05,714 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 17:26:55,213 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 17:26:55,225 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 17:26:57,511 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 17:27:46,887 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 17:27:46,887 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 17:27:50,267 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 17:28:40,085 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 17:28:40,085 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 17:28:42,365 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 17:29:32,117 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 17:29:32,117 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 17:29:34,207 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 17:30:23,244 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 17:30:23,244 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 17:30:25,527 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 17:31:15,254 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 17:31:15,255 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 17:31:17,562 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 17:32:07,243 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 17:32:07,243 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 17:32:09,536 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 17:33:00,304 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 17:33:00,304 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 17:33:03,900 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 17:33:52,760 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 17:33:52,778 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 17:33:55,079 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 17:34:44,545 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 17:34:44,546 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 17:34:46,839 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 17:35:36,274 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 17:35:36,275 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 17:35:38,609 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 17:36:29,173 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 17:36:29,174 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 17:36:31,397 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 17:37:21,034 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 17:37:21,035 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 17:37:23,383 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 17:38:13,564 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 17:38:13,565 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 17:38:15,882 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 17:39:05,553 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 17:39:05,554 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 17:39:08,554 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 17:39:57,808 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 17:39:57,808 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 17:40:00,134 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 17:40:48,666 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 17:40:48,666 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 17:40:50,987 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 17:41:41,318 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 17:41:41,319 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 17:41:43,637 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 17:42:33,225 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 17:42:33,226 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 17:42:35,471 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 17:43:24,298 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 17:43:24,299 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 17:43:26,614 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 17:44:15,067 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 17:44:15,068 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 17:44:17,209 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 17:45:05,771 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 17:45:05,771 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 17:45:08,093 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 17:45:57,185 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 17:45:57,186 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 17:45:59,521 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 17:46:49,015 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 17:46:49,015 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 17:46:51,441 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 17:47:39,657 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 17:47:39,657 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 17:47:42,018 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 17:48:32,346 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 17:48:32,347 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 17:48:34,625 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 17:49:24,388 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 17:49:24,389 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 17:49:26,732 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 17:50:16,617 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 17:50:16,618 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 17:50:18,923 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 17:51:08,819 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 17:51:08,820 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 17:51:11,116 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 17:51:59,897 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 17:51:59,897 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 17:52:02,223 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 17:52:51,552 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 17:52:51,553 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 17:52:53,841 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 17:53:42,876 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 17:53:42,877 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 17:53:45,226 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 17:54:34,081 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 17:54:34,082 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 17:54:36,810 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 17:55:26,272 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 17:55:26,272 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 17:55:28,574 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 17:56:18,163 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 17:56:18,163 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 17:56:20,447 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 17:57:09,433 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 17:57:09,434 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 17:57:11,752 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 17:58:00,791 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 17:58:00,791 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 17:58:03,080 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 17:58:52,320 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 17:58:52,321 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 17:58:54,593 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 17:59:43,797 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 17:59:43,797 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 17:59:46,071 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 18:00:35,130 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 18:00:35,157 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 18:00:37,461 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 18:01:26,327 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 18:01:26,327 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 18:01:28,772 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 18:02:17,101 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 18:02:17,102 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 18:02:19,146 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 18:03:07,173 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 18:03:07,173 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 18:03:09,451 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 18:03:57,144 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 18:03:57,144 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 18:03:59,463 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 18:04:48,405 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 18:04:48,405 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 18:04:50,767 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 18:05:39,828 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 18:05:39,829 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 18:05:43,029 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 18:06:31,301 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 18:06:31,303 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 18:06:33,785 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 18:07:22,953 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 18:07:22,953 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 18:07:25,235 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 18:08:15,062 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 18:08:15,062 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 18:08:17,331 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 18:09:06,407 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 18:09:06,408 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 18:09:08,681 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 18:09:58,029 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 18:09:58,030 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 18:10:00,316 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 18:10:48,665 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 18:10:48,666 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 18:10:50,947 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 18:11:39,803 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 18:11:39,803 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 18:11:42,207 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 18:12:31,073 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 18:12:31,074 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 18:12:33,359 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 18:13:22,680 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 18:13:22,680 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 18:13:24,947 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 18:14:13,561 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 18:14:13,562 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 18:14:15,827 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 18:15:04,416 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 18:15:04,416 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 18:15:06,700 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 18:15:56,367 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 18:15:56,368 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 18:15:58,652 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 18:16:48,040 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 18:16:48,040 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 18:16:50,382 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 18:17:39,648 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 18:17:39,648 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 18:17:41,929 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 18:18:30,985 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 18:18:30,986 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 18:18:33,264 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 18:19:23,735 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 18:19:23,736 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 18:19:26,003 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 18:20:15,849 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 18:20:15,849 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 18:20:18,121 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 18:21:06,929 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 18:21:06,929 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 18:21:09,210 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 18:21:58,463 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 18:21:58,464 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 18:22:00,728 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 18:22:50,094 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 18:22:50,095 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 18:22:52,377 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 18:23:41,727 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 18:23:41,728 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 18:23:44,015 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 18:24:32,634 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 18:24:32,635 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 18:24:34,913 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 18:25:24,402 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 18:25:24,403 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 18:25:26,688 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 18:26:17,260 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 18:26:17,261 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 18:26:19,322 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 18:27:08,140 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 18:27:08,146 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 18:27:10,572 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 18:27:59,633 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 18:27:59,634 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 18:28:01,783 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 18:28:51,999 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 18:28:52,000 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 18:28:54,297 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 18:29:43,572 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 18:29:43,572 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 18:29:45,836 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 18:30:35,325 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 18:30:35,325 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 18:30:37,781 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 18:31:26,624 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 18:31:26,625 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 18:31:28,880 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 18:32:19,342 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 18:32:19,343 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 18:32:21,623 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 18:33:10,783 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 18:33:10,784 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 18:33:13,069 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 18:34:01,846 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 18:34:01,847 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 18:34:04,122 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 18:34:53,132 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 18:34:53,132 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 18:34:55,401 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 18:35:44,313 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 18:35:44,313 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 18:35:46,580 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 18:36:34,984 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 18:36:34,984 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 18:36:37,486 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 18:37:28,258 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 18:37:28,259 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 18:37:30,532 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 18:38:20,461 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 18:38:20,461 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 18:38:24,845 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 18:39:13,846 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 18:39:13,847 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 18:39:15,913 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 18:40:04,839 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 18:40:04,840 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 18:40:07,135 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
2019/10/04 18:40:55,676 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==>  Preparing: SELECT * from yang_trade order by add_time asc limit 100000 
2019/10/04 18:40:55,676 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - ==> Parameters: 
2019/10/04 18:40:57,944 DEBUG  Thread-24             net.cyweb.mapper.YangTradeMapper.getAllYangTrades.debug(BaseJdbcLogger.java:145) - <==      Total: 100000
ation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,083 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,083 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,083 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,083 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,083 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,083 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,084 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,084 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,084 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,084 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,087 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,087 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,087 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,087 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,087 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,087 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,087 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,087 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,087 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,087 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,087 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,087 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,088 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,088 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,088 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,088 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,088 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,088 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,088 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,088 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,088 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,088 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,088 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,088 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,089 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,090 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,090 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,091 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,091 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,091 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,092 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,092 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,092 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,093 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,094 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,094 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,095 INFO   main                  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40) - Generating unique operation named: getGoogleUsingPOST_1
2019/10/04 14:31:16,095 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,095 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,096 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,096 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,097 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,097 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,097 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,098 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,098 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,098 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,098 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,098 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,098 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,099 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,099 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,099 INFO   main                  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40) - Generating unique operation named: googleCancleUsingPOST_1
2019/10/04 14:31:16,100 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,100 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,100 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,100 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,100 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,101 INFO   main                  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40) - Generating unique operation named: googleUpdateUsingPOST_1
2019/10/04 14:31:16,102 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,102 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,102 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,102 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,102 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,102 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,103 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,103 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,103 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,103 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,104 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,104 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,104 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,104 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,104 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,104 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,105 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,105 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,105 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,105 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,105 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,106 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,106 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,106 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,106 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,106 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,107 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,107 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,107 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,107 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,107 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,108 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,108 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,108 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,108 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,108 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,109 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,109 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,109 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,109 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,110 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,110 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,110 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,110 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,110 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,110 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,110 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,110 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,115 INFO   main                  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40) - Generating unique operation named: cancelOrderUsingPOST_1
2019/10/04 14:31:16,117 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,121 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,121 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,126 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,126 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,126 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,126 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,126 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,127 INFO   main                  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40) - Generating unique operation named: klineDataUsingPOST_1
2019/10/04 14:31:16,128 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,128 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,128 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,128 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,128 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,130 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,130 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,130 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,130 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,130 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,131 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:31:16,406 INFO   main                  org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.start(TomcatEmbeddedServletContainer.java:201) - Tomcat started on port(s): 8009 (http)
2019/10/04 14:31:16,407 INFO   main                  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:117) - Updating port to 8009
2019/10/04 14:31:16,412 INFO   main                  net.cyweb.javaapi.logStarted(StartupInfoLogger.java:57) - Started javaapi in 14.173 seconds (JVM running for 15.4)
2019/10/04 14:31:24,411 INFO   http-nio-8009-exec-2  org.springframework.web.servlet.DispatcherServlet.initServletBean(FrameworkServlet.java:489) - FrameworkServlet 'dispatcherServlet': initialization started
2019/10/04 14:31:24,437 INFO   http-nio-8009-exec-2  org.springframework.web.servlet.DispatcherServlet.initServletBean(FrameworkServlet.java:508) - FrameworkServlet 'dispatcherServlet': initialization completed in 26 ms
2019/10/04 14:32:15,161 INFO   MessageBroker-4       org.springframework.web.socket.config.WebSocketMessageBrokerStats.run(WebSocketMessageBrokerStats.java:113) - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 4, active threads = 4, queued tasks = 0, completed tasks = 0]
2019/10/04 14:33:40,390 INFO   main                  net.cyweb.javaapi.logStartupProfileInfo(SpringApplication.java:597) - The following profiles are active: dev
2019/10/04 14:33:40,432 INFO   main                  org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext.prepareRefresh(AbstractApplicationContext.java:583) - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@42c28305: startup date [Fri Oct 04 14:33:40 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7b139eab
2019/10/04 14:33:41,597 INFO   main                  org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:828) - Overriding bean definition for bean 'mongoSettingsProperties' with a different definition: replacing [Generic bean: class [net.cyweb.config.custom.MongoSettingsProperties]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [D:\center_new\front-services\javaapi\target\classes\net\cyweb\config\custom\MongoSettingsProperties.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=mongoConfig; factoryMethodName=mongoSettingsProperties; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [net/cyweb/config/custom/MongoConfig.class]]
2019/10/04 14:33:41,916 INFO   main                  org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:165) - Multiple Spring Data modules found, entering strict repository configuration mode!
2019/10/04 14:33:42,007 INFO   main                  org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:165) - Multiple Spring Data modules found, entering strict repository configuration mode!
2019/10/04 14:33:42,400 INFO   main                  org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:263) - BeanFactory id=46ed19e5-f08b-3b95-a37b-0c1390c0f0cf
2019/10/04 14:33:42,476 INFO   main                  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155) - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019/10/04 14:33:42,652 INFO   main                  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'redisConfig' of type [net.cyweb.config.custom.RedisConfig$$EnhancerBySpringCGLIB$$3f0bbf87] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019/10/04 14:33:42,661 INFO   main                  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$1e37dd37] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019/10/04 14:33:42,692 INFO   main                  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$674a1355] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019/10/04 14:33:42,726 INFO   main                  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$50648378] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019/10/04 14:33:42,745 INFO   main                  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$3a51e034] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019/10/04 14:33:43,096 INFO   main                  org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.initialize(TomcatEmbeddedServletContainer.java:89) - Tomcat initialized with port(s): 8009 (http)
2019/10/04 14:33:43,227 INFO   localhost-startStop-1 org.springframework.web.context.ContextLoader.prepareEmbeddedWebApplicationContext(EmbeddedWebApplicationContext.java:276) - Root WebApplicationContext: initialization completed in 2795 ms
2019/10/04 14:33:43,666 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'metricsFilter' to: [/*]
2019/10/04 14:33:43,666 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'characterEncodingFilter' to: [/*]
2019/10/04 14:33:43,667 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019/10/04 14:33:43,667 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019/10/04 14:33:43,667 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'requestContextFilter' to: [/*]
2019/10/04 14:33:43,669 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'springSecurityFilterChain' to: [/*]
2019/10/04 14:33:43,670 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'webRequestLoggingFilter' to: [/*]
2019/10/04 14:33:43,670 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'CORSFilter' to: [/*]
2019/10/04 14:33:43,670 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'applicationContextIdFilter' to: [/*]
2019/10/04 14:33:43,670 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.ServletRegistrationBean.onStartup(ServletRegistrationBean.java:190) - Mapping servlet: 'dispatcherServlet' to [/]
2019/10/04 14:33:44,214 INFO   main                  com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:721) - {dataSource-1} inited
2019/10/04 14:33:45,773 INFO   main                  org.mongodb.driver.cluster.info(SLF4JLogger.java:71) - Cluster created with settings {hosts=[localhost:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=100}
2019/10/04 14:33:45,773 INFO   main                  org.mongodb.driver.cluster.info(SLF4JLogger.java:71) - Adding discovered server localhost:27017 to client view of cluster
2019/10/04 14:33:45,832 INFO   cluster-ClusterId{value='5d96e7c9dc6c6023501360e5', description='null'}-localhost:27017 org.mongodb.driver.connection.info(SLF4JLogger.java:71) - Opened connection [connectionId{localValue:2, serverValue:128}] to localhost:27017
2019/10/04 14:33:45,838 INFO   cluster-ClusterId{value='5d96e7c9dc6c6023501360e5', description='null'}-localhost:27017 org.mongodb.driver.cluster.info(SLF4JLogger.java:71) - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 0]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=4089795}
2019/10/04 14:33:45,839 INFO   cluster-ClusterId{value='5d96e7c9dc6c6023501360e5', description='null'}-localhost:27017 org.mongodb.driver.cluster.info(SLF4JLogger.java:71) - Discovered cluster type of STANDALONE
2019/10/04 14:33:46,033 INFO   MaintenanceTimer-1-thread-1 org.mongodb.driver.connection.info(SLF4JLogger.java:71) - Opened connection [connectionId{localValue:1, serverValue:127}] to localhost:27017
2019/10/04 14:33:46,050 INFO   MaintenanceTimer-1-thread-1 org.mongodb.driver.connection.info(SLF4JLogger.java:71) - Opened connection [connectionId{localValue:3, serverValue:129}] to localhost:27017
2019/10/04 14:33:46,060 INFO   MaintenanceTimer-1-thread-1 org.mongodb.driver.connection.info(SLF4JLogger.java:71) - Opened connection [connectionId{localValue:4, serverValue:130}] to localhost:27017
2019/10/04 14:33:46,072 INFO   MaintenanceTimer-1-thread-1 org.mongodb.driver.connection.info(SLF4JLogger.java:71) - Opened connection [connectionId{localValue:5, serverValue:131}] to localhost:27017
2019/10/04 14:33:46,085 INFO   MaintenanceTimer-1-thread-1 org.mongodb.driver.connection.info(SLF4JLogger.java:71) - Opened connection [connectionId{localValue:6, serverValue:132}] to localhost:27017
2019/10/04 14:33:46,096 INFO   MaintenanceTimer-1-thread-1 org.mongodb.driver.connection.info(SLF4JLogger.java:71) - Opened connection [connectionId{localValue:7, serverValue:133}] to localhost:27017
2019/10/04 14:33:46,105 INFO   MaintenanceTimer-1-thread-1 org.mongodb.driver.connection.info(SLF4JLogger.java:71) - Opened connection [connectionId{localValue:8, serverValue:134}] to localhost:27017
2019/10/04 14:33:46,114 INFO   MaintenanceTimer-1-thread-1 org.mongodb.driver.connection.info(SLF4JLogger.java:71) - Opened connection [connectionId{localValue:9, serverValue:135}] to localhost:27017
2019/10/04 14:33:46,123 INFO   MaintenanceTimer-1-thread-1 org.mongodb.driver.connection.info(SLF4JLogger.java:71) - Opened connection [connectionId{localValue:10, serverValue:136}] to localhost:27017
2019/10/04 14:33:46,134 INFO   MaintenanceTimer-1-thread-1 org.mongodb.driver.connection.info(SLF4JLogger.java:71) - Opened connection [connectionId{localValue:11, serverValue:137}] to localhost:27017
2019/10/04 14:33:46,144 INFO   MaintenanceTimer-1-thread-1 org.mongodb.driver.connection.info(SLF4JLogger.java:71) - Opened connection [connectionId{localValue:12, serverValue:138}] to localhost:27017
2019/10/04 14:33:46,155 INFO   MaintenanceTimer-1-thread-1 org.mongodb.driver.connection.info(SLF4JLogger.java:71) - Opened connection [connectionId{localValue:13, serverValue:139}] to localhost:27017
2019/10/04 14:33:46,165 INFO   MaintenanceTimer-1-thread-1 org.mongodb.driver.connection.info(SLF4JLogger.java:71) - Opened connection [connectionId{localValue:14, serverValue:140}] to localhost:27017
2019/10/04 14:33:46,174 INFO   MaintenanceTimer-1-thread-1 org.mongodb.driver.connection.info(SLF4JLogger.java:71) - Opened connection [connectionId{localValue:15, serverValue:141}] to localhost:27017
2019/10/04 14:33:46,185 INFO   MaintenanceTimer-1-thread-1 org.mongodb.driver.connection.info(SLF4JLogger.java:71) - Opened connection [connectionId{localValue:16, serverValue:142}] to localhost:27017
2019/10/04 14:33:46,192 INFO   MaintenanceTimer-1-thread-1 org.mongodb.driver.connection.info(SLF4JLogger.java:71) - Opened connection [connectionId{localValue:17, serverValue:143}] to localhost:27017
2019/10/04 14:33:46,201 INFO   MaintenanceTimer-1-thread-1 org.mongodb.driver.connection.info(SLF4JLogger.java:71) - Opened connection [connectionId{localValue:18, serverValue:144}] to localhost:27017
2019/10/04 14:33:46,207 INFO   MaintenanceTimer-1-thread-1 org.mongodb.driver.connection.info(SLF4JLogger.java:71) - Opened connection [connectionId{localValue:19, serverValue:145}] to localhost:27017
2019/10/04 14:33:46,214 INFO   MaintenanceTimer-1-thread-1 org.mongodb.driver.connection.info(SLF4JLogger.java:71) - Opened connection [connectionId{localValue:20, serverValue:146}] to localhost:27017
2019/10/04 14:33:46,223 INFO   MaintenanceTimer-1-thread-1 org.mongodb.driver.connection.info(SLF4JLogger.java:71) - Opened connection [connectionId{localValue:21, serverValue:147}] to localhost:27017
2019/10/04 14:33:47,431 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/assets/bibiAsset],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.AssetsApiController.bibiAsset(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:33:47,432 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/assets/specAssets],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.AssetsApiController.specAssets(net.cyweb.model.YangMemberToken,net.cyweb.model.YangCurrencyUser,org.springframework.validation.BindingResult)
2019/10/04 14:33:47,433 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/assets/allAsset],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.AssetsApiController.allAsset(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:33:47,433 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/assets/updateAssets],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.AssetsApiController.updateAssets(net.cyweb.model.YangMemberToken,net.cyweb.model.YangCurrencyUser,org.springframework.validation.BindingResult,net.cyweb.model.YangMember,org.springframework.validation.BindingResult)
2019/10/04 14:33:47,433 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/assets/fabiAsset],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.AssetsApiController.fabiAsset(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:33:47,434 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/coin/list],methods=[GET]}" onto public net.cyweb.model.Result net.cyweb.controller.CoinController.list()
2019/10/04 14:33:47,434 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/coin/updateUserCurrency]}" onto public net.cyweb.model.Result net.cyweb.controller.CoinController.updateUserCurrency(net.cyweb.model.YangTibi)
2019/10/04 14:33:47,435 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font1/testCNY],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.Font1Controller.testCNY(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:33:47,443 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getAddress],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getAddress(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:33:47,443 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getUserInfo],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getUserInfo(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:33:47,444 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/symbols],methods=[POST]}" onto public java.util.Map net.cyweb.controller.FontController.symbols()
2019/10/04 14:33:47,444 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/login],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.login(java.util.Map<java.lang.String, java.lang.String>,javax.servlet.http.HttpServletRequest)
2019/10/04 14:33:47,445 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getLegalCurrencys],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getCoins()
2019/10/04 14:33:47,445 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/sendEmailCodes],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.sendEmailCodes(java.util.Map<java.lang.String, java.lang.String>,javax.servlet.http.HttpServletRequest)
2019/10/04 14:33:47,445 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/checkAccount],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.checkAccount(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:33:47,446 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/sendPhoneCodes],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.mseSend(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:33:47,446 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/buyCoins],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.buyCoins(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:33:47,447 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getNationality],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getNationality()
2019/10/04 14:33:47,447 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/registerByEmail],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.registerByEmail(java.util.Map<java.lang.String, java.lang.String>,javax.servlet.http.HttpServletRequest)
2019/10/04 14:33:47,447 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/changePwd],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.changePwd(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:33:47,448 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/resetPwd],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.resetPwd(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:33:47,449 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/checkVerifyCode],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.checkVerifyCode(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:33:47,449 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/loginNeedGoogle],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.loginNeedGoogle(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:33:47,450 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/createOrder],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.createOrder(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:33:47,450 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/registerByPhone],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.registerByPhone(java.util.Map<java.lang.String, java.lang.String>,javax.servlet.http.HttpServletRequest)
2019/10/04 14:33:47,450 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/findFiatMoneyPwd],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.findFiatMoneyPwd(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:33:47,451 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/depositNotifyReq],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.depositNotifyReq(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:33:47,451 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/delMongodb],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.delMongodb(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:33:47,451 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/findMemberPwd],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.findMemberPwd(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:33:47,452 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getDepositRecord],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getDepositRecord(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:33:47,452 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getGoogle],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getGoogle(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:33:47,453 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/googleCancle],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.googleCancle(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:33:47,453 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/updateGoogle],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.googleUpdate(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:33:47,453 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/history],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.klineData(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:33:47,454 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getAllCoins],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getAllCoins()
2019/10/04 14:33:47,454 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getSelfCurrencys],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getSelfCurrencys(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:33:47,454 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/cancelOrder],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.cancelOrder(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:33:47,455 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/isHasEnoughBM],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.isHasEnoughBM(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:33:47,455 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/addSelfCurrencys],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.addSelfCurrencys(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:33:47,455 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/addWorkOrder],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.addWorkOrder(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:33:47,456 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/withdrawListReq],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.withdrawListReq(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:33:47,456 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/kCurrencyInfo],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.kCurrencyInfo(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:33:47,457 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/verifyGoogleCode],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.verifyGoogleCode(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:33:47,457 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/checkCardOnly],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.checkCardOnly(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:33:47,457 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getIncreaseList],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getIncreaseList()
2019/10/04 14:33:47,458 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/deleteBankInfo],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.deleteBankInfo(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:33:47,458 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/withdrawRequest],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.withdrawRequest(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:33:47,459 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getArticleList],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getArticleList(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:33:47,460 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getFlash],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getFlash(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:33:47,460 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/orderTraderMod],methods=[POST]}" onto public void net.cyweb.controller.FontController.orderTraderMod()
2019/10/04 14:33:47,461 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/setFiatMoneyPwd],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.setFiatMoneyPwd(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:33:47,461 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/sendVerificationCode],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.sendVerificationCode(java.util.Map<java.lang.String, java.lang.String>,javax.servlet.http.HttpServletRequest)
2019/10/04 14:33:47,462 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getCurrencyListChange],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getCurrencyListChange(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:33:47,462 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/findBanksInfoByUser],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.findBanksInfoByUser(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:33:47,463 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getHistoryOrdersByMemberId],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getHistoryOrdersByMemberId(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:33:47,463 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/addDepositAddress],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.addDepositAddress(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:33:47,464 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/withdrawNotifyReq],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.withdrawNotifyReq(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:33:47,465 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/findWorkOrderById],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.findWorkOrderById(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:33:47,465 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/checkAccountIsOnly],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.checkAccountIsOnly(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:33:47,466 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getUserOrderFiveRecordSell],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getUserOrderFiveRecordSell(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:33:47,466 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/findMembersOrdersByMemberId],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.findMembersOrdersByMemberId(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:33:47,466 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/findMembersOrdersByAcceptances],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.findMembersOrdersByAcceptances(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:33:47,467 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getUserOrderFiveRecordBuy],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getUserOrderFiveRecordBuy(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:33:47,467 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/findC2COrdersByAcceptances],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.findC2COrdersByAcceptances(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:33:47,467 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getNewCurrenciesList],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getNewCurrenciesList()
2019/10/04 14:33:47,468 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/creatAcceptancesOrder],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.creatAcceptancesOrder(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:33:47,468 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/saveAcceptancesBaseInfo],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.saveAcceptancesBaseInfo(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:33:47,469 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/primaryCertification],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.primaryCertification(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:33:47,469 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getUpCurrencyInfos],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getUpCurrencyInfos()
2019/10/04 14:33:47,469 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getOrdersByMemberId],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getOrdersByMemberId(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:33:47,470 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/updateAcceptancesPicInfo],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.updateAcceptancesPicInfo(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:33:47,470 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/acceptancesOrderRelease],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.acceptancesOrderRelease(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:33:47,470 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/findOldWorkOrders],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.findOldWorkOrders(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:33:47,471 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getArticleByArticleId],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getArticleByArticleId(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:33:47,471 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getTradeCurrencyInfos],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getTradeCurrencyInfos()
2019/10/04 14:33:47,471 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/saveBankInfoByUser],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.saveBankInfoByUser(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:33:47,472 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getCurrencyProfile],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getCurrencyProfile(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:33:47,472 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/updateAcceptancesIsReady],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.updateAcceptancesIsReady(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:33:47,472 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/updateFiatMoneyPwd],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.updateFiatMoneyPwd(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:33:47,473 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getWithdrawRecordByCurrencyId],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getWithdrawRecordByCurrencyId(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:33:47,473 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/cancleAcceptancesBuyOrder],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.cancleAcceptancesBuyOrder(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:33:47,474 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getC2CGuaByCurrencyId],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getC2CGuaByCurrencyId(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:33:47,474 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/deletAcceptancesById],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.deletAcceptancesById(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:33:47,474 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/addGoogleSecretAndQR],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.addGoogleSecretAndQR(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:33:47,475 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getTradeCurrencys],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getTradeCurrencys()
2019/10/04 14:33:47,475 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/cancleAcceptancesSellOrder],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.cancleAcceptancesSellOrder(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:33:47,475 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getCurrencyInfoById],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getCurrencyInfoById(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:33:47,480 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/getCurrency],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.getCurrency(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019/10/04 14:33:47,481 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/getCategory],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.getCategory(java.lang.String)
2019/10/04 14:33:47,481 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/getConfig],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.getConfig(java.lang.String)
2019/10/04 14:33:47,481 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/getArticleList],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.getArticleList(java.lang.String,java.lang.String,java.lang.String,int,int)
2019/10/04 14:33:47,481 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/getFlash]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.getFlash(java.lang.String,java.lang.String)
2019/10/04 14:33:47,482 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/getArea],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.getArea(java.lang.String)
2019/10/04 14:33:47,482 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/addTimeLine],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.addTimeLine(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019/10/04 14:33:47,482 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/readImage]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.readImage(java.lang.String)
2019/10/04 14:33:47,482 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/currencyFindAdd],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.currencyFindAdd(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019/10/04 14:33:47,482 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/searchTrade],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.searchTrade(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019/10/04 14:33:47,483 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/initWeb]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.initWeb(java.lang.String,java.lang.String,java.lang.String)
2019/10/04 14:33:47,483 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/getCurrencyPair],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.getCurrencyPair(java.lang.String,java.lang.String)
2019/10/04 14:33:47,483 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/getTradeFee],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.getTradeFee(java.lang.String,java.lang.String)
2019/10/04 14:33:47,483 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/getArticleDetail],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.getArticleDetail(java.lang.String,java.lang.String,java.lang.String)
2019/10/04 14:33:47,484 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/currencyFindList],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.currencyFindList(java.lang.String,java.lang.String,java.lang.String)
2019/10/04 14:33:47,484 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/getTimeLine],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.getTimeLine(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019/10/04 14:33:47,484 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/upload],methods=[POST],consumes=[multipart/form-data]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.upload(org.springframework.web.multipart.MultipartFile)
2019/10/04 14:33:47,484 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/getUserTradeData]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.getUserTradeData(java.lang.String,java.lang.String,int,int)
2019/10/04 14:33:47,485 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/uploadByUser],methods=[POST],consumes=[multipart/form-data]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.uploadByUser(org.springframework.web.multipart.MultipartFile)
2019/10/04 14:33:47,485 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/getTradeData]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.getTradeData(java.lang.String,java.lang.String)
2019/10/04 14:33:47,485 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/getCurrencyListChange],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.getCurrencyListChange(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019/10/04 14:33:47,485 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/getQianbaoAddress],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.getQianbaoAddress(java.lang.String,java.lang.String,java.lang.String)
2019/10/04 14:33:47,485 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/delQianbaoAddress],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.delQianbaoAddress(java.lang.String,java.lang.String)
2019/10/04 14:33:47,486 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/getCurrencyDetailChange],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.getCurrencyDetailChange(java.lang.String,java.lang.String,java.lang.String)
2019/10/04 14:33:47,486 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/getCurrencyPairTrade],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.getCurrencyPairTrade(java.lang.String)
2019/10/04 14:33:47,486 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/addQianbaoAddress],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.addQianbaoAddress(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019/10/04 14:33:47,486 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/getCurrencyPairOrder],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.getCurrencyPairOrder(java.lang.String,java.lang.String)
2019/10/04 14:33:47,487 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontTrade/cancleBuy],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontTradeController.cancleBuy(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:33:47,488 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontTrade/getGua],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontTradeController.getGua(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:33:47,488 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontTrade/c2cOrdersBuy],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontTradeController.c2cOrdersBuy(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:33:47,488 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontTrade/c2cOrdersSell],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontTradeController.c2cOrdersSell(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:33:47,489 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontTrade/confirmBuy],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontTradeController.confirmBuy(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:33:47,489 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontTrade/cancelBuy],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontTradeController.cancelBuy(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:33:47,489 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontTrade/getGuaList],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontTradeController.getGuaList(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:33:47,489 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontTrade/getC2COrder],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontTradeController.getC2COrder(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:33:47,490 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontTrade/c2cAssetChange],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontTradeController.c2cAssetChange(java.util.Map<java.lang.String, java.lang.String>,org.apache.catalina.servlet4preview.http.HttpServletRequest)
2019/10/04 14:33:47,490 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontTrade/getC2COrderList],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontTradeController.getC2COrderList(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:33:47,490 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontTrade/findBanksInfoByUser],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontTradeController.findBanksInfoByUser(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:33:47,492 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontUser/getLog],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontUserController.getLog(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019/10/04 14:33:47,492 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontUser/getFtLockRecord],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontUserController.getFtLockRecord(java.lang.String,java.lang.String,java.lang.String)
2019/10/04 14:33:47,492 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontUser/getCardOrder],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontUserController.getCardOrder(java.lang.String,java.lang.String,java.lang.String)
2019/10/04 14:33:47,492 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontUser/loginRecord]}" onto public net.cyweb.model.Result net.cyweb.controller.FontUserController.loginRecord(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019/10/04 14:33:47,493 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontUser/getFuntNum],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontUserController.getFuntNum(java.lang.String)
2019/10/04 14:33:47,493 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontUser/getCardLock],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontUserController.getCardLock(java.lang.String,java.lang.String,java.lang.String)
2019/10/04 14:33:47,493 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontUser/searchOrder],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontUserController.searchOrder(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019/10/04 14:33:47,493 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontUser/getGoogle],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontUserController.getGoogle(java.lang.String)
2019/10/04 14:33:47,494 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontUser/googleCancle],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontUserController.googleCancle(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019/10/04 14:33:47,494 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontUser/googleUpdate],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontUserController.googleUpdate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019/10/04 14:33:47,494 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontUser/applyCoin],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontUserController.applyCoin(net.cyweb.model.YangCoinList,java.lang.String)
2019/10/04 14:33:47,494 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontUser/addLog],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontUserController.addLog(java.lang.String,java.lang.String,java.lang.String)
2019/10/04 14:33:47,495 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontUser/googleBind],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontUserController.googleBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019/10/04 14:33:47,495 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontUser/getTibiOutList],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontUserController.getTibiOutList(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019/10/04 14:33:47,495 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontUser/addTibiOut],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontUserController.addTibiOut(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019/10/04 14:33:47,495 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontUser/getFtLockRecordSum],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontUserController.getFtLockRecordSum(java.lang.String)
2019/10/04 14:33:47,496 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/member/list],methods=[GET]}" onto public net.cyweb.model.Result net.cyweb.controller.FunMemberController.list()
2019/10/04 14:33:47,497 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/member/getmember],methods=[GET]}" onto public net.cyweb.model.Result net.cyweb.controller.FunMemberController.getMember(java.lang.Integer)
2019/10/04 14:33:47,497 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/member/xssTest],methods=[GET]}" onto public java.lang.String net.cyweb.controller.FunMemberController.xssTest(java.lang.String)
2019/10/04 14:33:47,497 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/member/confirm],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FunMemberController.confirm(java.math.BigInteger,java.lang.String,int)
2019/10/04 14:33:47,497 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/member/chongzhi],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FunMemberController.chongzhi(net.cyweb.model.YangTibi)
2019/10/04 14:33:47,498 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/member/finishConfirm],methods=[POST],consumes=[application/json]}" onto public net.cyweb.model.Result net.cyweb.controller.FunMemberController.finishConfirm(java.math.BigInteger,java.lang.String,java.lang.String,int)
2019/10/04 14:33:47,498 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/member/flushCurrencyFlash],methods=[GET]}" onto public net.cyweb.model.Result net.cyweb.controller.FunMemberController.flushCurrencyFlash(java.lang.String,java.lang.String)
2019/10/04 14:33:47,498 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/member/getMemberCurrency],methods=[GET]}" onto public net.cyweb.model.Result net.cyweb.controller.FunMemberController.getMemberCurrency(java.lang.Integer,java.lang.Integer)
2019/10/04 14:33:47,498 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/member/getMemberCurrencyList],methods=[GET]}" onto public net.cyweb.model.Result net.cyweb.controller.FunMemberController.getMemberCurrencyList(java.lang.Integer)
2019/10/04 14:33:47,498 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/member/createMemberCurrency],methods=[GET]}" onto public net.cyweb.model.Result net.cyweb.controller.FunMemberController.createMemberCurrency(java.lang.Integer,java.lang.Integer,java.lang.String)
2019/10/04 14:33:47,499 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/test/testSocket]}" onto public void net.cyweb.controller.testCoinController.test1() throws java.lang.Exception
2019/10/04 14:33:47,500 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/trade/getToken],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.TradeApiController.getToken(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:33:47,500 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/trade/klineDataTest],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.TradeApiController.klineDataTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019/10/04 14:33:47,501 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/trade/createorder],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.TradeApiController.createorder(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:33:47,501 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/trade/getCurrencyInfo],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.TradeApiController.getCurrencyInfo(java.lang.String)
2019/10/04 14:33:47,501 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/trade/klineDataApi],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.TradeApiController.klineDataApi(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019/10/04 14:33:47,502 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/trade/mountOrder],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.TradeApiController.mountOrder(net.cyweb.model.YangOrders,org.springframework.validation.BindingResult)
2019/10/04 14:33:47,502 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/trade/delMongodb],methods=[GET]}" onto public net.cyweb.model.Result net.cyweb.controller.TradeApiController.delMongodb(java.lang.String)
2019/10/04 14:33:47,502 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/trade/klineData],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.TradeApiController.klineData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019/10/04 14:33:47,503 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/trade/cancelOrder],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.TradeApiController.cancelOrder(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:33:47,503 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/trade/getFontTradeLastTime],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.TradeApiController.getFontTradeLstTime(java.lang.String,java.lang.String)
2019/10/04 14:33:47,503 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/trade/flushCurrencyPair],methods=[POST]}" onto public boolean net.cyweb.controller.TradeApiController.flushCurrencyPair(int)
2019/10/04 14:33:47,503 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/trade/getUserTradeRecord],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.TradeApiController.getUserTradeFiveRecord(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:33:47,504 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/trade/getUserOrderRecord],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.TradeApiController.getUserOrderFiveRecord(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:33:47,505 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019/10/04 14:33:47,507 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019/10/04 14:33:47,507 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019/10/04 14:33:47,509 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019/10/04 14:33:47,511 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019/10/04 14:33:47,511 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019/10/04 14:33:48,550 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2019/10/04 14:33:48,550 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 14:33:48,551 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2019/10/04 14:33:48,552 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2019/10/04 14:33:48,553 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 14:33:48,553 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2019/10/04 14:33:48,554 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2019/10/04 14:33:48,554 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 14:33:48,555 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 14:33:48,555 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 14:33:48,555 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 14:33:48,556 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2019/10/04 14:33:48,557 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 14:33:48,558 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2019/10/04 14:33:48,558 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2019/10/04 14:33:48,558 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:33:48,559 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2019/10/04 14:33:48,559 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2019/10/04 14:33:48,559 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 14:33:48,560 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2019/10/04 14:33:48,560 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 14:33:48,561 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2019/10/04 14:33:48,561 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:33:48,561 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 14:33:48,562 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 14:33:48,562 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2019/10/04 14:33:48,562 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 14:33:49,086 INFO   main                  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize(ExecutorConfigurationSupport.java:165) - Initializing ExecutorService  'clientInboundChannelExecutor'
2019/10/04 14:33:49,098 INFO   main                  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize(ExecutorConfigurationSupport.java:165) - Initializing ExecutorService  'clientOutboundChannelExecutor'
2019/10/04 14:33:49,119 INFO   main                  org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler.initialize(ExecutorConfigurationSupport.java:165) - Initializing ExecutorService  'messageBrokerTaskScheduler'
2019/10/04 14:33:49,179 INFO   main                  org.springframework.web.socket.server.support.WebSocketHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/endpointWisely/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019/10/04 14:33:49,195 INFO   main                  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize(ExecutorConfigurationSupport.java:165) - Initializing ExecutorService  'brokerChannelExecutor'
2019/10/04 14:33:49,495 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@42c28305: startup date [Fri Oct 04 14:33:40 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7b139eab
2019/10/04 14:33:49,566 INFO   main                  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019/10/04 14:33:49,567 INFO   main                  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019/10/04 14:33:49,623 INFO   main                  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019/10/04 14:33:50,876 INFO   main                  org.springframework.boot.autoconfigure.security.AuthenticationManagerConfiguration.configure(AuthenticationManagerConfiguration.java:173) - 

Using default security password: 863f5f6e-4f5d-4aa0-a98d-d355aae97c46

2019/10/04 14:33:50,940 INFO   main                  org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43) - Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
2019/10/04 14:33:51,064 INFO   main                  org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43) - Creating filter chain: org.springframework.boot.actuate.autoconfigure.ManagementWebSecurityAutoConfiguration$LazyEndpointPathRequestMatcher@786e2c5e, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@75452b01, org.springframework.security.web.context.SecurityContextPersistenceFilter@2aea7775, org.springframework.security.web.header.HeaderWriterFilter@33c5cc0, org.springframework.web.filter.CorsFilter@23b260ed, org.springframework.security.web.authentication.logout.LogoutFilter@6dde03ce, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@2daf650b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1c8d9ac9, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@29511cf9, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6d5b160, org.springframework.security.web.session.SessionManagementFilter@394e0104, org.springframework.security.web.access.ExceptionTranslationFilter@424461ad, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@761d679f]
2019/10/04 14:33:51,077 INFO   main                  org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43) - Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@10fa270e, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@75dc995f, org.springframework.security.web.context.SecurityContextPersistenceFilter@33d75081, org.springframework.security.web.header.HeaderWriterFilter@3ca43e5d, org.springframework.security.web.csrf.CsrfFilter@56739ee9, org.springframework.security.web.authentication.logout.LogoutFilter@19203ff3, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@327af731, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2fb171f5, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@51c660c8, org.springframework.security.web.session.SessionManagementFilter@a479c0c, org.springframework.security.web.access.ExceptionTranslationFilter@100235c7]
2019/10/04 14:33:51,981 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.afterSingletonsInstantiated(MBeanExporter.java:431) - Registering beans for JMX exposure on startup
2019/10/04 14:33:51,983 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'dataSource' has been autodetected for JMX exposure
2019/10/04 14:33:51,990 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'environmentManager' has been autodetected for JMX exposure
2019/10/04 14:33:51,993 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2019/10/04 14:33:51,993 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2019/10/04 14:33:51,993 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'restartEndpoint' has been autodetected for JMX exposure
2019/10/04 14:33:51,994 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2019/10/04 14:33:51,994 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'refreshScope' has been autodetected for JMX exposure
2019/10/04 14:33:51,996 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2019/10/04 14:33:52,007 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
2019/10/04 14:33:52,016 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2019/10/04 14:33:52,020 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2019/10/04 14:33:52,032 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=42c28305,type=ConfigurationPropertiesRebinder]
2019/10/04 14:33:52,035 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:671) - Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019/10/04 14:33:52,036 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2019/10/04 14:33:52,037 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.afterSingletonsInstantiated(MBeanExporter.java:431) - Registering beans for JMX exposure on startup
2019/10/04 14:33:52,326 INFO   main                  org.springframework.context.support.DefaultLifecycleProcessor.start(DefaultLifecycleProcessor.java:343) - Starting beans in phase 0
2019/10/04 14:33:52,343 INFO   main                  org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(InstanceInfoFactory.java:70) - Setting initial instance status as: STARTING
2019/10/04 14:33:52,398 INFO   main                  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:40) - Registering application javaApi with eureka with status UP
2019/10/04 14:33:52,401 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2019/10/04 14:33:52,408 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
2019/10/04 14:33:52,413 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2019/10/04 14:33:52,415 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2019/10/04 14:33:52,417 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2019/10/04 14:33:52,419 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2019/10/04 14:33:52,421 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2019/10/04 14:33:52,424 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2019/10/04 14:33:52,429 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2019/10/04 14:33:52,431 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2019/10/04 14:33:52,433 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2019/10/04 14:33:52,434 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2019/10/04 14:33:52,436 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2019/10/04 14:33:52,438 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
2019/10/04 14:33:52,439 INFO   main                  org.springframework.context.support.DefaultLifecycleProcessor.start(DefaultLifecycleProcessor.java:343) - Starting beans in phase 2147483647
2019/10/04 14:33:52,439 INFO   main                  org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler.start(AbstractBrokerMessageHandler.java:157) - Starting...
2019/10/04 14:33:52,439 INFO   main                  org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler.publishBrokerAvailableEvent(AbstractBrokerMessageHandler.java:260) - BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019/10/04 14:33:52,440 INFO   main                  org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler.start(AbstractBrokerMessageHandler.java:166) - Started.
2019/10/04 14:33:52,455 INFO   main                  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.onApplicationEvent(DocumentationPluginsBootstrapper.java:84) - Context refreshed
2019/10/04 14:33:52,472 INFO   main                  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.onApplicationEvent(DocumentationPluginsBootstrapper.java:87) - Found 1 custom documentation plugin(s)
2019/10/04 14:33:52,482 INFO   main                  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:44) - Scanning for api listing references
2019/10/04 14:33:52,712 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:52,713 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:52,716 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:52,717 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:52,717 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:52,717 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:52,717 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:52,717 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,240 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,240 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,240 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,240 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,242 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,242 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,242 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,242 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,243 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,244 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,244 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,244 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,245 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,245 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,245 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,247 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,247 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,248 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,249 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,249 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,249 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,251 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,251 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,251 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,251 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,251 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,251 INFO   main                  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40) - Generating unique operation named: getArticleListUsingPOST_1
2019/10/04 14:33:53,253 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,255 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,255 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,255 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,255 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,256 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,256 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,256 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,257 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,258 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,258 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,258 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,258 INFO   main                  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40) - Generating unique operation named: getCurrencyListChangeUsingPOST_1
2019/10/04 14:33:53,259 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,259 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,261 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,261 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,262 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,263 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,263 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,264 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,264 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,265 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,265 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,265 INFO   main                  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40) - Generating unique operation named: getFlashUsingPOST_1
2019/10/04 14:33:53,266 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,266 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,267 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,267 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,268 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,268 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,269 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,269 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,270 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,270 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,271 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,271 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,271 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,272 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,272 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,273 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,273 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,274 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,274 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,275 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,275 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,276 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,276 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,277 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,277 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,278 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,278 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,279 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,279 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,280 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,280 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,280 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,281 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,282 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,282 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,283 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,283 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,284 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,284 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,285 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,285 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,286 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,286 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,287 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,287 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,288 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,288 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,289 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,289 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,290 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,290 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,291 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,291 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,291 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,292 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,292 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,292 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,293 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,293 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,293 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,294 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,294 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,294 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,295 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,295 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,295 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,296 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,296 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,296 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,297 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,297 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,297 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,298 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,298 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,298 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,299 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,300 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,301 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,302 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,302 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,303 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,304 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,305 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,306 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,306 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,306 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,306 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,306 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,306 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,306 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,306 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,318 INFO   main                  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40) - Generating unique operation named: findBanksInfoByUserUsingPOST_1
2019/10/04 14:33:53,325 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,325 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,325 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,326 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,326 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,327 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,327 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,327 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,327 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,327 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,327 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,328 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,328 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,328 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,328 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,329 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,329 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,329 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,329 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,329 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,329 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,329 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,329 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,329 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,329 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,329 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,329 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,329 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,329 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,330 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,330 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,330 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,330 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,330 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,330 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,330 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,330 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,330 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,330 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,331 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,331 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,331 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,332 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,332 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,332 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,333 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,333 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,333 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,334 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,335 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,336 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,337 INFO   main                  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40) - Generating unique operation named: getGoogleUsingPOST_1
2019/10/04 14:33:53,337 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,338 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,338 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,338 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,339 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,339 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,339 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,339 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,339 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,339 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,339 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,340 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,340 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,341 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,341 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,341 INFO   main                  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40) - Generating unique operation named: googleCancleUsingPOST_1
2019/10/04 14:33:53,342 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,342 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,342 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,342 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,342 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,342 INFO   main                  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40) - Generating unique operation named: googleUpdateUsingPOST_1
2019/10/04 14:33:53,343 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,343 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,343 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,343 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,343 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,344 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,344 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,344 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,344 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,344 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,345 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,345 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,345 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,345 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,345 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,346 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,347 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,347 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,347 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,347 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,347 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,347 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,348 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,348 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,348 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,348 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,348 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,348 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,349 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,349 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,349 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,349 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,350 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,350 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,350 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,350 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,350 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,350 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,351 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,351 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,352 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,352 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,352 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,352 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,352 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,352 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,352 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,352 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,356 INFO   main                  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40) - Generating unique operation named: cancelOrderUsingPOST_1
2019/10/04 14:33:53,359 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,363 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,363 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,368 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,368 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,368 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,368 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,368 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,369 INFO   main                  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40) - Generating unique operation named: klineDataUsingPOST_1
2019/10/04 14:33:53,370 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,370 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,370 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,370 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,370 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,372 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,372 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,372 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,372 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,372 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,373 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:33:53,679 INFO   main                  org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.start(TomcatEmbeddedServletContainer.java:201) - Tomcat started on port(s): 8009 (http)
2019/10/04 14:33:53,680 INFO   main                  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:117) - Updating port to 8009
2019/10/04 14:33:53,684 INFO   main                  net.cyweb.javaapi.logStarted(StartupInfoLogger.java:57) - Started javaapi in 15.871 seconds (JVM running for 18.643)
2019/10/04 14:34:44,345 INFO   http-nio-8009-exec-2  org.springframework.web.servlet.DispatcherServlet.initServletBean(FrameworkServlet.java:489) - FrameworkServlet 'dispatcherServlet': initialization started
2019/10/04 14:34:44,368 INFO   http-nio-8009-exec-2  org.springframework.web.servlet.DispatcherServlet.initServletBean(FrameworkServlet.java:508) - FrameworkServlet 'dispatcherServlet': initialization completed in 23 ms
2019/10/04 14:35:08,162 INFO   MessageBroker-6       org.springframework.web.socket.config.WebSocketMessageBrokerStats.run(WebSocketMessageBrokerStats.java:113) - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 6, active threads = 2, queued tasks = 2, completed tasks = 6]
2019/10/04 14:36:44,331 INFO   main                  net.cyweb.javaapi.logStartupProfileInfo(SpringApplication.java:597) - The following profiles are active: dev
2019/10/04 14:36:44,351 INFO   main                  org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext.prepareRefresh(AbstractApplicationContext.java:583) - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@df5f5c0: startup date [Fri Oct 04 14:36:44 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3932c79a
2019/10/04 14:36:46,334 INFO   main                  org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:828) - Overriding bean definition for bean 'mongoSettingsProperties' with a different definition: replacing [Generic bean: class [net.cyweb.config.custom.MongoSettingsProperties]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [D:\center_new\front-services\javaapi\target\classes\net\cyweb\config\custom\MongoSettingsProperties.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=mongoConfig; factoryMethodName=mongoSettingsProperties; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [net/cyweb/config/custom/MongoConfig.class]]
2019/10/04 14:36:46,629 INFO   main                  org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:165) - Multiple Spring Data modules found, entering strict repository configuration mode!
2019/10/04 14:36:46,699 INFO   main                  org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:165) - Multiple Spring Data modules found, entering strict repository configuration mode!
2019/10/04 14:36:47,003 INFO   main                  org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:263) - BeanFactory id=46ed19e5-f08b-3b95-a37b-0c1390c0f0cf
2019/10/04 14:36:47,065 INFO   main                  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155) - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019/10/04 14:36:47,174 INFO   main                  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'redisConfig' of type [net.cyweb.config.custom.RedisConfig$$EnhancerBySpringCGLIB$$457f9654] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019/10/04 14:36:47,181 INFO   main                  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$24abb404] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019/10/04 14:36:47,205 INFO   main                  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$6dbdea22] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019/10/04 14:36:47,234 INFO   main                  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$56d85a45] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019/10/04 14:36:47,264 INFO   main                  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$40c5b701] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019/10/04 14:36:47,545 INFO   main                  org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.initialize(TomcatEmbeddedServletContainer.java:89) - Tomcat initialized with port(s): 8009 (http)
2019/10/04 14:36:47,678 INFO   localhost-startStop-1 org.springframework.web.context.ContextLoader.prepareEmbeddedWebApplicationContext(EmbeddedWebApplicationContext.java:276) - Root WebApplicationContext: initialization completed in 3327 ms
2019/10/04 14:36:47,938 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'metricsFilter' to: [/*]
2019/10/04 14:36:47,938 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'characterEncodingFilter' to: [/*]
2019/10/04 14:36:47,938 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019/10/04 14:36:47,938 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019/10/04 14:36:47,938 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'requestContextFilter' to: [/*]
2019/10/04 14:36:47,939 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'springSecurityFilterChain' to: [/*]
2019/10/04 14:36:47,940 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'webRequestLoggingFilter' to: [/*]
2019/10/04 14:36:47,940 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'CORSFilter' to: [/*]
2019/10/04 14:36:47,940 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'applicationContextIdFilter' to: [/*]
2019/10/04 14:36:47,940 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.ServletRegistrationBean.onStartup(ServletRegistrationBean.java:190) - Mapping servlet: 'dispatcherServlet' to [/]
2019/10/04 14:36:48,576 INFO   main                  com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:721) - {dataSource-1} inited
2019/10/04 14:36:49,736 INFO   main                  org.mongodb.driver.cluster.info(SLF4JLogger.java:71) - Cluster created with settings {hosts=[localhost:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=100}
2019/10/04 14:36:49,736 INFO   main                  org.mongodb.driver.cluster.info(SLF4JLogger.java:71) - Adding discovered server localhost:27017 to client view of cluster
2019/10/04 14:36:49,778 INFO   cluster-ClusterId{value='5d96e881dc6c6024342f0e3f', description='null'}-localhost:27017 org.mongodb.driver.connection.info(SLF4JLogger.java:71) - Opened connection [connectionId{localValue:2, serverValue:149}] to localhost:27017
2019/10/04 14:36:49,783 INFO   cluster-ClusterId{value='5d96e881dc6c6024342f0e3f', description='null'}-localhost:27017 org.mongodb.driver.cluster.info(SLF4JLogger.java:71) - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 0]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2775882}
2019/10/04 14:36:49,784 INFO   cluster-ClusterId{value='5d96e881dc6c6024342f0e3f', description='null'}-localhost:27017 org.mongodb.driver.cluster.info(SLF4JLogger.java:71) - Discovered cluster type of STANDALONE
2019/10/04 14:36:49,843 INFO   MaintenanceTimer-1-thread-1 org.mongodb.driver.connection.info(SLF4JLogger.java:71) - Opened connection [connectionId{localValue:1, serverValue:148}] to localhost:27017
2019/10/04 14:36:49,852 INFO   MaintenanceTimer-1-thread-1 org.mongodb.driver.connection.info(SLF4JLogger.java:71) - Opened connection [connectionId{localValue:3, serverValue:150}] to localhost:27017
2019/10/04 14:36:49,862 INFO   MaintenanceTimer-1-thread-1 org.mongodb.driver.connection.info(SLF4JLogger.java:71) - Opened connection [connectionId{localValue:4, serverValue:151}] to localhost:27017
2019/10/04 14:36:49,871 INFO   MaintenanceTimer-1-thread-1 org.mongodb.driver.connection.info(SLF4JLogger.java:71) - Opened connection [connectionId{localValue:5, serverValue:152}] to localhost:27017
2019/10/04 14:36:49,890 INFO   MaintenanceTimer-1-thread-1 org.mongodb.driver.connection.info(SLF4JLogger.java:71) - Opened connection [connectionId{localValue:6, serverValue:153}] to localhost:27017
2019/10/04 14:36:49,901 INFO   MaintenanceTimer-1-thread-1 org.mongodb.driver.connection.info(SLF4JLogger.java:71) - Opened connection [connectionId{localValue:7, serverValue:154}] to localhost:27017
2019/10/04 14:36:49,907 INFO   MaintenanceTimer-1-thread-1 org.mongodb.driver.connection.info(SLF4JLogger.java:71) - Opened connection [connectionId{localValue:8, serverValue:155}] to localhost:27017
2019/10/04 14:36:49,930 INFO   MaintenanceTimer-1-thread-1 org.mongodb.driver.connection.info(SLF4JLogger.java:71) - Opened connection [connectionId{localValue:9, serverValue:156}] to localhost:27017
2019/10/04 14:36:49,951 INFO   MaintenanceTimer-1-thread-1 org.mongodb.driver.connection.info(SLF4JLogger.java:71) - Opened connection [connectionId{localValue:10, serverValue:157}] to localhost:27017
2019/10/04 14:36:49,961 INFO   MaintenanceTimer-1-thread-1 org.mongodb.driver.connection.info(SLF4JLogger.java:71) - Opened connection [connectionId{localValue:11, serverValue:158}] to localhost:27017
2019/10/04 14:36:49,969 INFO   MaintenanceTimer-1-thread-1 org.mongodb.driver.connection.info(SLF4JLogger.java:71) - Opened connection [connectionId{localValue:12, serverValue:159}] to localhost:27017
2019/10/04 14:36:49,973 INFO   MaintenanceTimer-1-thread-1 org.mongodb.driver.connection.info(SLF4JLogger.java:71) - Opened connection [connectionId{localValue:13, serverValue:160}] to localhost:27017
2019/10/04 14:36:49,988 INFO   MaintenanceTimer-1-thread-1 org.mongodb.driver.connection.info(SLF4JLogger.java:71) - Opened connection [connectionId{localValue:14, serverValue:161}] to localhost:27017
2019/10/04 14:36:49,993 INFO   MaintenanceTimer-1-thread-1 org.mongodb.driver.connection.info(SLF4JLogger.java:71) - Opened connection [connectionId{localValue:15, serverValue:162}] to localhost:27017
2019/10/04 14:36:49,998 INFO   MaintenanceTimer-1-thread-1 org.mongodb.driver.connection.info(SLF4JLogger.java:71) - Opened connection [connectionId{localValue:16, serverValue:163}] to localhost:27017
2019/10/04 14:36:50,004 INFO   MaintenanceTimer-1-thread-1 org.mongodb.driver.connection.info(SLF4JLogger.java:71) - Opened connection [connectionId{localValue:17, serverValue:164}] to localhost:27017
2019/10/04 14:36:50,009 INFO   MaintenanceTimer-1-thread-1 org.mongodb.driver.connection.info(SLF4JLogger.java:71) - Opened connection [connectionId{localValue:18, serverValue:165}] to localhost:27017
2019/10/04 14:36:50,013 INFO   MaintenanceTimer-1-thread-1 org.mongodb.driver.connection.info(SLF4JLogger.java:71) - Opened connection [connectionId{localValue:19, serverValue:166}] to localhost:27017
2019/10/04 14:36:50,019 INFO   MaintenanceTimer-1-thread-1 org.mongodb.driver.connection.info(SLF4JLogger.java:71) - Opened connection [connectionId{localValue:20, serverValue:167}] to localhost:27017
2019/10/04 14:36:50,026 INFO   MaintenanceTimer-1-thread-1 org.mongodb.driver.connection.info(SLF4JLogger.java:71) - Opened connection [connectionId{localValue:21, serverValue:168}] to localhost:27017
2019/10/04 14:36:50,960 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/assets/fabiAsset],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.AssetsApiController.fabiAsset(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:36:50,961 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/assets/allAsset],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.AssetsApiController.allAsset(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:36:50,961 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/assets/specAssets],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.AssetsApiController.specAssets(net.cyweb.model.YangMemberToken,net.cyweb.model.YangCurrencyUser,org.springframework.validation.BindingResult)
2019/10/04 14:36:50,962 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/assets/updateAssets],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.AssetsApiController.updateAssets(net.cyweb.model.YangMemberToken,net.cyweb.model.YangCurrencyUser,org.springframework.validation.BindingResult,net.cyweb.model.YangMember,org.springframework.validation.BindingResult)
2019/10/04 14:36:50,962 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/assets/bibiAsset],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.AssetsApiController.bibiAsset(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:36:50,962 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/coin/list],methods=[GET]}" onto public net.cyweb.model.Result net.cyweb.controller.CoinController.list()
2019/10/04 14:36:50,963 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/coin/updateUserCurrency]}" onto public net.cyweb.model.Result net.cyweb.controller.CoinController.updateUserCurrency(net.cyweb.model.YangTibi)
2019/10/04 14:36:50,963 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font1/testCNY],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.Font1Controller.testCNY(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:36:50,970 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getAddress],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getAddress(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:36:50,970 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getUserInfo],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getUserInfo(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:36:50,970 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/symbols],methods=[POST]}" onto public java.util.Map net.cyweb.controller.FontController.symbols()
2019/10/04 14:36:50,971 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/login],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.login(java.util.Map<java.lang.String, java.lang.String>,javax.servlet.http.HttpServletRequest)
2019/10/04 14:36:50,971 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getLegalCurrencys],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getCoins()
2019/10/04 14:36:50,971 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/resetPwd],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.resetPwd(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:36:50,972 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/registerByEmail],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.registerByEmail(java.util.Map<java.lang.String, java.lang.String>,javax.servlet.http.HttpServletRequest)
2019/10/04 14:36:50,972 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/checkAccount],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.checkAccount(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:36:50,972 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/checkVerifyCode],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.checkVerifyCode(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:36:50,972 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/changePwd],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.changePwd(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:36:50,973 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/createOrder],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.createOrder(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:36:50,973 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/registerByPhone],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.registerByPhone(java.util.Map<java.lang.String, java.lang.String>,javax.servlet.http.HttpServletRequest)
2019/10/04 14:36:50,973 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getNationality],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getNationality()
2019/10/04 14:36:50,974 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/sendEmailCodes],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.sendEmailCodes(java.util.Map<java.lang.String, java.lang.String>,javax.servlet.http.HttpServletRequest)
2019/10/04 14:36:50,974 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/loginNeedGoogle],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.loginNeedGoogle(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:36:50,974 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/sendPhoneCodes],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.mseSend(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:36:50,975 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/buyCoins],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.buyCoins(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:36:50,975 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/findMemberPwd],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.findMemberPwd(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:36:50,975 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getArticleList],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getArticleList(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:36:50,975 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/orderTraderMod],methods=[POST]}" onto public void net.cyweb.controller.FontController.orderTraderMod()
2019/10/04 14:36:50,976 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getDepositRecord],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getDepositRecord(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:36:50,976 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getAllCoins],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getAllCoins()
2019/10/04 14:36:50,976 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getIncreaseList],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getIncreaseList()
2019/10/04 14:36:50,976 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/withdrawListReq],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.withdrawListReq(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:36:50,977 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/depositNotifyReq],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.depositNotifyReq(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:36:50,977 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/delMongodb],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.delMongodb(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:36:50,977 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getGoogle],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getGoogle(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:36:50,978 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/checkCardOnly],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.checkCardOnly(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:36:50,978 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/verifyGoogleCode],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.verifyGoogleCode(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:36:50,978 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/addWorkOrder],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.addWorkOrder(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:36:50,978 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getSelfCurrencys],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getSelfCurrencys(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:36:50,979 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/history],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.klineData(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:36:50,979 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/isHasEnoughBM],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.isHasEnoughBM(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:36:50,979 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/addSelfCurrencys],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.addSelfCurrencys(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:36:50,979 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getFlash],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getFlash(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:36:50,980 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/setFiatMoneyPwd],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.setFiatMoneyPwd(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:36:50,980 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/findFiatMoneyPwd],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.findFiatMoneyPwd(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:36:50,980 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/kCurrencyInfo],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.kCurrencyInfo(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:36:50,980 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/withdrawRequest],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.withdrawRequest(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:36:50,981 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/cancelOrder],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.cancelOrder(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:36:50,981 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/deleteBankInfo],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.deleteBankInfo(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:36:50,981 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/googleCancle],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.googleCancle(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:36:50,982 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/updateGoogle],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.googleUpdate(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:36:50,982 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getCurrencyListChange],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getCurrencyListChange(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:36:50,982 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getTradeCurrencyInfos],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getTradeCurrencyInfos()
2019/10/04 14:36:50,982 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/sendVerificationCode],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.sendVerificationCode(java.util.Map<java.lang.String, java.lang.String>,javax.servlet.http.HttpServletRequest)
2019/10/04 14:36:50,983 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/findBanksInfoByUser],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.findBanksInfoByUser(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:36:50,983 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/primaryCertification],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.primaryCertification(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:36:50,983 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/addDepositAddress],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.addDepositAddress(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:36:50,984 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/withdrawNotifyReq],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.withdrawNotifyReq(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:36:50,984 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getUserOrderFiveRecordBuy],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getUserOrderFiveRecordBuy(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:36:50,984 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/findWorkOrderById],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.findWorkOrderById(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:36:50,984 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getUpCurrencyInfos],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getUpCurrencyInfos()
2019/10/04 14:36:50,985 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getNewCurrenciesList],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getNewCurrenciesList()
2019/10/04 14:36:50,985 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/acceptancesOrderRelease],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.acceptancesOrderRelease(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:36:50,985 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getHistoryOrdersByMemberId],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getHistoryOrdersByMemberId(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:36:50,986 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getUserOrderFiveRecordSell],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getUserOrderFiveRecordSell(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:36:50,986 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/findOldWorkOrders],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.findOldWorkOrders(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:36:50,986 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/findC2COrdersByAcceptances],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.findC2COrdersByAcceptances(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:36:50,986 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/checkAccountIsOnly],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.checkAccountIsOnly(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:36:50,987 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/saveBankInfoByUser],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.saveBankInfoByUser(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:36:50,987 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getArticleByArticleId],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getArticleByArticleId(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:36:50,987 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/creatAcceptancesOrder],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.creatAcceptancesOrder(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:36:50,987 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/updateAcceptancesPicInfo],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.updateAcceptancesPicInfo(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:36:50,988 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/updateFiatMoneyPwd],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.updateFiatMoneyPwd(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:36:50,988 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/findMembersOrdersByMemberId],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.findMembersOrdersByMemberId(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:36:50,988 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/addGoogleSecretAndQR],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.addGoogleSecretAndQR(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:36:50,989 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/updateAcceptancesIsReady],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.updateAcceptancesIsReady(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:36:50,989 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getC2CGuaByCurrencyId],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getC2CGuaByCurrencyId(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:36:50,989 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getOrdersByMemberId],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getOrdersByMemberId(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:36:50,989 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/deletAcceptancesById],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.deletAcceptancesById(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:36:50,990 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getTradeCurrencys],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getTradeCurrencys()
2019/10/04 14:36:50,990 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/cancleAcceptancesSellOrder],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.cancleAcceptancesSellOrder(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:36:50,990 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/cancleAcceptancesBuyOrder],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.cancleAcceptancesBuyOrder(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:36:50,990 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/saveAcceptancesBaseInfo],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.saveAcceptancesBaseInfo(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:36:50,991 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/findMembersOrdersByAcceptances],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.findMembersOrdersByAcceptances(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:36:50,991 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getCurrencyInfoById],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getCurrencyInfoById(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:36:50,991 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getCurrencyProfile],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getCurrencyProfile(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:36:50,991 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getWithdrawRecordByCurrencyId],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getWithdrawRecordByCurrencyId(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:36:50,995 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/getCurrency],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.getCurrency(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019/10/04 14:36:50,996 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/getCategory],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.getCategory(java.lang.String)
2019/10/04 14:36:50,996 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/getConfig],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.getConfig(java.lang.String)
2019/10/04 14:36:50,996 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/getTradeData]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.getTradeData(java.lang.String,java.lang.String)
2019/10/04 14:36:50,996 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/getUserTradeData]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.getUserTradeData(java.lang.String,java.lang.String,int,int)
2019/10/04 14:36:50,996 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/uploadByUser],methods=[POST],consumes=[multipart/form-data]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.uploadByUser(org.springframework.web.multipart.MultipartFile)
2019/10/04 14:36:50,997 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/getArticleList],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.getArticleList(java.lang.String,java.lang.String,java.lang.String,int,int)
2019/10/04 14:36:50,997 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/getFlash]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.getFlash(java.lang.String,java.lang.String)
2019/10/04 14:36:50,997 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/addTimeLine],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.addTimeLine(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019/10/04 14:36:50,997 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/currencyFindList],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.currencyFindList(java.lang.String,java.lang.String,java.lang.String)
2019/10/04 14:36:50,998 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/currencyFindAdd],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.currencyFindAdd(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019/10/04 14:36:50,998 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/getArticleDetail],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.getArticleDetail(java.lang.String,java.lang.String,java.lang.String)
2019/10/04 14:36:50,999 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/getCurrencyPair],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.getCurrencyPair(java.lang.String,java.lang.String)
2019/10/04 14:36:50,999 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/getArea],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.getArea(java.lang.String)
2019/10/04 14:36:50,999 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/searchTrade],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.searchTrade(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019/10/04 14:36:50,999 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/readImage]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.readImage(java.lang.String)
2019/10/04 14:36:51,000 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/getTimeLine],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.getTimeLine(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019/10/04 14:36:51,000 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/getTradeFee],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.getTradeFee(java.lang.String,java.lang.String)
2019/10/04 14:36:51,000 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/initWeb]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.initWeb(java.lang.String,java.lang.String,java.lang.String)
2019/10/04 14:36:51,000 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/upload],methods=[POST],consumes=[multipart/form-data]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.upload(org.springframework.web.multipart.MultipartFile)
2019/10/04 14:36:51,000 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/getCurrencyListChange],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.getCurrencyListChange(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019/10/04 14:36:51,001 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/addQianbaoAddress],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.addQianbaoAddress(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019/10/04 14:36:51,001 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/getCurrencyDetailChange],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.getCurrencyDetailChange(java.lang.String,java.lang.String,java.lang.String)
2019/10/04 14:36:51,001 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/getCurrencyPairOrder],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.getCurrencyPairOrder(java.lang.String,java.lang.String)
2019/10/04 14:36:51,001 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/getCurrencyPairTrade],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.getCurrencyPairTrade(java.lang.String)
2019/10/04 14:36:51,002 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/getQianbaoAddress],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.getQianbaoAddress(java.lang.String,java.lang.String,java.lang.String)
2019/10/04 14:36:51,002 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/delQianbaoAddress],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.delQianbaoAddress(java.lang.String,java.lang.String)
2019/10/04 14:36:51,003 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontTrade/c2cOrdersSell],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontTradeController.c2cOrdersSell(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:36:51,003 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontTrade/cancelBuy],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontTradeController.cancelBuy(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:36:51,003 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontTrade/getC2COrderList],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontTradeController.getC2COrderList(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:36:51,004 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontTrade/getC2COrder],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontTradeController.getC2COrder(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:36:51,004 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontTrade/c2cOrdersBuy],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontTradeController.c2cOrdersBuy(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:36:51,004 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontTrade/confirmBuy],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontTradeController.confirmBuy(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:36:51,004 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontTrade/getGuaList],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontTradeController.getGuaList(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:36:51,005 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontTrade/c2cAssetChange],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontTradeController.c2cAssetChange(java.util.Map<java.lang.String, java.lang.String>,org.apache.catalina.servlet4preview.http.HttpServletRequest)
2019/10/04 14:36:51,005 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontTrade/cancleBuy],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontTradeController.cancleBuy(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:36:51,005 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontTrade/getGua],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontTradeController.getGua(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:36:51,006 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontTrade/findBanksInfoByUser],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontTradeController.findBanksInfoByUser(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:36:51,007 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontUser/getLog],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontUserController.getLog(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019/10/04 14:36:51,007 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontUser/getGoogle],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontUserController.getGoogle(java.lang.String)
2019/10/04 14:36:51,007 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontUser/googleCancle],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontUserController.googleCancle(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019/10/04 14:36:51,008 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontUser/googleUpdate],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontUserController.googleUpdate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019/10/04 14:36:51,008 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontUser/getFtLockRecordSum],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontUserController.getFtLockRecordSum(java.lang.String)
2019/10/04 14:36:51,008 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontUser/getFuntNum],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontUserController.getFuntNum(java.lang.String)
2019/10/04 14:36:51,008 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontUser/searchOrder],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontUserController.searchOrder(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019/10/04 14:36:51,008 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontUser/getCardOrder],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontUserController.getCardOrder(java.lang.String,java.lang.String,java.lang.String)
2019/10/04 14:36:51,009 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontUser/getFtLockRecord],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontUserController.getFtLockRecord(java.lang.String,java.lang.String,java.lang.String)
2019/10/04 14:36:51,009 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontUser/getCardLock],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontUserController.getCardLock(java.lang.String,java.lang.String,java.lang.String)
2019/10/04 14:36:51,009 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontUser/loginRecord]}" onto public net.cyweb.model.Result net.cyweb.controller.FontUserController.loginRecord(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019/10/04 14:36:51,012 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontUser/addLog],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontUserController.addLog(java.lang.String,java.lang.String,java.lang.String)
2019/10/04 14:36:51,012 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontUser/applyCoin],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontUserController.applyCoin(net.cyweb.model.YangCoinList,java.lang.String)
2019/10/04 14:36:51,013 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontUser/getTibiOutList],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontUserController.getTibiOutList(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019/10/04 14:36:51,013 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontUser/googleBind],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontUserController.googleBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019/10/04 14:36:51,013 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontUser/addTibiOut],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontUserController.addTibiOut(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019/10/04 14:36:51,014 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/member/list],methods=[GET]}" onto public net.cyweb.model.Result net.cyweb.controller.FunMemberController.list()
2019/10/04 14:36:51,014 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/member/getmember],methods=[GET]}" onto public net.cyweb.model.Result net.cyweb.controller.FunMemberController.getMember(java.lang.Integer)
2019/10/04 14:36:51,014 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/member/flushCurrencyFlash],methods=[GET]}" onto public net.cyweb.model.Result net.cyweb.controller.FunMemberController.flushCurrencyFlash(java.lang.String,java.lang.String)
2019/10/04 14:36:51,015 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/member/createMemberCurrency],methods=[GET]}" onto public net.cyweb.model.Result net.cyweb.controller.FunMemberController.createMemberCurrency(java.lang.Integer,java.lang.Integer,java.lang.String)
2019/10/04 14:36:51,015 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/member/getMemberCurrencyList],methods=[GET]}" onto public net.cyweb.model.Result net.cyweb.controller.FunMemberController.getMemberCurrencyList(java.lang.Integer)
2019/10/04 14:36:51,015 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/member/getMemberCurrency],methods=[GET]}" onto public net.cyweb.model.Result net.cyweb.controller.FunMemberController.getMemberCurrency(java.lang.Integer,java.lang.Integer)
2019/10/04 14:36:51,015 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/member/chongzhi],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FunMemberController.chongzhi(net.cyweb.model.YangTibi)
2019/10/04 14:36:51,015 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/member/xssTest],methods=[GET]}" onto public java.lang.String net.cyweb.controller.FunMemberController.xssTest(java.lang.String)
2019/10/04 14:36:51,016 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/member/finishConfirm],methods=[POST],consumes=[application/json]}" onto public net.cyweb.model.Result net.cyweb.controller.FunMemberController.finishConfirm(java.math.BigInteger,java.lang.String,java.lang.String,int)
2019/10/04 14:36:51,016 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/member/confirm],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FunMemberController.confirm(java.math.BigInteger,java.lang.String,int)
2019/10/04 14:36:51,016 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/test/testSocket]}" onto public void net.cyweb.controller.testCoinController.test1() throws java.lang.Exception
2019/10/04 14:36:51,017 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/trade/getToken],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.TradeApiController.getToken(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:36:51,017 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/trade/mountOrder],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.TradeApiController.mountOrder(net.cyweb.model.YangOrders,org.springframework.validation.BindingResult)
2019/10/04 14:36:51,018 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/trade/delMongodb],methods=[GET]}" onto public net.cyweb.model.Result net.cyweb.controller.TradeApiController.delMongodb(java.lang.String)
2019/10/04 14:36:51,018 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/trade/klineData],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.TradeApiController.klineData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019/10/04 14:36:51,018 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/trade/cancelOrder],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.TradeApiController.cancelOrder(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:36:51,018 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/trade/getFontTradeLastTime],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.TradeApiController.getFontTradeLstTime(java.lang.String,java.lang.String)
2019/10/04 14:36:51,018 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/trade/flushCurrencyPair],methods=[POST]}" onto public boolean net.cyweb.controller.TradeApiController.flushCurrencyPair(int)
2019/10/04 14:36:51,019 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/trade/getUserOrderRecord],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.TradeApiController.getUserOrderFiveRecord(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:36:51,019 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/trade/getUserTradeRecord],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.TradeApiController.getUserTradeFiveRecord(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:36:51,019 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/trade/getCurrencyInfo],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.TradeApiController.getCurrencyInfo(java.lang.String)
2019/10/04 14:36:51,019 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/trade/createorder],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.TradeApiController.createorder(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:36:51,020 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/trade/klineDataApi],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.TradeApiController.klineDataApi(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019/10/04 14:36:51,020 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/trade/klineDataTest],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.TradeApiController.klineDataTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019/10/04 14:36:51,021 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019/10/04 14:36:51,022 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019/10/04 14:36:51,023 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019/10/04 14:36:51,024 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019/10/04 14:36:51,026 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019/10/04 14:36:51,026 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019/10/04 14:36:51,755 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2019/10/04 14:36:51,756 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2019/10/04 14:36:51,756 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 14:36:51,757 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 14:36:51,757 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2019/10/04 14:36:51,757 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 14:36:51,758 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 14:36:51,758 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2019/10/04 14:36:51,758 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2019/10/04 14:36:51,759 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 14:36:51,760 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 14:36:51,761 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2019/10/04 14:36:51,761 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2019/10/04 14:36:51,761 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2019/10/04 14:36:51,762 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2019/10/04 14:36:51,762 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 14:36:51,762 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 14:36:51,762 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2019/10/04 14:36:51,763 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 14:36:51,763 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 14:36:51,763 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2019/10/04 14:36:51,764 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:36:51,764 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2019/10/04 14:36:51,764 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2019/10/04 14:36:51,764 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 14:36:51,765 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 14:36:51,765 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 14:36:51,992 INFO   main                  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize(ExecutorConfigurationSupport.java:165) - Initializing ExecutorService  'clientInboundChannelExecutor'
2019/10/04 14:36:52,011 INFO   main                  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize(ExecutorConfigurationSupport.java:165) - Initializing ExecutorService  'clientOutboundChannelExecutor'
2019/10/04 14:36:52,069 INFO   main                  org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler.initialize(ExecutorConfigurationSupport.java:165) - Initializing ExecutorService  'messageBrokerTaskScheduler'
2019/10/04 14:36:52,134 INFO   main                  org.springframework.web.socket.server.support.WebSocketHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/endpointWisely/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019/10/04 14:36:52,144 INFO   main                  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize(ExecutorConfigurationSupport.java:165) - Initializing ExecutorService  'brokerChannelExecutor'
2019/10/04 14:36:52,343 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@df5f5c0: startup date [Fri Oct 04 14:36:44 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3932c79a
2019/10/04 14:36:52,390 INFO   main                  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019/10/04 14:36:52,390 INFO   main                  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019/10/04 14:36:52,437 INFO   main                  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019/10/04 14:36:53,664 INFO   main                  org.springframework.boot.autoconfigure.security.AuthenticationManagerConfiguration.configure(AuthenticationManagerConfiguration.java:173) - 

Using default security password: 213caca6-378a-4617-9cff-7aa95772632f

2019/10/04 14:36:53,707 INFO   main                  org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43) - Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
2019/10/04 14:36:53,789 INFO   main                  org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43) - Creating filter chain: org.springframework.boot.actuate.autoconfigure.ManagementWebSecurityAutoConfiguration$LazyEndpointPathRequestMatcher@9771c71, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@63c66980, org.springframework.security.web.context.SecurityContextPersistenceFilter@4bc39640, org.springframework.security.web.header.HeaderWriterFilter@5f596a1a, org.springframework.web.filter.CorsFilter@8cce9ad, org.springframework.security.web.authentication.logout.LogoutFilter@75f446df, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@397f925e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1659d7d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@c8ed958, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6dc5e857, org.springframework.security.web.session.SessionManagementFilter@2d4f1ddd, org.springframework.security.web.access.ExceptionTranslationFilter@85eba52, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@684bfba9]
2019/10/04 14:36:53,799 INFO   main                  org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43) - Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@5e8a678a, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6fe91918, org.springframework.security.web.context.SecurityContextPersistenceFilter@64745270, org.springframework.security.web.header.HeaderWriterFilter@2389f546, org.springframework.security.web.csrf.CsrfFilter@22657db1, org.springframework.security.web.authentication.logout.LogoutFilter@18ab513d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@596d17f4, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@35a2ea5a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4d3bde85, org.springframework.security.web.session.SessionManagementFilter@5b6ec94a, org.springframework.security.web.access.ExceptionTranslationFilter@630bd5e7]
2019/10/04 14:36:54,435 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.afterSingletonsInstantiated(MBeanExporter.java:431) - Registering beans for JMX exposure on startup
2019/10/04 14:36:54,436 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'dataSource' has been autodetected for JMX exposure
2019/10/04 14:36:54,443 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'environmentManager' has been autodetected for JMX exposure
2019/10/04 14:36:54,445 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2019/10/04 14:36:54,445 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2019/10/04 14:36:54,445 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'restartEndpoint' has been autodetected for JMX exposure
2019/10/04 14:36:54,446 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2019/10/04 14:36:54,446 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'refreshScope' has been autodetected for JMX exposure
2019/10/04 14:36:54,448 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2019/10/04 14:36:54,457 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
2019/10/04 14:36:54,464 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2019/10/04 14:36:54,468 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2019/10/04 14:36:54,476 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=df5f5c0,type=ConfigurationPropertiesRebinder]
2019/10/04 14:36:54,480 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:671) - Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019/10/04 14:36:54,481 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2019/10/04 14:36:54,482 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.afterSingletonsInstantiated(MBeanExporter.java:431) - Registering beans for JMX exposure on startup
2019/10/04 14:36:54,797 INFO   main                  org.springframework.context.support.DefaultLifecycleProcessor.start(DefaultLifecycleProcessor.java:343) - Starting beans in phase 0
2019/10/04 14:36:54,813 INFO   main                  org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(InstanceInfoFactory.java:70) - Setting initial instance status as: STARTING
2019/10/04 14:36:54,865 INFO   main                  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:40) - Registering application javaApi with eureka with status UP
2019/10/04 14:36:54,869 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2019/10/04 14:36:54,874 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
2019/10/04 14:36:54,879 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2019/10/04 14:36:54,881 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2019/10/04 14:36:54,883 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2019/10/04 14:36:54,885 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2019/10/04 14:36:54,887 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2019/10/04 14:36:54,889 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2019/10/04 14:36:54,893 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2019/10/04 14:36:54,896 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2019/10/04 14:36:54,898 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2019/10/04 14:36:54,900 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2019/10/04 14:36:54,901 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2019/10/04 14:36:54,903 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
2019/10/04 14:36:54,904 INFO   main                  org.springframework.context.support.DefaultLifecycleProcessor.start(DefaultLifecycleProcessor.java:343) - Starting beans in phase 2147483647
2019/10/04 14:36:54,904 INFO   main                  org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler.start(AbstractBrokerMessageHandler.java:157) - Starting...
2019/10/04 14:36:54,904 INFO   main                  org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler.publishBrokerAvailableEvent(AbstractBrokerMessageHandler.java:260) - BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019/10/04 14:36:54,905 INFO   main                  org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler.start(AbstractBrokerMessageHandler.java:166) - Started.
2019/10/04 14:36:54,942 INFO   main                  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.onApplicationEvent(DocumentationPluginsBootstrapper.java:84) - Context refreshed
2019/10/04 14:36:54,955 INFO   main                  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.onApplicationEvent(DocumentationPluginsBootstrapper.java:87) - Found 1 custom documentation plugin(s)
2019/10/04 14:36:54,964 INFO   main                  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:44) - Scanning for api listing references
2019/10/04 14:36:55,192 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,193 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,197 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,197 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,198 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,198 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,198 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,198 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,782 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,783 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,783 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,783 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,785 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,785 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,785 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,785 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,786 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,786 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,787 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,787 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,788 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,788 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,788 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,790 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,790 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,791 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,792 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,792 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,792 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,794 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,794 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,794 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,794 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,794 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,795 INFO   main                  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40) - Generating unique operation named: getArticleListUsingPOST_1
2019/10/04 14:36:55,797 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,798 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,798 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,798 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,798 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,800 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,800 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,800 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,801 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,801 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,801 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,801 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,802 INFO   main                  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40) - Generating unique operation named: getCurrencyListChangeUsingPOST_1
2019/10/04 14:36:55,803 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,803 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,805 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,805 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,806 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,807 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,807 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,808 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,808 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,809 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,809 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,809 INFO   main                  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40) - Generating unique operation named: getFlashUsingPOST_1
2019/10/04 14:36:55,810 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,810 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,811 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,811 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,812 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,812 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,813 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,813 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,814 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,814 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,815 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,816 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,816 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,817 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,817 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,817 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,817 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,818 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,819 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,819 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,820 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,820 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,821 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,821 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,822 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,822 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,822 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,823 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,823 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,824 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,824 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,825 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,825 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,827 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,827 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,828 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,828 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,829 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,829 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,830 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,830 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,831 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,831 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,832 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,832 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,833 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,833 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,834 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,834 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,835 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,835 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,836 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,837 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,837 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,838 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,838 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,838 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,839 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,839 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,839 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,840 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,840 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,840 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,841 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,841 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,841 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,842 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,842 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,842 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,842 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,843 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,843 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,843 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,843 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,843 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,845 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,845 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,846 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,847 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,848 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,848 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,849 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,850 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,851 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,851 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,851 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,851 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,851 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,851 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,851 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,852 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,863 INFO   main                  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40) - Generating unique operation named: findBanksInfoByUserUsingPOST_1
2019/10/04 14:36:55,870 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,870 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,870 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,871 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,871 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,871 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,871 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,872 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,872 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,872 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,872 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,873 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,873 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,873 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,873 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,874 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,875 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,875 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,875 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,875 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,875 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,875 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,875 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,875 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,875 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,875 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,875 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,875 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,875 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,875 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,876 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,876 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,876 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,876 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,876 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,876 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,876 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,876 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,876 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,877 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,878 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,878 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,879 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,879 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,879 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,880 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,880 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,880 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,881 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,882 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,882 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,883 INFO   main                  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40) - Generating unique operation named: getGoogleUsingPOST_1
2019/10/04 14:36:55,883 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,884 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,884 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,884 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,885 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,885 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,885 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,886 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,886 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,886 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,886 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,886 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,886 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,887 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,887 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,888 INFO   main                  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40) - Generating unique operation named: googleCancleUsingPOST_1
2019/10/04 14:36:55,888 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,889 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,889 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,889 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,889 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,889 INFO   main                  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40) - Generating unique operation named: googleUpdateUsingPOST_1
2019/10/04 14:36:55,890 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,890 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,890 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,890 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,890 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,891 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,891 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,891 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,891 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,891 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,892 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,892 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,892 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,892 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,892 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,893 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,893 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,893 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,893 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,893 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,894 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,894 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,894 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,894 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,894 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,895 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,895 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,895 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,895 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,895 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,896 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,896 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,897 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,897 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,897 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,897 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,897 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,897 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,898 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,898 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,899 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,899 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,899 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,899 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,899 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,899 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,899 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,899 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,904 INFO   main                  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40) - Generating unique operation named: cancelOrderUsingPOST_1
2019/10/04 14:36:55,906 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,909 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,909 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,914 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,914 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,914 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,914 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,914 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,915 INFO   main                  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40) - Generating unique operation named: klineDataUsingPOST_1
2019/10/04 14:36:55,916 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,916 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,916 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,916 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,916 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,917 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,917 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,918 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,918 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,918 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,919 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 14:36:55,965 INFO   main                  org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.start(TomcatEmbeddedServletContainer.java:201) - Tomcat started on port(s): 8009 (http)
2019/10/04 14:36:55,965 INFO   main                  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:117) - Updating port to 8009
2019/10/04 14:36:55,970 INFO   main                  net.cyweb.javaapi.logStarted(StartupInfoLogger.java:57) - Started javaapi in 12.702 seconds (JVM running for 13.469)
2019/10/04 14:37:06,089 INFO   http-nio-8009-exec-1  org.springframework.web.servlet.DispatcherServlet.initServletBean(FrameworkServlet.java:489) - FrameworkServlet 'dispatcherServlet': initialization started
2019/10/04 14:37:06,107 INFO   http-nio-8009-exec-1  org.springframework.web.servlet.DispatcherServlet.initServletBean(FrameworkServlet.java:508) - FrameworkServlet 'dispatcherServlet': initialization completed in 18 ms
2019/10/04 14:37:52,143 INFO   MessageBroker-2       org.springframework.web.socket.config.WebSocketMessageBrokerStats.run(WebSocketMessageBrokerStats.java:113) - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 6, active threads = 1, queued tasks = 3, completed tasks = 6]
2019/10/04 14:40:09,732 WARN   http-nio-8009-exec-6  org.springframework.web.servlet.PageNotFound.handleHttpRequestMethodNotSupported(DefaultHandlerExceptionResolver.java:215) - Request method 'GET' not supported
2019/10/04 14:40:21,385 WARN   http-nio-8009-exec-10 org.springframework.web.servlet.PageNotFound.handleHttpRequestMethodNotSupported(DefaultHandlerExceptionResolver.java:215) - Request method 'GET' not supported
2019/10/04 15:07:52,143 INFO   MessageBroker-3       org.springframework.web.socket.config.WebSocketMessageBrokerStats.run(WebSocketMessageBrokerStats.java:113) - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 6, active threads = 1, queued tasks = 3, completed tasks = 179]
2019/10/04 15:27:03,518 INFO   http-nio-8009-exec-2  org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:317) - Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2019/10/04 15:27:03,613 INFO   http-nio-8009-exec-2  org.springframework.jdbc.support.SQLErrorCodesFactory.<init>(SQLErrorCodesFactory.java:127) - SQLErrorCodes loaded: [DB2, Derby, H2, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase, Hana]
2019/10/04 15:27:05,802 ERROR  http-nio-8009-exec-8  org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/].[dispatcherServlet].log(DirectJDKLog.java:182) - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'a.is_show_first_desk' in 'where clause'
### The error may exist in file [D:\center_new\front-services\javaapi\target\classes\mapper\YangCurrencyPairMapper.xml]
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: select * from yang_currency_pair a          WHERE a.is_show_first_desk='1'
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'a.is_show_first_desk' in 'where clause'
; bad SQL grammar []; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'a.is_show_first_desk' in 'where clause'] with root cause
com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'a.is_show_first_desk' in 'where clause'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[?:1.8.0_25]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[?:1.8.0_25]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[?:1.8.0_25]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:408) ~[?:1.8.0_25]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.Util.getInstance(Util.java:408) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3973) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3909) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2527) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2680) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2484) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197) ~[mysql-connector-java-5.1.45.jar:5.1.45]
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493) ~[druid-1.0.18.jar:1.0.18]
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63) ~[mybatis-3.4.0.jar:3.4.0]
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79) ~[mybatis-3.4.0.jar:3.4.0]
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63) ~[mybatis-3.4.0.jar:3.4.0]
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:325) ~[mybatis-3.4.0.jar:3.4.0]
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156) ~[mybatis-3.4.0.jar:3.4.0]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109) ~[mybatis-3.4.0.jar:3.4.0]
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:143) ~[pagehelper-5.1.2.jar:?]
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61) ~[mybatis-3.4.0.jar:3.4.0]
	at com.sun.proxy.$Proxy242.query(Unknown Source) ~[?:?]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148) ~[mybatis-3.4.0.jar:3.4.0]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141) ~[mybatis-3.4.0.jar:3.4.0]
	at sun.reflect.GeneratedMethodAccessor174.invoke(Unknown Source) ~[?:?]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_25]
	at java.lang.reflect.Method.invoke(Method.java:483) ~[?:1.8.0_25]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434) ~[mybatis-spring-1.3.0.jar:1.3.0]
	at com.sun.proxy.$Proxy135.selectList(Unknown Source) ~[?:?]
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231) ~[mybatis-spring-1.3.0.jar:1.3.0]
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:128) ~[mybatis-3.4.0.jar:3.4.0]
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:68) ~[mybatis-3.4.0.jar:3.4.0]
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:53) ~[mybatis-3.4.0.jar:3.4.0]
	at com.sun.proxy.$Proxy185.getYangCurrencyPairList(Unknown Source) ~[?:?]
	at net.cyweb.service.YangCurrencyPairService.getIncreaseList(YangCurrencyPairService.java:830) ~[classes/:?]
	at net.cyweb.controller.FontController.getIncreaseList(FontController.java:906) ~[classes/:?]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:1.8.0_25]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[?:1.8.0_25]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:1.8.0_25]
	at java.lang.reflect.Method.invoke(Method.java:483) ~[?:1.8.0_25]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:205) ~[spring-web-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:133) ~[spring-web-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:97) ~[spring-webmvc-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827) ~[spring-webmvc-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738) ~[spring-webmvc-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85) ~[spring-webmvc-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967) ~[spring-webmvc-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901) ~[spring-webmvc-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970) ~[spring-webmvc-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:872) ~[spring-webmvc-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661) ~[tomcat-embed-core-8.5.27.jar:8.5.27]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846) ~[spring-webmvc-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742) ~[tomcat-embed-core-8.5.27.jar:8.5.27]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-8.5.27.jar:8.5.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-8.5.27.jar:8.5.27]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) ~[tomcat-embed-websocket-8.5.27.jar:8.5.27]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-8.5.27.jar:8.5.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-8.5.27.jar:8.5.27]
	at org.springframework.boot.web.filter.ApplicationContextHeaderFilter.doFilterInternal(ApplicationContextHeaderFilter.java:55) ~[spring-boot-1.5.10.RELEASE.jar:1.5.10.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-8.5.27.jar:8.5.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-8.5.27.jar:8.5.27]
	at net.cyweb.config.custom.CORSFilter.doFilter(CORSFilter.java:24) ~[classes/:?]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-8.5.27.jar:8.5.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-8.5.27.jar:8.5.27]
	at org.springframework.boot.actuate.trace.WebRequestTraceFilter.doFilterInternal(WebRequestTraceFilter.java:110) ~[spring-boot-actuator-1.5.10.RELEASE.jar:1.5.10.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-8.5.27.jar:8.5.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-8.5.27.jar:8.5.27]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:208) ~[spring-security-web-4.2.4.RELEASE.jar:4.2.4.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:177) ~[spring-security-web-4.2.4.RELEASE.jar:4.2.4.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:347) ~[spring-web-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:263) ~[spring-web-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-8.5.27.jar:8.5.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-8.5.27.jar:8.5.27]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) ~[spring-web-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-8.5.27.jar:8.5.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-8.5.27.jar:8.5.27]
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:108) ~[spring-web-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-8.5.27.jar:8.5.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-8.5.27.jar:8.5.27]
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81) ~[spring-web-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-8.5.27.jar:8.5.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-8.5.27.jar:8.5.27]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:197) ~[spring-web-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-8.5.27.jar:8.5.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-8.5.27.jar:8.5.27]
	at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:106) ~[spring-boot-actuator-1.5.10.RELEASE.jar:1.5.10.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-4.3.14.RELEASE.jar:4.3.14.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-8.5.27.jar:8.5.27]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-8.5.27.jar:8.5.27]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199) [tomcat-embed-core-8.5.27.jar:8.5.27]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-8.5.27.jar:8.5.27]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:504) [tomcat-embed-core-8.5.27.jar:8.5.27]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140) [tomcat-embed-core-8.5.27.jar:8.5.27]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81) [tomcat-embed-core-8.5.27.jar:8.5.27]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) [tomcat-embed-core-8.5.27.jar:8.5.27]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342) [tomcat-embed-core-8.5.27.jar:8.5.27]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803) [tomcat-embed-core-8.5.27.jar:8.5.27]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-8.5.27.jar:8.5.27]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790) [tomcat-embed-core-8.5.27.jar:8.5.27]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459) [tomcat-embed-core-8.5.27.jar:8.5.27]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-8.5.27.jar:8.5.27]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [?:1.8.0_25]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [?:1.8.0_25]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-8.5.27.jar:8.5.27]
	at java.lang.Thread.run(Thread.java:745) [?:1.8.0_25]
2019/10/04 15:29:04,412 INFO   main                  net.cyweb.javaapi.logStartupProfileInfo(SpringApplication.java:597) - The following profiles are active: dev
2019/10/04 15:29:04,429 INFO   main                  org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext.prepareRefresh(AbstractApplicationContext.java:583) - Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@df5f5c0: startup date [Fri Oct 04 15:29:04 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3932c79a
2019/10/04 15:29:05,230 INFO   main                  org.springframework.beans.factory.support.DefaultListableBeanFactory.registerBeanDefinition(DefaultListableBeanFactory.java:828) - Overriding bean definition for bean 'mongoSettingsProperties' with a different definition: replacing [Generic bean: class [net.cyweb.config.custom.MongoSettingsProperties]; scope=singleton; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null; defined in file [D:\center_new\front-services\javaapi\target\classes\net\cyweb\config\custom\MongoSettingsProperties.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=mongoConfig; factoryMethodName=mongoSettingsProperties; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [net/cyweb/config/custom/MongoConfig.class]]
2019/10/04 15:29:05,436 INFO   main                  org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:165) - Multiple Spring Data modules found, entering strict repository configuration mode!
2019/10/04 15:29:05,517 INFO   main                  org.springframework.data.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected(RepositoryConfigurationDelegate.java:165) - Multiple Spring Data modules found, entering strict repository configuration mode!
2019/10/04 15:29:05,901 INFO   main                  org.springframework.cloud.context.scope.GenericScope.setSerializationId(GenericScope.java:263) - BeanFactory id=46ed19e5-f08b-3b95-a37b-0c1390c0f0cf
2019/10/04 15:29:06,020 INFO   main                  org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.<init>(AutowiredAnnotationBeanPostProcessor.java:155) - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019/10/04 15:29:06,275 INFO   main                  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'redisConfig' of type [net.cyweb.config.custom.RedisConfig$$EnhancerBySpringCGLIB$$457f9654] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019/10/04 15:29:06,282 INFO   main                  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$24abb404] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019/10/04 15:29:06,311 INFO   main                  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$6dbdea22] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019/10/04 15:29:06,340 INFO   main                  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration' of type [org.springframework.cloud.netflix.metrics.MetricsInterceptorConfiguration$MetricsRestTemplateConfiguration$$EnhancerBySpringCGLIB$$56d85a45] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019/10/04 15:29:06,354 INFO   main                  org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization(PostProcessorRegistrationDelegate.java:327) - Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$40c5b701] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019/10/04 15:29:10,301 INFO   main                  org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.initialize(TomcatEmbeddedServletContainer.java:89) - Tomcat initialized with port(s): 8009 (http)
2019/10/04 15:29:10,430 INFO   localhost-startStop-1 org.springframework.web.context.ContextLoader.prepareEmbeddedWebApplicationContext(EmbeddedWebApplicationContext.java:276) - Root WebApplicationContext: initialization completed in 6001 ms
2019/10/04 15:29:10,854 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'metricsFilter' to: [/*]
2019/10/04 15:29:10,854 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'characterEncodingFilter' to: [/*]
2019/10/04 15:29:10,854 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019/10/04 15:29:10,854 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019/10/04 15:29:10,854 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'requestContextFilter' to: [/*]
2019/10/04 15:29:10,856 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.DelegatingFilterProxyRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'springSecurityFilterChain' to: [/*]
2019/10/04 15:29:10,856 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'webRequestLoggingFilter' to: [/*]
2019/10/04 15:29:10,856 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'CORSFilter' to: [/*]
2019/10/04 15:29:10,856 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.FilterRegistrationBean.configure(AbstractFilterRegistrationBean.java:258) - Mapping filter: 'applicationContextIdFilter' to: [/*]
2019/10/04 15:29:10,857 INFO   localhost-startStop-1 org.springframework.boot.web.servlet.ServletRegistrationBean.onStartup(ServletRegistrationBean.java:190) - Mapping servlet: 'dispatcherServlet' to [/]
2019/10/04 15:29:11,423 INFO   main                  com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:721) - {dataSource-1} inited
2019/10/04 15:29:12,847 INFO   main                  org.mongodb.driver.cluster.info(SLF4JLogger.java:71) - Cluster created with settings {hosts=[localhost:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=100}
2019/10/04 15:29:12,848 INFO   main                  org.mongodb.driver.cluster.info(SLF4JLogger.java:71) - Adding discovered server localhost:27017 to client view of cluster
2019/10/04 15:29:12,909 INFO   cluster-ClusterId{value='5d96f4c8dc6c600ed84c7d69', description='null'}-localhost:27017 org.mongodb.driver.connection.info(SLF4JLogger.java:71) - Opened connection [connectionId{localValue:2, serverValue:170}] to localhost:27017
2019/10/04 15:29:12,913 INFO   cluster-ClusterId{value='5d96f4c8dc6c600ed84c7d69', description='null'}-localhost:27017 org.mongodb.driver.cluster.info(SLF4JLogger.java:71) - Monitor thread successfully connected to server with description ServerDescription{address=localhost:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[4, 2, 0]}, minWireVersion=0, maxWireVersion=8, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=2262060}
2019/10/04 15:29:12,914 INFO   cluster-ClusterId{value='5d96f4c8dc6c600ed84c7d69', description='null'}-localhost:27017 org.mongodb.driver.cluster.info(SLF4JLogger.java:71) - Discovered cluster type of STANDALONE
2019/10/04 15:29:13,003 INFO   MaintenanceTimer-1-thread-1 org.mongodb.driver.connection.info(SLF4JLogger.java:71) - Opened connection [connectionId{localValue:1, serverValue:169}] to localhost:27017
2019/10/04 15:29:13,024 INFO   MaintenanceTimer-1-thread-1 org.mongodb.driver.connection.info(SLF4JLogger.java:71) - Opened connection [connectionId{localValue:3, serverValue:171}] to localhost:27017
2019/10/04 15:29:13,044 INFO   MaintenanceTimer-1-thread-1 org.mongodb.driver.connection.info(SLF4JLogger.java:71) - Opened connection [connectionId{localValue:4, serverValue:172}] to localhost:27017
2019/10/04 15:29:13,049 INFO   MaintenanceTimer-1-thread-1 org.mongodb.driver.connection.info(SLF4JLogger.java:71) - Opened connection [connectionId{localValue:5, serverValue:173}] to localhost:27017
2019/10/04 15:29:13,054 INFO   MaintenanceTimer-1-thread-1 org.mongodb.driver.connection.info(SLF4JLogger.java:71) - Opened connection [connectionId{localValue:6, serverValue:174}] to localhost:27017
2019/10/04 15:29:13,067 INFO   MaintenanceTimer-1-thread-1 org.mongodb.driver.connection.info(SLF4JLogger.java:71) - Opened connection [connectionId{localValue:7, serverValue:175}] to localhost:27017
2019/10/04 15:29:13,083 INFO   MaintenanceTimer-1-thread-1 org.mongodb.driver.connection.info(SLF4JLogger.java:71) - Opened connection [connectionId{localValue:8, serverValue:176}] to localhost:27017
2019/10/04 15:29:13,090 INFO   MaintenanceTimer-1-thread-1 org.mongodb.driver.connection.info(SLF4JLogger.java:71) - Opened connection [connectionId{localValue:9, serverValue:177}] to localhost:27017
2019/10/04 15:29:13,094 INFO   MaintenanceTimer-1-thread-1 org.mongodb.driver.connection.info(SLF4JLogger.java:71) - Opened connection [connectionId{localValue:10, serverValue:178}] to localhost:27017
2019/10/04 15:29:13,098 INFO   MaintenanceTimer-1-thread-1 org.mongodb.driver.connection.info(SLF4JLogger.java:71) - Opened connection [connectionId{localValue:11, serverValue:179}] to localhost:27017
2019/10/04 15:29:13,103 INFO   MaintenanceTimer-1-thread-1 org.mongodb.driver.connection.info(SLF4JLogger.java:71) - Opened connection [connectionId{localValue:12, serverValue:180}] to localhost:27017
2019/10/04 15:29:13,108 INFO   MaintenanceTimer-1-thread-1 org.mongodb.driver.connection.info(SLF4JLogger.java:71) - Opened connection [connectionId{localValue:13, serverValue:181}] to localhost:27017
2019/10/04 15:29:13,111 INFO   MaintenanceTimer-1-thread-1 org.mongodb.driver.connection.info(SLF4JLogger.java:71) - Opened connection [connectionId{localValue:14, serverValue:182}] to localhost:27017
2019/10/04 15:29:13,117 INFO   MaintenanceTimer-1-thread-1 org.mongodb.driver.connection.info(SLF4JLogger.java:71) - Opened connection [connectionId{localValue:15, serverValue:183}] to localhost:27017
2019/10/04 15:29:13,121 INFO   MaintenanceTimer-1-thread-1 org.mongodb.driver.connection.info(SLF4JLogger.java:71) - Opened connection [connectionId{localValue:16, serverValue:184}] to localhost:27017
2019/10/04 15:29:13,126 INFO   MaintenanceTimer-1-thread-1 org.mongodb.driver.connection.info(SLF4JLogger.java:71) - Opened connection [connectionId{localValue:17, serverValue:185}] to localhost:27017
2019/10/04 15:29:13,130 INFO   MaintenanceTimer-1-thread-1 org.mongodb.driver.connection.info(SLF4JLogger.java:71) - Opened connection [connectionId{localValue:18, serverValue:186}] to localhost:27017
2019/10/04 15:29:13,139 INFO   MaintenanceTimer-1-thread-1 org.mongodb.driver.connection.info(SLF4JLogger.java:71) - Opened connection [connectionId{localValue:19, serverValue:187}] to localhost:27017
2019/10/04 15:29:13,145 INFO   MaintenanceTimer-1-thread-1 org.mongodb.driver.connection.info(SLF4JLogger.java:71) - Opened connection [connectionId{localValue:20, serverValue:188}] to localhost:27017
2019/10/04 15:29:13,164 INFO   MaintenanceTimer-1-thread-1 org.mongodb.driver.connection.info(SLF4JLogger.java:71) - Opened connection [connectionId{localValue:21, serverValue:189}] to localhost:27017
2019/10/04 15:29:14,163 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/assets/bibiAsset],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.AssetsApiController.bibiAsset(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 15:29:14,164 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/assets/fabiAsset],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.AssetsApiController.fabiAsset(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 15:29:14,164 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/assets/specAssets],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.AssetsApiController.specAssets(net.cyweb.model.YangMemberToken,net.cyweb.model.YangCurrencyUser,org.springframework.validation.BindingResult)
2019/10/04 15:29:14,164 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/assets/allAsset],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.AssetsApiController.allAsset(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 15:29:14,164 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/assets/updateAssets],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.AssetsApiController.updateAssets(net.cyweb.model.YangMemberToken,net.cyweb.model.YangCurrencyUser,org.springframework.validation.BindingResult,net.cyweb.model.YangMember,org.springframework.validation.BindingResult)
2019/10/04 15:29:14,165 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/coin/list],methods=[GET]}" onto public net.cyweb.model.Result net.cyweb.controller.CoinController.list()
2019/10/04 15:29:14,165 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/coin/updateUserCurrency]}" onto public net.cyweb.model.Result net.cyweb.controller.CoinController.updateUserCurrency(net.cyweb.model.YangTibi)
2019/10/04 15:29:14,166 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font1/testCNY],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.Font1Controller.testCNY(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 15:29:14,173 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getAddress],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getAddress(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 15:29:14,174 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getUserInfo],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getUserInfo(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 15:29:14,174 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/symbols],methods=[POST]}" onto public java.util.Map net.cyweb.controller.FontController.symbols()
2019/10/04 15:29:14,174 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getCurrencyListChange],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getCurrencyListChange(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 15:29:14,175 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/sendVerificationCode],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.sendVerificationCode(java.util.Map<java.lang.String, java.lang.String>,javax.servlet.http.HttpServletRequest)
2019/10/04 15:29:14,175 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getUpCurrencyInfos],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getUpCurrencyInfos()
2019/10/04 15:29:14,175 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getTradeCurrencyInfos],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getTradeCurrencyInfos()
2019/10/04 15:29:14,176 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/updateAcceptancesPicInfo],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.updateAcceptancesPicInfo(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 15:29:14,176 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/findMembersOrdersByMemberId],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.findMembersOrdersByMemberId(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 15:29:14,177 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/creatAcceptancesOrder],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.creatAcceptancesOrder(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 15:29:14,177 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/cancleAcceptancesSellOrder],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.cancleAcceptancesSellOrder(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 15:29:14,177 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/saveBankInfoByUser],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.saveBankInfoByUser(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 15:29:14,178 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/findWorkOrderById],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.findWorkOrderById(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 15:29:14,178 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getC2CGuaByCurrencyId],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getC2CGuaByCurrencyId(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 15:29:14,178 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/addGoogleSecretAndQR],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.addGoogleSecretAndQR(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 15:29:14,179 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/findC2COrdersByAcceptances],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.findC2COrdersByAcceptances(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 15:29:14,179 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getOrdersByMemberId],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getOrdersByMemberId(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 15:29:14,179 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/cancleAcceptancesBuyOrder],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.cancleAcceptancesBuyOrder(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 15:29:14,179 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getUserOrderFiveRecordSell],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getUserOrderFiveRecordSell(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 15:29:14,180 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getHistoryOrdersByMemberId],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getHistoryOrdersByMemberId(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 15:29:14,180 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/saveAcceptancesBaseInfo],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.saveAcceptancesBaseInfo(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 15:29:14,180 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/updateAcceptancesIsReady],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.updateAcceptancesIsReady(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 15:29:14,181 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/updateFiatMoneyPwd],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.updateFiatMoneyPwd(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 15:29:14,181 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getWithdrawRecordByCurrencyId],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getWithdrawRecordByCurrencyId(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 15:29:14,181 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getCurrencyInfoById],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getCurrencyInfoById(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 15:29:14,181 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/findOldWorkOrders],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.findOldWorkOrders(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 15:29:14,182 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/primaryCertification],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.primaryCertification(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 15:29:14,182 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/findBanksInfoByUser],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.findBanksInfoByUser(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 15:29:14,182 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/checkAccountIsOnly],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.checkAccountIsOnly(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 15:29:14,183 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/withdrawNotifyReq],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.withdrawNotifyReq(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 15:29:14,183 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/addDepositAddress],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.addDepositAddress(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 15:29:14,183 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/deletAcceptancesById],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.deletAcceptancesById(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 15:29:14,184 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getArticleByArticleId],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getArticleByArticleId(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 15:29:14,184 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/findMembersOrdersByAcceptances],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.findMembersOrdersByAcceptances(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 15:29:14,184 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getNewCurrenciesList],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getNewCurrenciesList()
2019/10/04 15:29:14,184 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/acceptancesOrderRelease],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.acceptancesOrderRelease(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 15:29:14,185 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getUserOrderFiveRecordBuy],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getUserOrderFiveRecordBuy(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 15:29:14,185 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getTradeCurrencys],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getTradeCurrencys()
2019/10/04 15:29:14,185 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getCurrencyProfile],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getCurrencyProfile(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 15:29:14,185 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/login],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.login(java.util.Map<java.lang.String, java.lang.String>,javax.servlet.http.HttpServletRequest)
2019/10/04 15:29:14,186 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/sendEmailCodes],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.sendEmailCodes(java.util.Map<java.lang.String, java.lang.String>,javax.servlet.http.HttpServletRequest)
2019/10/04 15:29:14,186 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getNationality],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getNationality()
2019/10/04 15:29:14,186 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getLegalCurrencys],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getCoins()
2019/10/04 15:29:14,187 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/registerByEmail],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.registerByEmail(java.util.Map<java.lang.String, java.lang.String>,javax.servlet.http.HttpServletRequest)
2019/10/04 15:29:14,187 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/registerByPhone],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.registerByPhone(java.util.Map<java.lang.String, java.lang.String>,javax.servlet.http.HttpServletRequest)
2019/10/04 15:29:14,187 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/buyCoins],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.buyCoins(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 15:29:14,187 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getIncreaseList],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getIncreaseList()
2019/10/04 15:29:14,188 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/history],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.klineData(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 15:29:14,188 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getArticleList],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getArticleList(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 15:29:14,189 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/checkVerifyCode],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.checkVerifyCode(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 15:29:14,189 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/addWorkOrder],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.addWorkOrder(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 15:29:14,189 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/changePwd],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.changePwd(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 15:29:14,190 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/withdrawListReq],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.withdrawListReq(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 15:29:14,190 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/createOrder],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.createOrder(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 15:29:14,190 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/withdrawRequest],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.withdrawRequest(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 15:29:14,190 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/depositNotifyReq],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.depositNotifyReq(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 15:29:14,191 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/resetPwd],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.resetPwd(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 15:29:14,191 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/deleteBankInfo],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.deleteBankInfo(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 15:29:14,191 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getSelfCurrencys],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getSelfCurrencys(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 15:29:14,192 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/checkCardOnly],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.checkCardOnly(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 15:29:14,192 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/orderTraderMod],methods=[POST]}" onto public void net.cyweb.controller.FontController.orderTraderMod()
2019/10/04 15:29:14,192 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/isHasEnoughBM],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.isHasEnoughBM(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 15:29:14,192 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/cancelOrder],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.cancelOrder(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 15:29:14,193 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/addSelfCurrencys],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.addSelfCurrencys(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 15:29:14,193 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getAllCoins],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getAllCoins()
2019/10/04 15:29:14,193 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/checkAccount],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.checkAccount(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 15:29:14,194 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/sendPhoneCodes],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.mseSend(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 15:29:14,194 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getFlash],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getFlash(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 15:29:14,194 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/loginNeedGoogle],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.loginNeedGoogle(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 15:29:14,195 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getDepositRecord],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getDepositRecord(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 15:29:14,195 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/getGoogle],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.getGoogle(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 15:29:14,196 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/kCurrencyInfo],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.kCurrencyInfo(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 15:29:14,196 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/delMongodb],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.delMongodb(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 15:29:14,197 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/findFiatMoneyPwd],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.findFiatMoneyPwd(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 15:29:14,197 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/findMemberPwd],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.findMemberPwd(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 15:29:14,198 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/verifyGoogleCode],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.verifyGoogleCode(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 15:29:14,198 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/googleCancle],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.googleCancle(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 15:29:14,198 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/updateGoogle],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.googleUpdate(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 15:29:14,199 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/font/setFiatMoneyPwd],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontController.setFiatMoneyPwd(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 15:29:14,203 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/getConfig],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.getConfig(java.lang.String)
2019/10/04 15:29:14,204 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/getCurrency],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.getCurrency(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019/10/04 15:29:14,204 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/getCategory],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.getCategory(java.lang.String)
2019/10/04 15:29:14,204 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/getCurrencyListChange],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.getCurrencyListChange(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019/10/04 15:29:14,204 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/getCurrencyPairTrade],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.getCurrencyPairTrade(java.lang.String)
2019/10/04 15:29:14,204 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/getCurrencyPairOrder],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.getCurrencyPairOrder(java.lang.String,java.lang.String)
2019/10/04 15:29:14,205 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/delQianbaoAddress],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.delQianbaoAddress(java.lang.String,java.lang.String)
2019/10/04 15:29:14,205 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/getQianbaoAddress],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.getQianbaoAddress(java.lang.String,java.lang.String,java.lang.String)
2019/10/04 15:29:14,205 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/addQianbaoAddress],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.addQianbaoAddress(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019/10/04 15:29:14,205 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/getCurrencyDetailChange],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.getCurrencyDetailChange(java.lang.String,java.lang.String,java.lang.String)
2019/10/04 15:29:14,205 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/getArticleList],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.getArticleList(java.lang.String,java.lang.String,java.lang.String,int,int)
2019/10/04 15:29:14,206 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/getFlash]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.getFlash(java.lang.String,java.lang.String)
2019/10/04 15:29:14,206 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/initWeb]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.initWeb(java.lang.String,java.lang.String,java.lang.String)
2019/10/04 15:29:14,206 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/upload],methods=[POST],consumes=[multipart/form-data]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.upload(org.springframework.web.multipart.MultipartFile)
2019/10/04 15:29:14,206 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/getUserTradeData]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.getUserTradeData(java.lang.String,java.lang.String,int,int)
2019/10/04 15:29:14,207 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/currencyFindList],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.currencyFindList(java.lang.String,java.lang.String,java.lang.String)
2019/10/04 15:29:14,207 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/getTradeFee],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.getTradeFee(java.lang.String,java.lang.String)
2019/10/04 15:29:14,207 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/searchTrade],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.searchTrade(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019/10/04 15:29:14,207 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/readImage]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.readImage(java.lang.String)
2019/10/04 15:29:14,207 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/uploadByUser],methods=[POST],consumes=[multipart/form-data]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.uploadByUser(org.springframework.web.multipart.MultipartFile)
2019/10/04 15:29:14,208 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/getTradeData]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.getTradeData(java.lang.String,java.lang.String)
2019/10/04 15:29:14,208 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/getCurrencyPair],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.getCurrencyPair(java.lang.String,java.lang.String)
2019/10/04 15:29:14,208 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/addTimeLine],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.addTimeLine(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019/10/04 15:29:14,208 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/getArea],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.getArea(java.lang.String)
2019/10/04 15:29:14,208 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/getArticleDetail],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.getArticleDetail(java.lang.String,java.lang.String,java.lang.String)
2019/10/04 15:29:14,209 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/currencyFindAdd],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.currencyFindAdd(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019/10/04 15:29:14,209 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontSys/getTimeLine],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontSysController.getTimeLine(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019/10/04 15:29:14,210 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontTrade/findBanksInfoByUser],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontTradeController.findBanksInfoByUser(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 15:29:14,210 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontTrade/getC2COrder],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontTradeController.getC2COrder(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 15:29:14,210 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontTrade/c2cAssetChange],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontTradeController.c2cAssetChange(java.util.Map<java.lang.String, java.lang.String>,org.apache.catalina.servlet4preview.http.HttpServletRequest)
2019/10/04 15:29:14,211 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontTrade/getGua],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontTradeController.getGua(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 15:29:14,211 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontTrade/c2cOrdersBuy],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontTradeController.c2cOrdersBuy(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 15:29:14,211 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontTrade/confirmBuy],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontTradeController.confirmBuy(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 15:29:14,211 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontTrade/getGuaList],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontTradeController.getGuaList(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 15:29:14,212 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontTrade/getC2COrderList],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontTradeController.getC2COrderList(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 15:29:14,212 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontTrade/cancelBuy],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontTradeController.cancelBuy(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 15:29:14,212 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontTrade/cancleBuy],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontTradeController.cancleBuy(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 15:29:14,212 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontTrade/c2cOrdersSell],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontTradeController.c2cOrdersSell(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 15:29:14,216 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontUser/getLog],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontUserController.getLog(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019/10/04 15:29:14,217 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontUser/getFtLockRecordSum],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontUserController.getFtLockRecordSum(java.lang.String)
2019/10/04 15:29:14,217 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontUser/getGoogle],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontUserController.getGoogle(java.lang.String)
2019/10/04 15:29:14,217 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontUser/googleCancle],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontUserController.googleCancle(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019/10/04 15:29:14,217 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontUser/googleUpdate],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontUserController.googleUpdate(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019/10/04 15:29:14,218 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontUser/googleBind],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontUserController.googleBind(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019/10/04 15:29:14,218 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontUser/applyCoin],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontUserController.applyCoin(net.cyweb.model.YangCoinList,java.lang.String)
2019/10/04 15:29:14,218 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontUser/addLog],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontUserController.addLog(java.lang.String,java.lang.String,java.lang.String)
2019/10/04 15:29:14,218 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontUser/getTibiOutList],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontUserController.getTibiOutList(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019/10/04 15:29:14,219 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontUser/addTibiOut],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontUserController.addTibiOut(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019/10/04 15:29:14,219 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontUser/loginRecord]}" onto public net.cyweb.model.Result net.cyweb.controller.FontUserController.loginRecord(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019/10/04 15:29:14,221 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontUser/getCardLock],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontUserController.getCardLock(java.lang.String,java.lang.String,java.lang.String)
2019/10/04 15:29:14,221 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontUser/getFuntNum],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontUserController.getFuntNum(java.lang.String)
2019/10/04 15:29:14,222 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontUser/getFtLockRecord],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontUserController.getFtLockRecord(java.lang.String,java.lang.String,java.lang.String)
2019/10/04 15:29:14,222 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontUser/searchOrder],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontUserController.searchOrder(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019/10/04 15:29:14,222 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/fontUser/getCardOrder],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FontUserController.getCardOrder(java.lang.String,java.lang.String,java.lang.String)
2019/10/04 15:29:14,223 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/member/list],methods=[GET]}" onto public net.cyweb.model.Result net.cyweb.controller.FunMemberController.list()
2019/10/04 15:29:14,223 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/member/getmember],methods=[GET]}" onto public net.cyweb.model.Result net.cyweb.controller.FunMemberController.getMember(java.lang.Integer)
2019/10/04 15:29:14,223 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/member/getMemberCurrencyList],methods=[GET]}" onto public net.cyweb.model.Result net.cyweb.controller.FunMemberController.getMemberCurrencyList(java.lang.Integer)
2019/10/04 15:29:14,224 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/member/createMemberCurrency],methods=[GET]}" onto public net.cyweb.model.Result net.cyweb.controller.FunMemberController.createMemberCurrency(java.lang.Integer,java.lang.Integer,java.lang.String)
2019/10/04 15:29:14,224 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/member/getMemberCurrency],methods=[GET]}" onto public net.cyweb.model.Result net.cyweb.controller.FunMemberController.getMemberCurrency(java.lang.Integer,java.lang.Integer)
2019/10/04 15:29:14,224 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/member/flushCurrencyFlash],methods=[GET]}" onto public net.cyweb.model.Result net.cyweb.controller.FunMemberController.flushCurrencyFlash(java.lang.String,java.lang.String)
2019/10/04 15:29:14,224 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/member/finishConfirm],methods=[POST],consumes=[application/json]}" onto public net.cyweb.model.Result net.cyweb.controller.FunMemberController.finishConfirm(java.math.BigInteger,java.lang.String,java.lang.String,int)
2019/10/04 15:29:14,224 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/member/confirm],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FunMemberController.confirm(java.math.BigInteger,java.lang.String,int)
2019/10/04 15:29:14,225 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/member/xssTest],methods=[GET]}" onto public java.lang.String net.cyweb.controller.FunMemberController.xssTest(java.lang.String)
2019/10/04 15:29:14,225 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/member/chongzhi],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.FunMemberController.chongzhi(net.cyweb.model.YangTibi)
2019/10/04 15:29:14,225 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/test/testSocket]}" onto public void net.cyweb.controller.testCoinController.test1() throws java.lang.Exception
2019/10/04 15:29:14,226 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/trade/getToken],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.TradeApiController.getToken(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 15:29:14,226 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/trade/getUserOrderRecord],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.TradeApiController.getUserOrderFiveRecord(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 15:29:14,227 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/trade/getFontTradeLastTime],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.TradeApiController.getFontTradeLstTime(java.lang.String,java.lang.String)
2019/10/04 15:29:14,227 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/trade/getUserTradeRecord],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.TradeApiController.getUserTradeFiveRecord(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 15:29:14,227 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/trade/flushCurrencyPair],methods=[POST]}" onto public boolean net.cyweb.controller.TradeApiController.flushCurrencyPair(int)
2019/10/04 15:29:14,228 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/trade/mountOrder],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.TradeApiController.mountOrder(net.cyweb.model.YangOrders,org.springframework.validation.BindingResult)
2019/10/04 15:29:14,228 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/trade/klineData],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.TradeApiController.klineData(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019/10/04 15:29:14,228 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/trade/cancelOrder],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.TradeApiController.cancelOrder(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 15:29:14,228 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/trade/delMongodb],methods=[GET]}" onto public net.cyweb.model.Result net.cyweb.controller.TradeApiController.delMongodb(java.lang.String)
2019/10/04 15:29:14,228 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/trade/getCurrencyInfo],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.TradeApiController.getCurrencyInfo(java.lang.String)
2019/10/04 15:29:14,229 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/trade/createorder],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.TradeApiController.createorder(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 15:29:14,229 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/trade/klineDataTest],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.TradeApiController.klineDataTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019/10/04 15:29:14,229 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/trade/klineDataApi],methods=[POST]}" onto public net.cyweb.model.Result net.cyweb.controller.TradeApiController.klineDataApi(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)
2019/10/04 15:29:14,230 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019/10/04 15:29:14,232 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019/10/04 15:29:14,232 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019/10/04 15:29:14,233 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019/10/04 15:29:14,236 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019/10/04 15:29:14,236 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019/10/04 15:29:15,067 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 15:29:15,067 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2019/10/04 15:29:15,068 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 15:29:15,068 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2019/10/04 15:29:15,068 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2019/10/04 15:29:15,069 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2019/10/04 15:29:15,069 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 15:29:15,069 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 15:29:15,070 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 15:29:15,070 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2019/10/04 15:29:15,071 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 15:29:15,071 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 15:29:15,071 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2019/10/04 15:29:15,072 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 15:29:15,072 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2019/10/04 15:29:15,072 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 15:29:15,073 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2019/10/04 15:29:15,073 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2019/10/04 15:29:15,073 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 15:29:15,074 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/service-registry/instance-status],methods=[GET]}" onto public org.springframework.http.ResponseEntity org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.getStatus()
2019/10/04 15:29:15,074 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/service-registry/instance-status],methods=[POST]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.cloud.client.serviceregistry.endpoint.ServiceRegistryEndpoint.setStatus(java.lang.String)
2019/10/04 15:29:15,074 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 15:29:15,074 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2019/10/04 15:29:15,075 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 15:29:15,075 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2019/10/04 15:29:15,075 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2019/10/04 15:29:15,075 INFO   main                  org.springframework.boot.actuate.endpoint.mvc.EndpointHandlerMapping.register(AbstractHandlerMethodMapping.java:543) - Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2019/10/04 15:29:15,347 INFO   main                  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize(ExecutorConfigurationSupport.java:165) - Initializing ExecutorService  'clientInboundChannelExecutor'
2019/10/04 15:29:15,369 INFO   main                  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize(ExecutorConfigurationSupport.java:165) - Initializing ExecutorService  'clientOutboundChannelExecutor'
2019/10/04 15:29:15,423 INFO   main                  org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler.initialize(ExecutorConfigurationSupport.java:165) - Initializing ExecutorService  'messageBrokerTaskScheduler'
2019/10/04 15:29:15,485 INFO   main                  org.springframework.web.socket.server.support.WebSocketHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/endpointWisely/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019/10/04 15:29:15,495 INFO   main                  org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor.initialize(ExecutorConfigurationSupport.java:165) - Initializing ExecutorService  'brokerChannelExecutor'
2019/10/04 15:29:15,708 INFO   main                  org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.initControllerAdviceCache(RequestMappingHandlerAdapter.java:534) - Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@df5f5c0: startup date [Fri Oct 04 15:29:04 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3932c79a
2019/10/04 15:29:15,756 INFO   main                  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019/10/04 15:29:15,756 INFO   main                  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019/10/04 15:29:15,800 INFO   main                  org.springframework.web.servlet.handler.SimpleUrlHandlerMapping.registerHandler(AbstractUrlHandlerMapping.java:362) - Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019/10/04 15:29:17,031 INFO   main                  org.springframework.boot.autoconfigure.security.AuthenticationManagerConfiguration.configure(AuthenticationManagerConfiguration.java:173) - 

Using default security password: 315551af-33a4-4305-85cd-889c96449fcd

2019/10/04 15:29:17,089 INFO   main                  org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43) - Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/css/**'], Ant [pattern='/js/**'], Ant [pattern='/images/**'], Ant [pattern='/webjars/**'], Ant [pattern='/**/favicon.ico'], Ant [pattern='/error']]], []
2019/10/04 15:29:17,175 INFO   main                  org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43) - Creating filter chain: org.springframework.boot.actuate.autoconfigure.ManagementWebSecurityAutoConfiguration$LazyEndpointPathRequestMatcher@df04d12, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@757f47f0, org.springframework.security.web.context.SecurityContextPersistenceFilter@733e3c19, org.springframework.security.web.header.HeaderWriterFilter@7e5c8c80, org.springframework.web.filter.CorsFilter@7ff7e353, org.springframework.security.web.authentication.logout.LogoutFilter@aca2a0b, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@73c1dda3, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@22ba30b0, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@11ec2b2f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@70680f88, org.springframework.security.web.session.SessionManagementFilter@34d26a68, org.springframework.security.web.access.ExceptionTranslationFilter@2003edf, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5a20f793]
2019/10/04 15:29:17,186 INFO   main                  org.springframework.security.web.DefaultSecurityFilterChain.<init>(DefaultSecurityFilterChain.java:43) - Creating filter chain: org.springframework.boot.autoconfigure.security.SpringBootWebSecurityConfiguration$ApplicationNoWebSecurityConfigurerAdapter$1@752e4223, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7528089c, org.springframework.security.web.context.SecurityContextPersistenceFilter@6e349258, org.springframework.security.web.header.HeaderWriterFilter@71db6703, org.springframework.security.web.csrf.CsrfFilter@38318d67, org.springframework.security.web.authentication.logout.LogoutFilter@3fc2a1d1, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@41092c8, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2e590e36, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@136690b1, org.springframework.security.web.session.SessionManagementFilter@470ad01c, org.springframework.security.web.access.ExceptionTranslationFilter@7d12fb85]
2019/10/04 15:29:17,852 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.afterSingletonsInstantiated(MBeanExporter.java:431) - Registering beans for JMX exposure on startup
2019/10/04 15:29:17,853 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'dataSource' has been autodetected for JMX exposure
2019/10/04 15:29:17,860 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'environmentManager' has been autodetected for JMX exposure
2019/10/04 15:29:17,862 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2019/10/04 15:29:17,862 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2019/10/04 15:29:17,862 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'restartEndpoint' has been autodetected for JMX exposure
2019/10/04 15:29:17,862 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'serviceRegistryEndpoint' has been autodetected for JMX exposure
2019/10/04 15:29:17,863 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.autodetect(MBeanExporter.java:916) - Bean with name 'refreshScope' has been autodetected for JMX exposure
2019/10/04 15:29:17,865 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2019/10/04 15:29:17,878 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
2019/10/04 15:29:17,886 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'serviceRegistryEndpoint': registering with JMX server as MBean [org.springframework.cloud.client.serviceregistry.endpoint:name=serviceRegistryEndpoint,type=ServiceRegistryEndpoint]
2019/10/04 15:29:17,890 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2019/10/04 15:29:17,898 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=df5f5c0,type=ConfigurationPropertiesRebinder]
2019/10/04 15:29:17,901 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:671) - Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019/10/04 15:29:17,902 INFO   main                  org.springframework.jmx.export.annotation.AnnotationMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2019/10/04 15:29:17,903 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.afterSingletonsInstantiated(MBeanExporter.java:431) - Registering beans for JMX exposure on startup
2019/10/04 15:29:18,191 INFO   main                  org.springframework.context.support.DefaultLifecycleProcessor.start(DefaultLifecycleProcessor.java:343) - Starting beans in phase 0
2019/10/04 15:29:18,199 INFO   main                  org.springframework.cloud.netflix.eureka.InstanceInfoFactory.create(InstanceInfoFactory.java:70) - Setting initial instance status as: STARTING
2019/10/04 15:29:18,277 INFO   main                  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry.register(EurekaServiceRegistry.java:40) - Registering application javaApi with eureka with status UP
2019/10/04 15:29:18,281 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2019/10/04 15:29:18,287 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
2019/10/04 15:29:18,292 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2019/10/04 15:29:18,294 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2019/10/04 15:29:18,296 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2019/10/04 15:29:18,299 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2019/10/04 15:29:18,300 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2019/10/04 15:29:18,303 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2019/10/04 15:29:18,307 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2019/10/04 15:29:18,309 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2019/10/04 15:29:18,310 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2019/10/04 15:29:18,312 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2019/10/04 15:29:18,314 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2019/10/04 15:29:18,316 INFO   main                  org.springframework.boot.actuate.endpoint.jmx.EndpointMBeanExporter.registerBeanInstance(MBeanExporter.java:678) - Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
2019/10/04 15:29:18,317 INFO   main                  org.springframework.context.support.DefaultLifecycleProcessor.start(DefaultLifecycleProcessor.java:343) - Starting beans in phase 2147483647
2019/10/04 15:29:18,317 INFO   main                  org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler.start(AbstractBrokerMessageHandler.java:157) - Starting...
2019/10/04 15:29:18,317 INFO   main                  org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler.publishBrokerAvailableEvent(AbstractBrokerMessageHandler.java:260) - BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019/10/04 15:29:18,318 INFO   main                  org.springframework.messaging.simp.broker.SimpleBrokerMessageHandler.start(AbstractBrokerMessageHandler.java:166) - Started.
2019/10/04 15:29:18,331 INFO   main                  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.onApplicationEvent(DocumentationPluginsBootstrapper.java:84) - Context refreshed
2019/10/04 15:29:18,346 INFO   main                  springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper.onApplicationEvent(DocumentationPluginsBootstrapper.java:87) - Found 1 custom documentation plugin(s)
2019/10/04 15:29:18,356 INFO   main                  springfox.documentation.spring.web.scanners.ApiListingReferenceScanner.scan(ApiListingReferenceScanner.java:44) - Scanning for api listing references
2019/10/04 15:29:18,537 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:18,538 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:18,542 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:18,543 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:18,543 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:18,543 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:18,543 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:18,544 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,087 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,088 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,088 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,088 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,089 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,090 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,090 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,090 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,091 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,091 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,091 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,091 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,093 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,093 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,093 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,094 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,094 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,095 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,097 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,097 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,097 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,098 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,098 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,098 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,098 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,099 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,099 INFO   main                  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40) - Generating unique operation named: getArticleListUsingPOST_1
2019/10/04 15:29:19,101 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,102 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,102 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,102 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,102 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,104 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,104 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,104 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,105 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,105 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,105 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,105 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,106 INFO   main                  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40) - Generating unique operation named: getCurrencyListChangeUsingPOST_1
2019/10/04 15:29:19,106 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,107 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,108 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,108 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,109 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,110 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,110 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,111 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,111 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,112 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,112 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,112 INFO   main                  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40) - Generating unique operation named: getFlashUsingPOST_1
2019/10/04 15:29:19,113 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,113 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,114 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,114 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,114 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,115 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,115 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,116 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,116 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,116 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,118 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,118 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,118 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,119 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,119 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,119 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,119 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,120 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,120 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,121 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,121 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,122 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,122 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,123 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,123 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,124 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,124 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,125 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,125 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,126 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,126 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,127 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,127 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,128 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,128 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,129 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,129 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,130 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,130 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,131 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,131 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,131 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,132 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,132 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,132 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,133 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,133 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,134 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,134 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,135 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,135 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,136 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,137 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,137 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,137 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,138 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,138 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,138 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,139 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,139 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,139 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,139 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,140 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,140 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,140 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,140 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,142 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,142 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,142 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,143 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,143 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,143 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,144 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,144 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,144 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,145 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,146 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,147 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,147 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,148 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,149 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,150 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,151 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,152 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,152 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,153 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,153 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,153 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,153 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,153 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,153 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,165 INFO   main                  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40) - Generating unique operation named: findBanksInfoByUserUsingPOST_1
2019/10/04 15:29:19,174 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,174 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,174 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,176 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,176 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,176 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,176 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,176 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,176 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,176 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,176 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,177 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,178 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,178 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,178 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,178 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,178 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,178 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,178 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,178 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,178 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,178 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,178 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,178 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,178 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,179 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,179 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,179 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,179 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,179 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,179 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,179 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,179 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,179 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,179 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,179 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,180 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,180 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,180 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,181 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,181 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,181 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,182 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,182 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,183 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,183 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,184 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,184 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,185 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,185 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,186 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,186 INFO   main                  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40) - Generating unique operation named: getGoogleUsingPOST_1
2019/10/04 15:29:19,187 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,187 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,187 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,187 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,188 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,188 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,188 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,189 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,190 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,190 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,190 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,190 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,190 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,191 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,191 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,191 INFO   main                  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40) - Generating unique operation named: googleCancleUsingPOST_1
2019/10/04 15:29:19,192 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,192 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,192 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,192 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,193 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,193 INFO   main                  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40) - Generating unique operation named: googleUpdateUsingPOST_1
2019/10/04 15:29:19,194 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,194 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,194 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,194 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,194 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,195 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,195 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,196 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,196 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,196 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,197 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,198 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,198 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,198 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,198 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,198 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,199 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,199 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,199 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,199 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,200 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,200 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,200 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,200 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,200 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,201 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,201 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,201 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,201 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,201 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,202 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,202 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,202 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,202 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,202 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,203 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,203 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,203 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,203 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,203 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,204 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,204 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,204 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,204 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,204 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,205 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,205 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,205 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,209 INFO   main                  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40) - Generating unique operation named: cancelOrderUsingPOST_1
2019/10/04 15:29:19,211 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,215 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,215 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,219 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,220 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,220 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,220 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,220 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,220 INFO   main                  springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator.startingWith(CachingOperationNameGenerator.java:40) - Generating unique operation named: klineDataUsingPOST_1
2019/10/04 15:29:19,221 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,221 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,221 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,221 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,222 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,223 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,223 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,223 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,223 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,224 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,225 WARN   main                  springfox.documentation.swagger.readers.operation.OperationImplicitParameterReader.maybeGetModelRef(OperationImplicitParameterReader.java:88) - Coercing to be of type string. This may not even be a scalar type in actuality
2019/10/04 15:29:19,270 INFO   main                  org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer.start(TomcatEmbeddedServletContainer.java:201) - Tomcat started on port(s): 8009 (http)
2019/10/04 15:29:19,270 INFO   main                  org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration.onApplicationEvent(EurekaAutoServiceRegistration.java:117) - Updating port to 8009
2019/10/04 15:29:19,275 INFO   main                  net.cyweb.javaapi.logStarted(StartupInfoLogger.java:57) - Started javaapi in 16.05 seconds (JVM running for 17.317)
2019/10/04 15:29:21,657 INFO   http-nio-8009-exec-1  org.springframework.web.servlet.DispatcherServlet.initServletBean(FrameworkServlet.java:489) - FrameworkServlet 'dispatcherServlet': initialization started
2019/10/04 15:29:21,679 INFO   http-nio-8009-exec-1  org.springframework.web.servlet.DispatcherServlet.initServletBean(FrameworkServlet.java:508) - FrameworkServlet 'dispatcherServlet': initialization completed in 22 ms
2019/10/04 15:30:15,494 INFO   MessageBroker-1       org.springframework.web.socket.config.WebSocketMessageBrokerStats.run(WebSocketMessageBrokerStats.java:113) - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 6, active threads = 1, queued tasks = 3, completed tasks = 6]
2019/10/04 16:00:15,508 INFO   MessageBroker-4       org.springframework.web.socket.config.WebSocketMessageBrokerStats.run(WebSocketMessageBrokerStats.java:113) - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 6, active threads = 1, queued tasks = 3, completed tasks = 186]
2019/10/04 16:30:15,493 INFO   MessageBroker-6       org.springframework.web.socket.config.WebSocketMessageBrokerStats.run(WebSocketMessageBrokerStats.java:113) - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 6, active threads = 1, queued tasks = 3, completed tasks = 365]
2019/10/04 17:00:15,499 INFO   MessageBroker-5       org.springframework.web.socket.config.WebSocketMessageBrokerStats.run(WebSocketMessageBrokerStats.java:113) - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 6, active threads = 1, queued tasks = 3, completed tasks = 546]
2019/10/04 17:30:15,494 INFO   MessageBroker-3       org.springframework.web.socket.config.WebSocketMessageBrokerStats.run(WebSocketMessageBrokerStats.java:113) - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 6, active threads = 1, queued tasks = 3, completed tasks = 727]
2019/10/04 18:00:15,494 INFO   MessageBroker-2       org.springframework.web.socket.config.WebSocketMessageBrokerStats.run(WebSocketMessageBrokerStats.java:113) - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 6, active threads = 1, queued tasks = 3, completed tasks = 908]
2019/10/04 18:30:15,495 INFO   MessageBroker-3       org.springframework.web.socket.config.WebSocketMessageBrokerStats.run(WebSocketMessageBrokerStats.java:113) - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 6, active threads = 1, queued tasks = 3, completed tasks = 1089]
