<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="net.cyweb.mapper.YangCurrencyMapper">
    <resultMap id="BaseResultMap" type="net.cyweb.model.YangCurrency">
        <!--
          WARNING - @mbg.generated
        -->
        <id column="currency_id" jdbcType="INTEGER" property="currencyId"/>
        <result column="currency_namekr" jdbcType="VARCHAR" property="currencyNamekr"/>
        <result column="currency_name" jdbcType="VARCHAR" property="currencyName"/>
        <result column="currency_logo" jdbcType="VARCHAR" property="currencyLogo"/>
        <result column="currency_mark" jdbcType="VARCHAR" property="currencyMark"/>
        <result column="currency_all_money" jdbcType="DECIMAL" property="currencyAllMoney"/>
        <result column="currency_all_num" jdbcType="DECIMAL" property="currencyAllNum"/>
        <result column="currency_buy_fee" jdbcType="REAL" property="currencyBuyFee"/>
        <result column="currency_sell_fee" jdbcType="REAL" property="currencySellFee"/>
        <result column="currency_url" jdbcType="VARCHAR" property="currencyUrl"/>
        <result column="trade_currency_id" jdbcType="INTEGER" property="tradeCurrencyId"/>
        <result column="is_line" jdbcType="TINYINT" property="isLine"/>
        <result column="is_lock" jdbcType="TINYINT" property="isLock"/>
        <result column="port_number" jdbcType="INTEGER" property="portNumber"/>
        <result column="add_time" jdbcType="INTEGER" property="addTime"/>
        <result column="status" jdbcType="TINYINT" property="status"/>
        <result column="rpc_url" jdbcType="VARCHAR" property="rpcUrl"/>
        <result column="rpc_pwd" jdbcType="VARCHAR" property="rpcPwd"/>
        <result column="rpc_user" jdbcType="VARCHAR" property="rpcUser"/>
        <result column="currency_all_tibi" jdbcType="INTEGER" property="currencyAllTibi"/>
        <result column="detail_url" jdbcType="VARCHAR" property="detailUrl"/>
        <result column="qianbao_url" jdbcType="VARCHAR" property="qianbaoUrl"/>
        <result column="qianbao_key" jdbcType="VARCHAR" property="qianbaoKey"/>
        <result column="price_up" jdbcType="REAL" property="priceUp"/>
        <result column="price_down" jdbcType="REAL" property="priceDown"/>
        <result column="sort" jdbcType="INTEGER" property="sort"/>
        <result column="currency_digit_num" jdbcType="INTEGER" property="currencyDigitNum"/>
        <result column="guanwang_url" jdbcType="VARCHAR" property="guanwangUrl"/>
        <result column="tibi_fee" jdbcType="REAL" property="tibiFee"/>
        <result column="tibi_qrs" jdbcType="INTEGER" property="tibiQrs"/>
        <result column="tibi_small" jdbcType="REAL" property="tibiSmall"/>
        <result column="chongbi_open" jdbcType="INTEGER" property="chongbiOpen"/>
        <result column="tibi_open" jdbcType="INTEGER" property="tibiOpen"/>
        <result column="currency_digit_cny" jdbcType="INTEGER" property="currencyDigitCny"/>
        <result column="currency_digit_usd" jdbcType="INTEGER" property="currencyDigitUsd"/>
        <result column="txurl" jdbcType="VARCHAR" property="txurl"/>
        <result column="trade_market" jdbcType="VARCHAR" property="tradeMarket"/>
        <result column="currency_accuracy" jdbcType="INTEGER" property="currencyAccuracy"/>
        <result column="main_id" jdbcType="VARCHAR" property="mainId"/>
        <result column="exten_info" jdbcType="VARCHAR" property="extenInfo"/>
        <result column="bean" jdbcType="VARCHAR" property="bean"/>
        <result column="tibi_fee_num" jdbcType="DECIMAL" property="tibiFeeNum"/>
        <result column="min_num" jdbcType="DECIMAL" property="minNum"/>
        <result column="gas_limit" jdbcType="BIGINT" property="gasLimit"/>
        <result column="currency_content" jdbcType="LONGVARCHAR" property="currencyContent"/>
        <result column="currency_content" jdbcType="LONGVARCHAR" property="currencyContent"/>
        <result column="father_cy_mark" jdbcType="VARCHAR" property="fatherCyMark"/>
    </resultMap>

    <resultMap id="ext" type="net.cyweb.model.modelExt.YangCurrencyExt" extends="BaseResultMap">
        <result column="num" jdbcType="DECIMAL" property="num"/>
        <result column="forzen_num" jdbcType="DECIMAL" property="forzenNum"/>
    </resultMap>


    <select id="getCurrencyandUserAssets" parameterType="net.cyweb.model.modelExt.YangCurrencyExt" resultMap="ext">

        SELECT c.currency_id,c.currency_mark,c.tibi_open,c.chongbi_open,if(cu.num,cu.num,0) as
        num,if(cu.forzen_num,cu.forzen_num,0) as forzen_num from yang_currency c left join yang_currency_user cu on
        c.currency_id=cu.currency_id

        <if test="memberId != '' and memberId != null ">
            and cu.member_id = #{memberId}
        </if>


        where 1 = 1


        <if test="currencyMark != '' and currencyMark != null ">

            and c.currency_mark like concat('%', #{currencyMark}, '%')
        </if>

        and is_line = 1


    </select>

    <select id="getCurrencyETH" resultType="java.util.Map">
    select * from  yang_currency where is_line=#{lineFlag} and ( bean = #{a} or bean = #{b} )
  </select>


    <select id="getCurrency" resultType="java.util.Map">
        select
        *
        from yang_currency a left join yang_currency_pair b on a.currency_id =b.currency_id
        <where>
            <if test="currencyId!=null and currencyId!=''">
                and a.currency_id=#{currencyId}
            </if>
            <if test="currencyMark!=null and currencyMark!=''">
                and a.currency_mark=#{currencyMark}
            </if>
            <if test="searchText!=null and searchText!=''">
                and a.currency_mark LIKE "%"#{searchText}"%"
            </if>
            <if test="market!=null and market!=''">
                and b.currency_trade_id=#{market}
            </if>
            <if test="isLine!=null and isLine!=''">
                and a.is_line =#{isLine}
            </if>
        </where>
        group by a.currency_id
    </select>

    <select id="getCoins" resultType="java.util.Map">
    select
      a.currency_id as currencyId,a.currency_mark as currencyMark,a.currency_logo as currencyLogo
    from
      yang_currency a
    where
      a.is_buycointomoney = 1
    ORDER BY  a.currency_mark='BTC' desc,a.currency_mark='ETH' desc,a.currency_mark='USDT' desc,a.currency_id ASC
  </select>

    <select id="getAllCoins" resultType="java.util.Map">
    select
    currency_id currencyId, currency_logo currencyLogo, currency_mark currencyMark
    from
    yang_currency a
    ORDER BY  a.currency_mark='BTC' desc,a.currency_mark='ETH' desc,a.currency_mark='USDT' desc,a.currency_id ASC
  </select>

    <select id="getCoinById" resultMap="BaseResultMap" parameterType="java.lang.Integer">
    select * from yang_currency where currency_id = #{currencyId}
  </select>

    <select id="getCurrencyIdByCurrencyMark" resultType="java.lang.Integer">
        select
        currency_id currencyId
        from yang_currency
        where currency_mark IN
        <foreach item="item" index="index" collection="array" open="(" separator="," close=")">
            #{item}
        </foreach>
        ORDER BY currency_id ASC

    </select>

    <select id="getYangCurrencyById" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select * from yang_currency
        <where>
            <if test='id != null and id != "" '>
                currency_id = #{id}
            </if>
        </where>
  </select>

    <select id="isExistTable" parameterType="java.lang.String" resultType="java.lang.Integer">
    select count(*) from information_schema.TABLES where table_name = #{tableName} and  table_schema='funcoin'
  </select>

    <select id="selectYangAddressByMemberId" resultType="java.util.Map">
        select id ,member_id memberId, address ,created_time createdTime
        from ${tableName}
        where member_id = #{memberId}
    </select>

    <update id="updateMemberIdInYangAddress">
        update ${tableName} set member_id = #{memberId} where member_id=0 limit 1;
    </update>

    <select id="selectAddressByMemberId" resultType="java.lang.String">
        select address from ${tableName} where member_id = #{memberId}
    </select>

  <select id="getCurrencyInfoById" resultMap="BaseResultMap">
    SELECT
    currency_sell_fee,currency_mark,min_num
    FROM
    yang_currency
      <where>
          <if test='currencyId != null and currencyId != "" '>
              currency_id=#{currencyId}
          </if>
      </where>
  </select>

    <select id="getCurrencyMarkByCurrencyId" resultType="java.util.Map">
    SELECT
    a.currency_mark as currencyMark
    FROM
    yang_currency a
    WHERE
    currency_id=#{currencyId}
  </select>
</mapper>