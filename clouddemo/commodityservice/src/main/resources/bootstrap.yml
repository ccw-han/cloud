###服务注册到eureka注册中心的地址
eureka:
  client:
    service-url:
      defaultZone: http://zpc:123456@127.0.0.1:8100/eureka/
    ###因为该应用为服务提供者，是eureka的一个客户端，需要注册到注册中心
    register-with-eureka: true
    ###是否需要从eureka上检索服务
    fetch-registry: true
  instance:
    prefer-ip-address: true #将自己的ip地址注册到Eureka服务中
    ip-address: 127.0.0.1
    instance-id: ${spring.application.name}###${server.port} #指定实例id
spring:
  cloud:
    config:
      uri: http://127.0.0.1:7788/  #配置中心的地址
      name: service  # 对应{application}部分
      profile: dev #对应配置服务中的{profile}
      label: master #对应的分支
      discovery:
        enabled: true #启用发现服务功能
        service-id: microservice-config-server #指定配置中心工程的名称
#  rabbitmq: #RabbitMQ相关的配置
  #说明刷新的地址/bus-refresh是由Spring Cloud Bus来处理，之前的/refresh依然是由以前的逻辑处理。
  #所以要修改Git服务器中的web hook的地址：（修改或者添加都可以）
  #更新文件到git服务器，Git服务器通过web钩子通知到8081的/bus/refresh，8081的实例将消息发送到springCloudBus的交换机，由于8081的队列页绑定到交换机，所以8082也获取到了更新的通知，然后去Config Server获取最新的数据。
#    host: 127.0.0.1
#    port: 5672
#    username: guest
#    password: guest
#上面这些与spring cloud相关的属性必须配置在bootstrap.yml中，这样config部分内容才能被正确加载。
  #
  #因为config的相关配置会先于application.yml，而bootstrap.yml的加载也是先于application.yml文件的。